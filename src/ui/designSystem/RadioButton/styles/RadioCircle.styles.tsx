/**
 ⚠️ Design System — Protected file
 Do not edit this file without prior approval from the Design System team.
 */

import { styled } from 'styled-components/native'

import { getBorderHoverStyle, getRadioColors } from 'ui/designSystem/RadioButton/helpers'
import { RadioState } from 'ui/designSystem/RadioButton/types'
import { getSpacing } from 'ui/theme'

const DOT_SIZE = getSpacing(2.5)

type RadioCircleProps = {
  variant: 'default' | 'detailed'
  radioState: RadioState
  isHover?: boolean
}

export const RadioOuterCircle = styled.View<RadioCircleProps>(
  ({ theme, variant, isHover, radioState }) => {
    const { borderColor, backgroundColor } = getRadioColors(radioState, theme, {
      componentPart: 'circle',
      variant,
    })
    return {
      width: theme.radioButton.size,
      height: theme.radioButton.size,
      justifyContent: 'center',
      alignItems: 'center',
      borderRadius: theme.borderRadius.radioButton,
      borderWidth: theme.radioButton.border.size,
      borderColor,
      backgroundColor,
      ...getBorderHoverStyle({ radioState, theme, isHover }),
    }
  }
)

export const RadioInnerDot = styled.View<RadioCircleProps>(
  ({ theme, variant, isHover, radioState }) => {
    const { backgroundColor } = getRadioColors(radioState, theme, {
      componentPart: 'round',
      variant,
    })
    return {
      width: DOT_SIZE,
      height: DOT_SIZE,
      borderRadius: DOT_SIZE / 2,
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor,
      ...getBorderHoverStyle({ radioState, theme, isHover }),
    }
  }
)
