import React from 'react'
import { Defs, LinearGradient, Path, Stop } from 'react-native-svg'
import styled from 'styled-components/native'

import { AccessibleSvg } from 'ui/svg/AccessibleSvg'
import { AccessibleBicolorIcon } from 'ui/svg/icons/types'
import { svgIdentifier } from 'ui/svg/utils'

const BicolorIdCardInvalidSvg: React.FunctionComponent<AccessibleBicolorIcon> = ({
  size,
  color,
  color2,
  accessibilityLabel,
  testID,
}) => {
  const { id: gradientId, fill: gradientFill } = svgIdentifier()
  const height = typeof size === 'string' ? size : ((size as number) * 156) / 200

  return (
    <AccessibleSvg
      width={size}
      height={height}
      viewBox="0 0 200 156"
      fill="none"
      accessibilityLabel={accessibilityLabel}
      testID={testID}>
      <Path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M116.549 117.67L39.1248 114.122L39.1224 114.122C35.7465 113.953 33.157 111.14 33.3311 107.808L37.2937 31.954C37.4678 28.6221 40.337 26.081 43.7129 26.2495L142.878 31.1995C146.254 31.368 148.843 34.1816 148.669 37.5135L147.183 70.2845C147.121 71.4666 148.038 72.4731 149.23 72.5326C150.422 72.5922 151.438 71.6821 151.5 70.5L152.986 37.729C153.282 32.0668 148.868 27.2515 143.099 26.9635L43.9342 22.0135C38.1648 21.7255 33.2725 26.0763 32.9767 31.7385L29.014 107.592C28.7183 113.254 33.1305 118.069 38.8987 118.358L38.9011 118.358L118.309 121.997C118.543 122.009 118.771 121.984 118.985 121.927C124.057 129.222 132.519 134 142.104 134C157.628 134 170.208 121.466 170.208 106C170.208 101.175 168.976 96.6259 166.808 92.6512C166.219 91.5726 164.864 91.1735 163.782 91.7599C162.699 92.3463 162.298 93.6961 162.887 94.7747C164.71 98.1158 165.745 101.938 165.745 106C165.745 119.011 155.163 129.554 142.104 129.554C129.045 129.554 118.463 119.011 118.463 106C118.463 92.989 129.045 82.4461 142.104 82.4461C146.128 82.4461 149.918 83.4449 153.22 85.2131C154.306 85.7943 155.658 85.3887 156.242 84.3072C156.825 83.2258 156.418 81.8779 155.333 81.2967C151.391 79.186 146.876 78 142.104 78C126.58 78 114 90.5335 114 106C114 110.165 114.912 114.118 116.549 117.67ZM59.8506 43.5944L59.8538 43.5903C62.227 40.488 66.0785 38.5735 70.3164 38.7851C77.0974 39.1236 82.3302 44.7872 81.9817 51.4591L81.6109 58.5569C81.2623 65.2288 75.4665 70.3419 68.6855 70.0034C61.9045 69.6649 56.6716 64.0013 57.0202 57.3294L57.391 50.2316C57.5207 47.7489 58.4059 45.4494 59.8506 43.5944ZM63.3049 46.1431L63.2951 46.1559L63.2905 46.1617C62.3726 47.3373 61.7931 48.8172 61.708 50.4471L61.3372 57.5449C61.1112 61.8714 64.5038 65.5476 68.9068 65.7674C73.3097 65.9872 77.0678 62.6679 77.2939 58.3414L77.6647 51.2436C77.8907 46.9171 74.498 43.2409 70.0951 43.0211C67.3419 42.8836 64.846 44.1235 63.3049 46.1431ZM87.3212 94.244C87.3865 94.4656 87.3156 94.7049 87.1397 94.8567C85.8791 95.9447 84.5162 96.9292 83.0883 97.7778C82.0672 98.3847 81.7421 99.6866 82.3562 100.687C82.9722 101.69 84.3026 102.014 85.3268 101.405C87.496 100.116 89.5271 98.561 91.3316 96.8206C91.8572 96.3136 92.0829 95.5796 91.9323 94.8734C89.6301 84.0766 80.1996 75.7019 68.4186 75.1138C56.6376 74.5257 46.3834 81.9179 42.9681 92.4293C42.7445 93.1174 42.893 93.8708 43.3641 94.4277C48.9818 101.068 57.2971 105.532 66.8047 106.007C69.3921 106.136 71.9487 105.974 74.4146 105.511C75.5904 105.291 76.3546 104.178 76.133 103.032C75.9111 101.885 74.7819 101.124 73.6045 101.345C71.4962 101.741 69.2867 101.884 67.026 101.771C59.3638 101.389 52.5838 98.0164 47.738 92.889C47.5788 92.7205 47.5332 92.4753 47.6212 92.2612C50.8902 84.3128 58.9892 78.8902 68.1973 79.3498C77.4059 79.8095 84.8979 86.0108 87.3212 94.244ZM101.275 46.0123C101.336 44.8471 102.348 43.9423 103.544 44.002L133.845 45.5145C135.041 45.5743 135.953 46.5751 135.893 47.7403C135.832 48.9054 134.82 49.8103 133.623 49.7505L103.323 48.238C102.126 48.1783 101.214 47.1774 101.275 46.0123ZM102.695 60.2565C101.498 60.1967 100.487 61.1015 100.426 62.2667C100.365 63.4319 101.277 64.4327 102.474 64.4925L124.51 65.5925C125.707 65.6522 126.719 64.7474 126.78 63.5822C126.84 62.417 125.928 61.4162 124.732 61.3565L102.695 60.2565ZM135 95.3369C134.007 94.3459 132.396 94.3444 131.401 95.3334C130.407 96.3224 130.405 97.9275 131.398 98.9184L138.499 106.008L131.443 113.086C130.452 114.08 130.458 115.685 131.455 116.671C132.452 117.658 134.063 117.652 135.053 116.659L142.104 109.587L149.216 116.627C150.213 117.614 151.824 117.608 152.814 116.615C153.805 115.622 153.799 114.017 152.802 113.03L145.693 105.993L152.762 98.9667C153.757 97.9778 153.758 96.3727 152.766 95.3816C151.773 94.3905 150.162 94.3887 149.168 95.3775L142.089 102.414L135 95.3369Z"
        fill={gradientFill}
      />
      <Defs>
        <LinearGradient id={gradientId} x1="28.841%" x2="71.159%" y1="0%" y2="100%">
          <Stop offset="0%" stopColor={color2} />
          <Stop offset="100%" stopColor={color} />
        </LinearGradient>
      </Defs>
    </AccessibleSvg>
  )
}

export const BicolorIdCardInvalid = styled(BicolorIdCardInvalidSvg).attrs(
  ({ color, color2, size, theme }) => ({
    color: color ?? theme.colors.primary,
    color2: color2 ?? color ?? theme.colors.secondary,
    size: size ?? theme.illustrations.sizes.medium,
  })
)``
