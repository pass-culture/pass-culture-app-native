import React from 'react'
import { Defs, LinearGradient, Path, Stop } from 'react-native-svg'
import styled from 'styled-components/native'

import { AccessibleSvg } from 'ui/svg/AccessibleSvg'
import { AccessibleIcon } from 'ui/svg/icons/types'
import { svgIdentifier } from 'ui/svg/utils'

const TrophySVG: React.FunctionComponent<AccessibleIcon> = ({
  size,
  accessibilityLabel,
  color,
  color2,
  testID,
}) => {
  const { id: gradientId, fill: gradientFill } = svgIdentifier()

  return (
    <AccessibleSvg
      width={size}
      height={size}
      viewBox="0 0 40 40"
      accessibilityLabel={accessibilityLabel}
      testID={testID}>
      <Defs>
        <LinearGradient
          id={gradientId}
          x1="3.33331"
          y1="2.5"
          x2="17.0896"
          y2="38.6088"
          gradientUnits="userSpaceOnUse">
          <Stop stopColor={color} />
          <Stop offset="1" stopColor={color2} />
        </LinearGradient>
      </Defs>
      <Path
        clipRule="evenodd"
        fillRule="evenodd"
        fill={gradientFill}
        d="M31.1168 4.16667C31.1206 4.65587 31.1233 5.38655 31.1223 5.74035C31.1198 6.72973 31.0895 8.10403 30.978 9.64474C30.768 12.5482 30.2637 16.151 29.0496 18.8662C29.1546 18.8026 29.259 18.7396 29.3625 18.6772L29.3626 18.6771L29.4048 18.6517C29.9683 18.3118 30.5091 17.9843 31.0291 17.6193C32.0563 16.8983 32.9755 16.0486 33.6694 14.7776C34.365 13.5033 34.8663 11.7458 34.9548 9.16667H33.4436C32.9711 9.16667 32.5881 8.79357 32.5881 8.33333C32.5881 7.8731 32.9711 7.5 33.4436 7.5H34.9688C35.9147 7.5 36.6971 8.25981 36.6657 9.20006C36.5731 11.9739 36.0306 14.0023 35.1802 15.56C34.3262 17.1244 33.1944 18.1537 32.0296 18.9714C31.4536 19.3757 30.8632 19.7324 30.3056 20.0687L30.2847 20.0813L30.2846 20.0813L30.2845 20.0814C29.7266 20.4179 29.2036 20.7333 28.7097 21.0781C27.7234 21.7666 26.8982 22.5426 26.3284 23.6949C26.25 23.8535 26.1269 23.9769 25.9808 24.0577C24.9561 25.4616 24.0709 26.4144 23.5688 26.9165C23.4029 27.0823 23.3525 27.2164 23.348 27.3032C23.2962 28.2987 23.4869 30.6376 26.3606 32.0466C26.6493 32.1881 26.8315 32.4761 26.8315 32.7909V36.6667C26.8315 37.1269 26.4484 37.5 25.9759 37.5H14.04C13.5675 37.5 13.1844 37.1269 13.1844 36.6667V32.7909C13.1844 32.4897 13.3514 32.2118 13.6211 32.0643C16.1261 30.6941 16.5452 28.407 16.5977 27.3215C16.6034 27.2041 16.5479 27.0346 16.3605 26.8449C15.6542 26.1299 14.3032 24.6335 12.863 22.3549C12.8211 22.3261 12.7812 22.2931 12.7439 22.2559C12.4033 21.9153 11.8523 21.5416 11.3419 21.2354C11.2496 21.18 11.1432 21.1237 11.0313 21.0646C10.4475 20.7561 9.71651 20.3698 10.0878 19.6273C10.3269 19.1489 10.7206 19.1148 11.1266 19.2427C9.78473 16.4909 9.24235 12.6846 9.02248 9.64473C9.01081 9.48347 9.00004 9.32403 8.99009 9.16667H5.04535C5.1002 10.7658 5.31382 12.0487 5.63352 13.0958C5.81588 13.693 6.03309 14.2147 6.27608 14.6756C6.57058 15.2344 6.90599 15.7098 7.27023 16.1264C7.51591 16.4073 7.77665 16.6638 8.05007 16.9026C8.39949 17.2079 8.47541 17.7334 8.19022 18.0994C7.90736 18.4623 7.38253 18.5237 7.03428 18.2228C6.67155 17.9095 6.2379 17.5162 5.96752 17.207C5.52078 16.696 5.11077 16.114 4.75386 15.4369C4.46001 14.8794 4.20425 14.2614 3.9934 13.5709C3.62222 12.3553 3.39134 10.9183 3.33422 9.19369C3.30281 8.2455 4.09391 7.5 5.0314 7.5H8.90995C8.88776 6.83444 8.87943 6.23858 8.87815 5.74034C8.87669 5.16824 8.88862 4.63195 8.92995 4.16667H8.02247C7.54996 4.16667 7.16691 3.79357 7.16691 3.33333C7.16691 2.8731 7.54996 2.5 8.02247 2.5H9.73359L9.74605 2.50009L9.75615 2.5H25.1426C25.6151 2.5 25.9981 2.8731 25.9981 3.33333C25.9981 3.79357 25.6151 4.16667 25.1426 4.16667H10.5927C10.5901 4.3768 10.5886 5.45728 10.5893 5.73618C10.5917 6.69778 10.6213 8.03323 10.7294 9.5276C10.9478 12.5482 11.4803 16.0987 12.6833 18.5503C14.5759 22.4072 16.7031 24.7878 17.5936 25.6893C17.6387 25.735 17.6831 25.7831 17.7264 25.8333H19.1481C19.6206 25.8333 20.0037 26.2064 20.0037 26.6667C20.0037 27.1269 19.6206 27.5 19.1481 27.5H18.3014C18.2302 28.6383 17.8235 30.8019 15.9138 32.5H20.9634C21.4359 32.5 21.819 32.8731 21.819 33.3333C21.819 33.7936 21.4359 34.1667 20.9634 34.1667H14.8956V35.8333H25.1204V33.2874C21.8347 31.4322 21.5731 28.4873 21.6391 27.2188C21.6716 26.5944 21.9989 26.0977 22.3431 25.7535C23.1917 24.905 25.3776 22.5029 27.3171 18.5503C28.5201 16.0988 29.0526 12.5482 29.2711 9.5276C29.3792 8.03323 29.4088 6.69778 29.4112 5.73618C29.4113 5.66417 29.4116 5.5372 29.412 5.38067L29.4121 5.37449L29.4121 5.35838L29.4121 5.35727V5.35632C29.4136 4.81627 29.4159 3.95227 29.4115 3.75L29.4112 3.33333L29.4114 3.33325C29.4114 2.87305 29.7945 2.5 30.267 2.5H31.9781C32.4506 2.5 32.8336 2.8731 32.8336 3.33333C32.8336 3.79357 32.4506 4.16667 31.9781 4.16667H31.1168Z"
      />
    </AccessibleSvg>
  )
}

export const BicolorTrophy = styled(TrophySVG).attrs(({ color, color2, size, theme }) => ({
  color: color ?? theme.colors.secondary,
  color2: color2 ?? theme.colors.primary,
  size: size ?? theme.illustrations.sizes.medium,
}))``
