import * as React from 'react'
import { Defs, LinearGradient, Stop, Path } from 'react-native-svg'
import styled from 'styled-components/native'

import { AccessibleSvg } from 'ui/svg/AccessibleSvg'
import { svgIdentifier } from 'ui/svg/utils'

import { AccessibleBicolorIconInterface } from './types'

const BicolorShoutSvg: React.FC<AccessibleBicolorIconInterface> = ({
  size,
  color,
  color2,
  accessibilityLabel,
  testID,
}) => {
  const { id: gradientId, fill: gradientFill } = svgIdentifier()

  const height = typeof size === 'string' ? size : ((size as number) * 156) / 200
  return (
    <AccessibleSvg
      width={size}
      height={height}
      viewBox="0 0 200 156"
      fill="none"
      accessibilityLabel={accessibilityLabel}
      testID={testID}>
      <Path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M126.947 28.8402L150.624 117.481C150.995 118.721 151.116 120.024 150.98 121.311C150.844 122.599 150.453 123.847 149.832 124.983C149.18 126.119 148.31 127.114 147.273 127.912C146.236 128.71 145.051 129.294 143.788 129.631C142.957 129.866 142.098 129.984 141.235 129.984C139.054 129.975 136.937 129.247 135.208 127.913C133.48 126.579 132.237 124.712 131.671 122.6L130.732 119.099L116.649 118.157L116.297 123.629C116.074 126.595 114.74 129.366 112.563 131.386C110.386 133.405 107.527 134.523 104.561 134.515H103.769L100.307 134.279C99.9945 134.26 99.689 134.18 99.4077 134.043C99.1265 133.905 98.8751 133.714 98.6679 133.478C98.4607 133.243 98.3019 132.97 98.2005 132.673C98.0991 132.376 98.0571 132.062 98.077 131.749C98.0918 131.431 98.1701 131.119 98.3073 130.831C98.4445 130.544 98.6379 130.287 98.8758 130.076C99.1138 129.864 99.3917 129.703 99.6929 129.602C99.9941 129.5 100.313 129.46 100.63 129.484L104.092 129.719C104.987 129.783 105.886 129.668 106.736 129.381C107.586 129.094 108.371 128.64 109.046 128.046C109.72 127.452 110.27 126.73 110.663 125.921C111.057 125.112 111.286 124.233 111.338 123.335L111.691 117.863L69.0895 115.068L68.62 120.511C68.5563 121.406 68.67 122.305 68.9547 123.156C69.2393 124.007 69.6892 124.793 70.2784 125.469C70.8677 126.144 71.5845 126.696 72.3876 127.092C73.1906 127.489 74.0641 127.722 74.9574 127.778L84.6101 128.425C85.2405 128.47 85.8286 128.759 86.2501 129.231C86.6717 129.704 86.8937 130.322 86.8692 130.955C86.8506 131.276 86.7689 131.59 86.6289 131.879C86.4889 132.168 86.2934 132.427 86.0535 132.64C85.8136 132.853 85.5341 133.017 85.2311 133.121C84.928 133.226 84.6073 133.269 84.2874 133.25L74.6346 132.602C71.5675 132.368 68.7146 130.936 66.6898 128.615C64.665 126.293 63.6303 123.266 63.8083 120.187L64.1898 114.745L49.52 113.774L43.212 115.451C42.0291 115.772 40.7948 115.856 39.5796 115.698C38.3644 115.54 37.192 115.144 36.1295 114.532C35.0669 113.92 34.135 113.105 33.3869 112.131C32.6388 111.158 32.0892 110.047 31.7695 108.861L28.3368 95.9164C28.0154 94.7313 27.9329 93.4939 28.0941 92.2765C28.2553 91.0591 28.657 89.8862 29.2757 88.8263C29.8928 87.7473 30.7241 86.8068 31.7183 86.0629C32.7125 85.319 33.8483 84.7876 35.0556 84.5016L41.3049 82.7659L108.786 37.5189L107.847 33.9592C107.498 32.7013 107.407 31.3856 107.578 30.0913C107.749 28.797 108.18 27.5508 108.845 26.4278C109.722 24.9385 110.971 23.7029 112.467 22.8418C113.963 21.9807 115.657 21.5234 117.382 21.5148C119.561 21.5003 121.682 22.2119 123.414 23.5379C125.145 24.8638 126.388 26.729 126.947 28.8402ZM38.6488 110.323C39.6834 110.921 40.9092 111.093 42.0677 110.803L46.5567 109.626L40.6888 87.9437L36.3465 89.1499C35.7415 89.2796 35.1692 89.5318 34.6647 89.8909C34.1602 90.2501 33.7342 90.7087 33.4125 91.2387C33.1214 91.7516 32.9352 92.3176 32.8646 92.9035C32.7941 93.4895 32.8407 94.0836 33.0018 94.6513L36.5225 107.596C36.852 108.747 37.6143 109.725 38.6488 110.323ZM45.031 86.0314L51.251 109.067L129.294 114.215L110.165 42.432L45.031 86.0314ZM143.209 124.637C144.115 124.188 144.868 123.479 145.372 122.6C145.726 122.031 145.963 121.397 146.068 120.735C146.174 120.073 146.147 119.397 145.989 118.746L122.282 30.0758C121.995 28.9958 121.358 28.0422 120.471 27.3657C119.584 26.6891 118.497 26.3281 117.382 26.3396C116.927 26.3423 116.474 26.4016 116.033 26.5161C114.79 26.8772 113.737 27.7113 113.099 28.8402C112.747 29.4097 112.511 30.0436 112.405 30.7052C112.3 31.3668 112.326 32.0429 112.483 32.6942L136.013 121.364C136.273 122.344 136.817 123.225 137.577 123.894C138.337 124.563 139.278 124.991 140.28 125.123C141.283 125.256 142.302 125.087 143.209 124.637ZM145.93 61.3779C146.565 61.3659 147.173 61.1138 147.632 60.6718L160.512 47.7567C160.963 47.3042 161.216 46.6904 161.216 46.0504C161.216 45.4104 160.963 44.7966 160.512 44.3441C160.06 43.8915 159.448 43.6373 158.81 43.6373C158.172 43.6373 157.56 43.8915 157.108 44.3441L144.228 57.2592C143.891 57.5966 143.662 58.0265 143.569 58.4946C143.476 58.9627 143.524 59.4479 143.706 59.8888C143.888 60.3297 144.197 60.7066 144.593 60.9716C144.988 61.2367 145.454 61.3781 145.93 61.3779ZM150.599 71.5247C150.18 71.2003 149.88 70.7463 149.744 70.2331L149.715 70.3508C149.631 70.0455 149.608 69.7266 149.649 69.4125C149.689 69.0985 149.791 68.7957 149.95 68.5218C150.108 68.2479 150.32 68.0084 150.571 67.8173C150.823 67.6262 151.11 67.4874 151.416 67.4089L169.02 62.7018C169.601 62.6164 170.194 62.7472 170.685 63.0696C171.177 63.3919 171.534 63.8834 171.689 64.4514C171.844 65.0195 171.787 65.6249 171.527 66.1534C171.268 66.6819 170.825 67.0971 170.282 67.3206L152.678 72.0277C152.474 72.0563 152.266 72.0563 152.062 72.0277C151.532 72.026 151.018 71.8492 150.599 71.5247ZM152.649 79.5884L170.252 84.2955V84.2073C170.81 84.3628 171.294 84.7151 171.614 85.1994C171.934 85.6837 172.069 86.2675 171.994 86.8436C171.919 87.4196 171.639 87.9492 171.206 88.335C170.773 88.7208 170.215 88.937 169.636 88.9438C169.432 88.9724 169.224 88.9724 169.02 88.9438L151.416 84.2367C150.846 84.0349 150.372 83.6249 150.089 83.0884C149.806 82.5519 149.736 81.9282 149.891 81.3418C150.047 80.7554 150.417 80.2492 150.928 79.9243C151.439 79.5993 152.053 79.4794 152.649 79.5884Z"
        fill={gradientFill}
      />
      <Defs>
        <LinearGradient
          id={gradientId}
          x1="48.841%"
          x2="51.159%"
          y1="0%"
          y2="100%"
          gradientUnits="userSpaceOnUse">
          <Stop offset="0%" stopColor={color2} />
          <Stop offset="100%" stopColor={color} />
        </LinearGradient>
      </Defs>
    </AccessibleSvg>
  )
}

export const BicolorShout = styled(BicolorShoutSvg).attrs(({ color, color2, size, theme }) => ({
  color: color ?? theme.colors.primary,
  color2: color2 ?? color ?? theme.colors.secondary,
  size: size ?? theme.illustrations.sizes.medium,
}))``
