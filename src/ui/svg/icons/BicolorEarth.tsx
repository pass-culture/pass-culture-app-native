import React from 'react'
import { Defs, LinearGradient, Path, Stop } from 'react-native-svg'
import styled from 'styled-components/native'

import { AccessibleSvg } from 'ui/svg/AccessibleSvg'
import { AccessibleIcon } from 'ui/svg/icons/types'
import { svgIdentifier } from 'ui/svg/utils'

const BicolorEarthSvg: React.FunctionComponent<AccessibleIcon> = ({
  size,
  color,
  color2,
  accessibilityLabel,
  testID,
}) => {
  const { id: gradientId, fill: gradientFill } = svgIdentifier()

  return (
    <AccessibleSvg
      width={size}
      height={size}
      viewBox="0 0 24 24"
      accessibilityLabel={accessibilityLabel}
      testID={testID}>
      <Defs>
        <LinearGradient id={gradientId} x1="28.841%" x2="71.159%" y1="0%" y2="100%">
          <Stop offset="0%" stopColor={color} />
          <Stop offset="100%" stopColor={color2} />
        </LinearGradient>
      </Defs>
      <Path
        fill={gradientFill}
        clipRule="evenodd"
        fillRule="evenodd"
        d="M12.1034 2.49856C12.7328 2.5061 13.371 2.57666 14.0106 2.71518C18.469 3.68065 21.513 7.62953 21.502 12.0144C21.4269 11.9181 21.3467 11.8215 21.2615 11.7263C20.5717 10.9562 19.4383 10.1747 17.9762 10.7138C17.6915 10.8188 17.464 10.8046 17.312 10.7426C17.169 10.6843 17.0525 10.5686 16.9941 10.3698C16.8977 10.0409 16.9106 9.88299 16.9387 9.82222C16.9448 9.8088 16.9565 9.78724 17.0077 9.76054C17.0684 9.72897 17.186 9.69082 17.3969 9.67848C18.053 9.64011 18.5641 9.45192 18.8729 9.04889C19.1735 8.65656 19.1859 8.18167 19.1491 7.80971C19.1252 7.56729 19.0675 7.28561 19.0187 7.0471L19.0186 7.0468C18.9961 6.93679 18.9754 6.83597 18.9609 6.75244C18.9017 6.41339 18.9202 6.27606 18.9445 6.22887C19.0709 5.98336 18.9744 5.68186 18.7289 5.55546C18.4834 5.42905 18.1819 5.52561 18.0555 5.77112C17.8595 6.15179 17.9206 6.60859 17.9757 6.92436C18.0017 7.07293 18.0292 7.20513 18.055 7.32934L18.055 7.32938C18.097 7.53137 18.1346 7.71226 18.154 7.90811C18.1835 8.20681 18.1427 8.3577 18.0791 8.4407C18.0237 8.513 17.8597 8.6497 17.3385 8.68019C16.7462 8.71484 16.2536 8.92001 16.0306 9.40332C15.8367 9.82358 15.932 10.3014 16.0345 10.6511C16.1752 11.1308 16.4984 11.4907 16.9342 11.6685C17.3611 11.8427 17.8515 11.8256 18.3222 11.652C19.2109 11.3243 19.9357 11.7449 20.5165 12.3934C20.8022 12.7125 21.0261 13.0612 21.1797 13.3344C21.2559 13.47 21.3134 13.5844 21.3513 13.6637C21.3518 13.6647 21.3523 13.6658 21.3528 13.6668C21.3323 13.7813 21.3096 13.896 21.2848 14.0106C21.1 14.864 20.8059 15.6656 20.4203 16.4038C20.3311 15.9352 20.1673 15.4406 19.9306 14.9681C19.3322 13.7737 18.2122 12.6265 16.5414 12.5173C15.3249 12.4379 14.344 12.634 13.5645 13.0593C12.7824 13.486 12.2433 14.1213 11.8757 14.8498C11.4387 15.7159 11.6549 16.5704 12.1192 17.2755C12.5753 17.9681 13.3005 18.5744 14.0328 19.0503C14.0732 19.0766 14.0819 19.0955 14.0847 19.1023C14.0885 19.1115 14.0976 19.14 14.0879 19.2016C14.0664 19.3381 13.9618 19.5663 13.7017 19.856C13.2171 20.3956 12.316 21.0094 11.0542 21.4536C10.7005 21.4178 10.3451 21.3618 9.98936 21.2848C9.23582 21.1216 8.5227 20.8732 7.85789 20.5518C7.69241 20.4374 7.51402 20.2525 7.32949 19.9884C7.11759 19.6851 6.91543 19.3032 6.72657 18.8669C6.34872 17.9939 6.04387 16.9494 5.8205 15.9891C5.52787 14.7309 4.63975 13.6407 3.37149 13.2267L2.79728 13.0393C2.71546 13.0126 2.63172 13.0082 2.55261 13.0226C2.48032 12.3539 2.47878 11.6697 2.55418 10.9796L2.5668 10.9732C2.715 10.8954 2.82653 10.9038 2.95156 10.9558C3.1067 11.0204 3.26505 11.1474 3.45901 11.3197L3.50681 11.3623C3.58238 11.4297 3.66691 11.5052 3.74624 11.5685C3.83851 11.642 3.97151 11.7391 4.12873 11.7922C4.31127 11.8539 4.54998 11.8618 4.77009 11.7095C4.95455 11.5818 5.05502 11.3874 5.11731 11.2223C5.6474 9.81792 6.51491 9.235 7.53922 8.84245C7.92914 8.69301 8.32678 8.57651 8.74805 8.45309L8.74806 8.45308L8.7481 8.45307C8.90689 8.40655 9.06904 8.35904 9.2354 8.30841C9.8264 8.12856 10.4464 7.91529 11.0308 7.57996C12.1162 6.9571 12.3958 5.79849 12.4078 4.78676C12.4178 3.93944 12.2438 3.08791 12.1034 2.49856ZM19.3832 17.816C19.3369 17.8945 19.3146 17.9806 19.314 18.0656C17.8331 19.8483 15.7322 21.0461 13.4196 21.3959C13.835 21.116 14.18 20.82 14.4457 20.5241C14.7694 20.1637 15.0118 19.7627 15.0757 19.3574C15.1087 19.1481 15.0952 18.9276 15.0079 18.7179C14.9195 18.5058 14.7686 18.3359 14.5778 18.2119C13.8995 17.771 13.3026 17.2543 12.9544 16.7256C12.6146 16.2095 12.5445 15.7443 12.7685 15.3003C13.062 14.7187 13.4704 14.2498 14.0434 13.9372C14.6191 13.6231 15.401 13.445 16.4762 13.5152C17.67 13.5932 18.5331 14.4112 19.0365 15.416C19.2863 15.9146 19.4338 16.4361 19.4822 16.8861C19.5327 17.3554 19.4683 17.6713 19.3832 17.816ZM22.2621 14.2223C21.136 19.4227 16.3371 22.882 11.1751 22.4688L11.1553 22.4753C11.009 22.5231 10.8565 22.4997 10.7353 22.4242C10.4169 22.3852 10.0974 22.3313 9.77771 22.2621C9.00034 22.0938 8.26188 21.8434 7.56944 21.5219C7.52611 21.5111 7.48352 21.4943 7.44281 21.4711C7.41624 21.456 7.38997 21.4402 7.364 21.4238C3.13414 19.347 0.695626 14.5905 1.73786 9.77768C2.07538 8.21907 2.7434 6.81565 3.65287 5.62619C3.82059 5.40682 4.1344 5.36496 4.35376 5.53268C4.57313 5.70041 4.61499 6.01421 4.44727 6.23358C3.63945 7.2901 3.04185 8.53377 2.73129 9.91644C2.94651 9.90989 3.15009 9.95532 3.33566 10.0325C3.66467 10.1694 3.93654 10.4064 4.12298 10.5719L4.18213 10.6246C4.20758 10.6473 4.23113 10.6683 4.25333 10.6879C4.91952 9.07387 6.01314 8.35638 7.18136 7.90867C7.61224 7.74354 8.06768 7.61014 8.50143 7.48308C8.65232 7.43889 8.80058 7.39546 8.94426 7.35173C9.51773 7.17722 10.0497 6.99003 10.5331 6.71262C11.1561 6.3551 11.3974 5.65885 11.4078 4.77495C11.4174 3.96193 11.2271 3.11898 11.0847 2.54146C10.9338 2.55603 10.7837 2.57419 10.6344 2.59589C10.3612 2.63561 10.1074 2.44628 10.0677 2.17301C10.028 1.89974 10.2173 1.64601 10.4906 1.60629C11.6996 1.43054 12.9596 1.46439 14.2223 1.73783C19.8899 2.96517 23.4895 8.55464 22.2621 14.2223ZM5.77069 19.1749C5.37816 18.2461 5.06989 17.1761 4.8465 16.2156C4.62332 15.2561 3.95746 14.4699 3.06121 14.1774L2.72543 14.0678C3.16931 16.0527 4.24307 17.8462 5.77069 19.1749Z"
      />
    </AccessibleSvg>
  )
}

export const BicolorEarth = styled(BicolorEarthSvg).attrs(({ color, color2, size, theme }) => ({
  color: color ?? theme.colors.primary,
  color2: color2 ?? theme.colors.secondary,
  size: size ?? theme.icons.sizes.standard,
}))``
