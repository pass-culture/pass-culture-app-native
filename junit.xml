<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="893" failures="0" errors="0" time="73.62">
  <testsuite name="VerticalVideoPlayer" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:02" time="7.331" tests="8">
    <testcase classname="VerticalVideoPlayer should render error view when youtube player has an error" name="VerticalVideoPlayer should render error view when youtube player has an error" time="0.049">
    </testcase>
    <testcase classname="VerticalVideoPlayer should not render error view without error" name="VerticalVideoPlayer should not render error view without error" time="0.01">
    </testcase>
    <testcase classname="VerticalVideoPlayer the video is finished should display `replay button`" name="VerticalVideoPlayer the video is finished should display `replay button`" time="0.016">
    </testcase>
    <testcase classname="VerticalVideoPlayer the video is finished should not display `next video button` when only one video source is provided" name="VerticalVideoPlayer the video is finished should not display `next video button` when only one video source is provided" time="0.036">
    </testcase>
    <testcase classname="VerticalVideoPlayer the video is finished should display `replay button` and `next video button` when multiple video sources are provided" name="VerticalVideoPlayer the video is finished should display `replay button` and `next video button` when multiple video sources are provided" time="0.027">
    </testcase>
    <testcase classname="VerticalVideoPlayer should display `play video` when video has not started" name="VerticalVideoPlayer should display `play video` when video has not started" time="0.022">
    </testcase>
    <testcase classname="VerticalVideoPlayer should display `pause button` and `sound button` when video is playing" name="VerticalVideoPlayer should display `pause button` and `sound button` when video is playing" time="0.02">
    </testcase>
    <testcase classname="VerticalVideoPlayer should display `keep watching` when video is paused" name="VerticalVideoPlayer should display `keep watching` when video is paused" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="OnboardingAgeInformation" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:02" time="8.821" tests="36">
    <testcase classname="OnboardingAgeInformation should render correctly for 15-year-old" name="OnboardingAgeInformation should render correctly for 15-year-old" time="0.231">
    </testcase>
    <testcase classname="OnboardingAgeInformation should render correctly for 16-year-old" name="OnboardingAgeInformation should render correctly for 16-year-old" time="0.04">
    </testcase>
    <testcase classname="OnboardingAgeInformation should render correctly for 17-year-old" name="OnboardingAgeInformation should render correctly for 17-year-old" time="0.061">
    </testcase>
    <testcase classname="OnboardingAgeInformation should render correctly for 18-year-old" name="OnboardingAgeInformation should render correctly for 18-year-old" time="0.039">
    </testcase>
    <testcase classname="OnboardingAgeInformation should only display one active block for 15-year-old" name="OnboardingAgeInformation should only display one active block for 15-year-old" time="0.057">
    </testcase>
    <testcase classname="OnboardingAgeInformation should only display one active block for 16-year-old" name="OnboardingAgeInformation should only display one active block for 16-year-old" time="0.027">
    </testcase>
    <testcase classname="OnboardingAgeInformation should only display one active block for 17-year-old" name="OnboardingAgeInformation should only display one active block for 17-year-old" time="0.101">
    </testcase>
    <testcase classname="OnboardingAgeInformation should only display one active block for 18-year-old" name="OnboardingAgeInformation should only display one active block for 18-year-old" time="0.077">
    </testcase>
    <testcase classname="OnboardingAgeInformation should display correct amount of inactive blocks for 15-year-old" name="OnboardingAgeInformation should display correct amount of inactive blocks for 15-year-old" time="0.041">
    </testcase>
    <testcase classname="OnboardingAgeInformation should display correct amount of inactive blocks for 16-year-old" name="OnboardingAgeInformation should display correct amount of inactive blocks for 16-year-old" time="0.035">
    </testcase>
    <testcase classname="OnboardingAgeInformation should display correct amount of inactive blocks for 17-year-old" name="OnboardingAgeInformation should display correct amount of inactive blocks for 17-year-old" time="0.023">
    </testcase>
    <testcase classname="OnboardingAgeInformation should display correct amount of inactive blocks for 18-year-old" name="OnboardingAgeInformation should display correct amount of inactive blocks for 18-year-old" time="0.032">
    </testcase>
    <testcase classname="OnboardingAgeInformation should display correct amount of coming credit blocks for 15-year-old" name="OnboardingAgeInformation should display correct amount of coming credit blocks for 15-year-old" time="0.026">
    </testcase>
    <testcase classname="OnboardingAgeInformation should display correct amount of coming credit blocks for 16-year-old" name="OnboardingAgeInformation should display correct amount of coming credit blocks for 16-year-old" time="0.112">
    </testcase>
    <testcase classname="OnboardingAgeInformation should display correct amount of coming credit blocks for 17-year-old" name="OnboardingAgeInformation should display correct amount of coming credit blocks for 17-year-old" time="0.027">
    </testcase>
    <testcase classname="OnboardingAgeInformation should display correct amount of coming credit blocks for 18-year-old" name="OnboardingAgeInformation should display correct amount of coming credit blocks for 18-year-old" time="0.035">
    </testcase>
    <testcase classname="OnboardingAgeInformation should navigate to SignupForm when pressing &quot;Créer un compte&quot; for 15-year-old" name="OnboardingAgeInformation should navigate to SignupForm when pressing &quot;Créer un compte&quot; for 15-year-old" time="0.087">
    </testcase>
    <testcase classname="OnboardingAgeInformation should navigate to SignupForm when pressing &quot;Créer un compte&quot; for 16-year-old" name="OnboardingAgeInformation should navigate to SignupForm when pressing &quot;Créer un compte&quot; for 16-year-old" time="0.125">
    </testcase>
    <testcase classname="OnboardingAgeInformation should navigate to SignupForm when pressing &quot;Créer un compte&quot; for 17-year-old" name="OnboardingAgeInformation should navigate to SignupForm when pressing &quot;Créer un compte&quot; for 17-year-old" time="0.081">
    </testcase>
    <testcase classname="OnboardingAgeInformation should navigate to SignupForm when pressing &quot;Créer un compte&quot; for 18-year-old" name="OnboardingAgeInformation should navigate to SignupForm when pressing &quot;Créer un compte&quot; for 18-year-old" time="0.075">
    </testcase>
    <testcase classname="OnboardingAgeInformation should reset navigation on go to Home when pressing &quot;Plus tard&quot; for 15-year-old" name="OnboardingAgeInformation should reset navigation on go to Home when pressing &quot;Plus tard&quot; for 15-year-old" time="0.022">
    </testcase>
    <testcase classname="OnboardingAgeInformation should reset navigation on go to Home when pressing &quot;Plus tard&quot; for 16-year-old" name="OnboardingAgeInformation should reset navigation on go to Home when pressing &quot;Plus tard&quot; for 16-year-old" time="0.025">
    </testcase>
    <testcase classname="OnboardingAgeInformation should reset navigation on go to Home when pressing &quot;Plus tard&quot; for 17-year-old" name="OnboardingAgeInformation should reset navigation on go to Home when pressing &quot;Plus tard&quot; for 17-year-old" time="0.042">
    </testcase>
    <testcase classname="OnboardingAgeInformation should reset navigation on go to Home when pressing &quot;Plus tard&quot; for 18-year-old" name="OnboardingAgeInformation should reset navigation on go to Home when pressing &quot;Plus tard&quot; for 18-year-old" time="0.044">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when attempting to click on credit block" name="OnboardingAgeInformation should log analytics when attempting to click on credit block" time="0.023">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when attempting to click on credit block" name="OnboardingAgeInformation should log analytics when attempting to click on credit block" time="0.02">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when attempting to click on credit block" name="OnboardingAgeInformation should log analytics when attempting to click on credit block" time="0.027">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when attempting to click on credit block" name="OnboardingAgeInformation should log analytics when attempting to click on credit block" time="0.014">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when clicking on signup button" name="OnboardingAgeInformation should log analytics when clicking on signup button" time="0.02">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when clicking on signup button" name="OnboardingAgeInformation should log analytics when clicking on signup button" time="0.054">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when clicking on signup button" name="OnboardingAgeInformation should log analytics when clicking on signup button" time="0.021">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when clicking on signup button" name="OnboardingAgeInformation should log analytics when clicking on signup button" time="0.056">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when clicking on skip button" name="OnboardingAgeInformation should log analytics when clicking on skip button" time="0.091">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when clicking on skip button" name="OnboardingAgeInformation should log analytics when clicking on skip button" time="0.041">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when clicking on skip button" name="OnboardingAgeInformation should log analytics when clicking on skip button" time="0.029">
    </testcase>
    <testcase classname="OnboardingAgeInformation should log analytics when clicking on skip button" name="OnboardingAgeInformation should log analytics when clicking on skip button" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VideoCarouselModule /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:02" time="11.372" tests="10">
    <testcase classname="&lt;VideoCarouselModule /&gt; should call fetchCarouselVideoOffers with properly formatted data" name="&lt;VideoCarouselModule /&gt; should call fetchCarouselVideoOffers with properly formatted data" time="0.315">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; should call fetchCarouselVideoOffers with empty array when item has homeEntryId" name="&lt;VideoCarouselModule /&gt; should call fetchCarouselVideoOffers with empty array when item has homeEntryId" time="0.044">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; should not render carousel with only one item" name="&lt;VideoCarouselModule /&gt; should not render carousel with only one item" time="0.058">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; should render carousel with multiple items" name="&lt;VideoCarouselModule /&gt; should render carousel with multiple items" time="0.104">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; should render video player correctly" name="&lt;VideoCarouselModule /&gt; should render video player correctly" time="0.064">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; should redirect to thematic home when item has an homeEntryId" name="&lt;VideoCarouselModule /&gt; should redirect to thematic home when item has an homeEntryId" time="0.083">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; should redirect to offer based on offerId" name="&lt;VideoCarouselModule /&gt; should redirect to offer based on offerId" time="0.063">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; tracking should send logConsultVideo event when user presses `next video button`" name="&lt;VideoCarouselModule /&gt; tracking should send logConsultVideo event when user presses `next video button`" time="0.191">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; tracking should send logConsultVideo event when user presses on offer" name="&lt;VideoCarouselModule /&gt; tracking should send logConsultVideo event when user presses on offer" time="0.088">
    </testcase>
    <testcase classname="&lt;VideoCarouselModule /&gt; tracking should send logModuleDisplayedOnHomepage event" name="&lt;VideoCarouselModule /&gt; tracking should send logModuleDisplayedOnHomepage event" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="SearchHeader component" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:02" time="12.256" tests="6">
    <testcase classname="SearchHeader component should render SearchHeader" name="SearchHeader component should render SearchHeader" time="0.128">
    </testcase>
    <testcase classname="SearchHeader component should show LocationWidget when isDesktopViewport is false and SearchView is Landing" name="SearchHeader component should show LocationWidget when isDesktopViewport is false and SearchView is Landing" time="0.018">
    </testcase>
    <testcase classname="SearchHeader component should not show LocationWidget when isDesktopViewport is false and searchView is not landing" name="SearchHeader component should not show LocationWidget when isDesktopViewport is false and searchView is not landing" time="0.025">
    </testcase>
    <testcase classname="SearchHeader component should show SearchLocationWidget when isDesktopViewport is false" name="SearchHeader component should show SearchLocationWidget when isDesktopViewport is false" time="0.009">
    </testcase>
    <testcase classname="SearchHeader component should not show LocationWidget when isDesktopViewport is true" name="SearchHeader component should not show LocationWidget when isDesktopViewport is true" time="0.017">
    </testcase>
    <testcase classname="SearchHeader component should show SearchLocationWidget when isDesktopViewport is true" name="SearchHeader component should show SearchLocationWidget when isDesktopViewport is true" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DeeplinksGenerator /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:02" time="12.549" tests="1">
    <testcase classname="&lt;DeeplinksGenerator /&gt; should render DeeplinksGenerator" name="&lt;DeeplinksGenerator /&gt; should render DeeplinksGenerator" time="0.209">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OfferBody /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:02" time="13.938" tests="32">
    <testcase classname="&lt;OfferBody /&gt; Tags section should display tags" name="&lt;OfferBody /&gt; Tags section should display tags" time="0.238">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Tags section should display vinyl tag" name="&lt;OfferBody /&gt; Tags section should display vinyl tag" time="0.052">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should display offer as a title" name="&lt;OfferBody /&gt; should display offer as a title" time="0.081">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should display artists" name="&lt;OfferBody /&gt; should display artists" time="0.086">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should display prices" name="&lt;OfferBody /&gt; should display prices" time="0.053">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should display reaction button when feature flag is enabled and native category is &quot;Séances de cinéma&quot;" name="&lt;OfferBody /&gt; should display reaction button when feature flag is enabled and native category is &quot;Séances de cinéma&quot;" time="0.049">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should open survey modal when pressing &quot;Réagir&quot; button" name="&lt;OfferBody /&gt; should open survey modal when pressing &quot;Réagir&quot; button" time="0.122">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should log reaction fake door consultation when pressing  &quot;Réagir&quot; button" name="&lt;OfferBody /&gt; should log reaction fake door consultation when pressing  &quot;Réagir&quot; button" time="0.109">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should not display reaction button when feature flag is enabled and native category is not &quot;Séances de cinéma&quot;" name="&lt;OfferBody /&gt; should not display reaction button when feature flag is enabled and native category is not &quot;Séances de cinéma&quot;" time="0.072">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should not display reaction button when feature flag is disabled" name="&lt;OfferBody /&gt; should not display reaction button when feature flag is disabled" time="0.086">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should not display prices when the offer is free" name="&lt;OfferBody /&gt; should not display prices when the offer is free" time="0.042">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should display both section when this is not a cinema offer" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should display both section when this is not a cinema offer" time="0.059">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should not display both section" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should not display both section" time="0.048">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should not display top separator between this two section" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should not display top separator between this two section" time="0.069">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should display top separator above summary info list when venue button is not displayed" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should display top separator above summary info list when venue button is not displayed" time="0.031">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should not display top separator when venue button is displayed" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section should not display top separator when venue button is displayed" time="0.022">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue button section should display venue button when this is not a cinema offer" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue button section should display venue button when this is not a cinema offer" time="0.038">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue button section should not display venue button when venue is not permanent" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue button section should not display venue button when venue is not permanent" time="0.046">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue button section should not display venue button when this is a cinema offer" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue button section should not display venue button when this is a cinema offer" time="0.036">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Summary info section should display duo info" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Summary info section should display duo info" time="0.023">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Summary info section should not display duo info" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Summary info section should not display duo info" time="0.033">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue section should display venue section" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue section should display venue section" time="0.029">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue section should display venue distance tag when user share his position" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue section should display venue distance tag when user share his position" time="0.047">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue section should not display venue distance tag when user not share his position" name="&lt;OfferBody /&gt; Venue button section &amp; Summary info section Venue section should not display venue distance tag when user not share his position" time="0.069">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; About section should display about section" name="&lt;OfferBody /&gt; About section should display about section" time="0.034">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; About section should not display about section" name="&lt;OfferBody /&gt; About section should not display about section" time="0.032">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; MovieScreeningCalendar should render &lt;MovieScreeningCalendar /&gt; when offer is a movie screening" name="&lt;OfferBody /&gt; MovieScreeningCalendar should render &lt;MovieScreeningCalendar /&gt; when offer is a movie screening" time="0.156">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should display social network section" name="&lt;OfferBody /&gt; should display social network section" time="0.031">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should display container with divider on mobile" name="&lt;OfferBody /&gt; should display container with divider on mobile" time="0.07">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should not display container with divider on desktop" name="&lt;OfferBody /&gt; should not display container with divider on desktop" time="0.089">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should display container without divider on desktop" name="&lt;OfferBody /&gt; should display container without divider on desktop" time="0.034">
    </testcase>
    <testcase classname="&lt;OfferBody /&gt; should not display container without divider on mobile" name="&lt;OfferBody /&gt; should not display container without divider on mobile" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OfferPlace /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:11" time="5.398" tests="33">
    <testcase classname="&lt;OfferPlace /&gt; should display change venue button when offer subcategory is &quot;Livres audio&quot;, offer has an EAN and that there are other venues offering the same offer" name="&lt;OfferPlace /&gt; should display change venue button when offer subcategory is &quot;Livres audio&quot;, offer has an EAN and that there are other venues offering the same offer" time="0.09">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should display change venue button when offer subcategory is &quot;Seance cine&quot;, offer has an allocineId and that there are other venues offering the same offer" name="&lt;OfferPlace /&gt; should display change venue button when offer subcategory is &quot;Seance cine&quot;, offer has an allocineId and that there are other venues offering the same offer" time="0.159">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should display &quot;Trouve ta séance&quot; above Venue when offer subcategory is &quot;Seance cine&quot;" name="&lt;OfferPlace /&gt; should display &quot;Trouve ta séance&quot; above Venue when offer subcategory is &quot;Seance cine&quot;" time="0.05">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display &quot;Trouve ta séance&quot; above Venue when offer subcategory is not &quot;Seance cine&quot;" name="&lt;OfferPlace /&gt; should not display &quot;Trouve ta séance&quot; above Venue when offer subcategory is not &quot;Seance cine&quot;" time="0.035">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Seance cine&quot;, offer has not an allocineId" name="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Seance cine&quot;, offer has not an allocineId" time="0.053">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Livres audio&quot;, offer has an EAN and that there are not other venues offering the same offer" name="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Livres audio&quot;, offer has an EAN and that there are not other venues offering the same offer" time="0.047">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Livres audio&quot; and offer has not an EAN" name="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Livres audio&quot; and offer has not an EAN" time="0.01">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should display change venue button when offer subcategory is &quot;Livres papier&quot;, offer has an EAN  and that there are other venues offering the same offer" name="&lt;OfferPlace /&gt; should display change venue button when offer subcategory is &quot;Livres papier&quot;, offer has an EAN  and that there are other venues offering the same offer" time="0.028">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Livres papier&quot;, offer has an EAN  and that there are other venues offering the same offer" name="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Livres papier&quot;, offer has an EAN  and that there are other venues offering the same offer" time="0.016">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Livres papier&quot; and offer has not an EAN" name="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is &quot;Livres papier&quot; and offer has not an EAN" time="0.032">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is not &quot;Livres papier&quot; or &quot;Livres audio&quot;" name="&lt;OfferPlace /&gt; should not display change venue button when offer subcategory is not &quot;Livres papier&quot; or &quot;Livres audio&quot;" time="0.019">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should display venue block With &quot;Lieu de l’évènement&quot; in title" name="&lt;OfferPlace /&gt; should display venue block With &quot;Lieu de l’évènement&quot; in title" time="0.035">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should navigate to an other offer when user choose an other venue from &quot;Changer le lieu de retrait&quot; button" name="&lt;OfferPlace /&gt; should navigate to an other offer when user choose an other venue from &quot;Changer le lieu de retrait&quot; button" time="0.062">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should log ConsultOffer when new offer venue is selected" name="&lt;OfferPlace /&gt; should log ConsultOffer when new offer venue is selected" time="0.046">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should log when the users press &quot;Changer le lieu de retrait&quot; button" name="&lt;OfferPlace /&gt; should log when the users press &quot;Changer le lieu de retrait&quot; button" time="0.048">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should display venue tag distance when user share his position" name="&lt;OfferPlace /&gt; should display venue tag distance when user share his position" time="0.01">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display venue tag distance when user not share his position" name="&lt;OfferPlace /&gt; should not display venue tag distance when user not share his position" time="0.013">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display &quot;Voir la page du lieu&quot; button when venue is not permanent" name="&lt;OfferPlace /&gt; should not display &quot;Voir la page du lieu&quot; button when venue is not permanent" time="0.011">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; When venue is permanent should navigate to venue page when pressing venue button" name="&lt;OfferPlace /&gt; When venue is permanent should navigate to venue page when pressing venue button" time="0.009">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; When venue is permanent should log ConsultVenue when pressing venue button" name="&lt;OfferPlace /&gt; When venue is permanent should log ConsultVenue when pressing venue button" time="0.027">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should display &quot;Voir l’itinéraire&quot; button when complete venue address specified" name="&lt;OfferPlace /&gt; should display &quot;Voir l’itinéraire&quot; button when complete venue address specified" time="0.014">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display &quot;Voir l’itinéraire&quot; button When address, city and postal code not provided" name="&lt;OfferPlace /&gt; should not display &quot;Voir l’itinéraire&quot; button When address, city and postal code not provided" time="0.017">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display &quot;Voir l’itinéraire&quot; button When only address provided" name="&lt;OfferPlace /&gt; should not display &quot;Voir l’itinéraire&quot; button When only address provided" time="0.015">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display &quot;Voir l’itinéraire&quot; button When only city provided" name="&lt;OfferPlace /&gt; should not display &quot;Voir l’itinéraire&quot; button When only city provided" time="0.017">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display &quot;Voir l’itinéraire&quot; button When only city postalCode" name="&lt;OfferPlace /&gt; should not display &quot;Voir l’itinéraire&quot; button When only city postalCode" time="0.016">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should log consult itinerary when pressing &quot;Voir l’itinéraire&quot; button" name="&lt;OfferPlace /&gt; should log consult itinerary when pressing &quot;Voir l’itinéraire&quot; button" time="0.014">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; HeaderMessage should return &quot;Lieux disponibles autour de moi&quot; when location mode is AROUND_ME and place is null" name="&lt;OfferPlace /&gt; HeaderMessage should return &quot;Lieux disponibles autour de moi&quot; when location mode is AROUND_ME and place is null" time="0.136">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; HeaderMessage should return &quot;Lieux à proximité de “Cinéma de la fin”&quot; when location mode is EVERYWHERE and place is null" name="&lt;OfferPlace /&gt; HeaderMessage should return &quot;Lieux à proximité de “Cinéma de la fin”&quot; when location mode is EVERYWHERE and place is null" time="0.039">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; HeaderMessage should return &quot;Lieux à proximité de “Kourou”&quot; when location mode is AROUND_PLACE and place is {&quot;geolocation&quot;: [Object], &quot;info&quot;: &quot;Guyane&quot;, &quot;label&quot;: &quot;Kourou&quot;}" name="&lt;OfferPlace /&gt; HeaderMessage should return &quot;Lieux à proximité de “Kourou”&quot; when location mode is AROUND_PLACE and place is {&quot;geolocation&quot;: [Object], &quot;info&quot;: &quot;Guyane&quot;, &quot;label&quot;: &quot;Kourou&quot;}" time="0.042">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should display container with divider on mobile" name="&lt;OfferPlace /&gt; should display container with divider on mobile" time="0.012">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display container with divider on desktop" name="&lt;OfferPlace /&gt; should not display container with divider on desktop" time="0.009">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should display container without divider on desktop" name="&lt;OfferPlace /&gt; should display container without divider on desktop" time="0.013">
    </testcase>
    <testcase classname="&lt;OfferPlace /&gt; should not display container without divider on mobile" name="&lt;OfferPlace /&gt; should not display container without divider on mobile" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SearchFilter/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:09" time="7.356" tests="8">
    <testcase classname="&lt;SearchFilter/&gt; should render correctly" name="&lt;SearchFilter/&gt; should render correctly" time="0.291">
    </testcase>
    <testcase classname="&lt;SearchFilter/&gt; should setLocationMode to AROUND-ME in location context, when URI params contains AROUND-ME, and user has a geolocposition" name="&lt;SearchFilter/&gt; should setLocationMode to AROUND-ME in location context, when URI params contains AROUND-ME, and user has a geolocposition" time="0.112">
    </testcase>
    <testcase classname="&lt;SearchFilter/&gt; shouldn&apos;t setLocationMode to AROUND-ME in location context, when URI params contains AROUND-ME, and user has no geolocposition" name="&lt;SearchFilter/&gt; shouldn&apos;t setLocationMode to AROUND-ME in location context, when URI params contains AROUND-ME, and user has no geolocposition" time="0.162">
    </testcase>
    <testcase classname="&lt;SearchFilter/&gt; should update the SearchState, but keep the query, when pressing the reset button, and position is not null" name="&lt;SearchFilter/&gt; should update the SearchState, but keep the query, when pressing the reset button, and position is not null" time="0.184">
    </testcase>
    <testcase classname="&lt;SearchFilter/&gt; should update the SearchState, but keep the query, when pressing the reset button, and position is null" name="&lt;SearchFilter/&gt; should update the SearchState, but keep the query, when pressing the reset button, and position is null" time="0.105">
    </testcase>
    <testcase classname="&lt;SearchFilter/&gt; should log analytics when clicking on the reset button" name="&lt;SearchFilter/&gt; should log analytics when clicking on the reset button" time="0.159">
    </testcase>
    <testcase classname="&lt;SearchFilter/&gt; should display back button on header" name="&lt;SearchFilter/&gt; should display back button on header" time="0.117">
    </testcase>
    <testcase classname="&lt;SearchFilter/&gt; should display accessibility section" name="&lt;SearchFilter/&gt; should display accessibility section" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="HomeHeader" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:14" time="3.753" tests="9">
    <testcase classname="HomeHeader ex beneficiary users should see subtitle: Ton crédit est expiré" name="HomeHeader ex beneficiary users should see subtitle: Ton crédit est expiré" time="0.162">
    </testcase>
    <testcase classname="HomeHeader beneficiary users should see subtitle: Tu as 56 € sur ton pass" name="HomeHeader beneficiary users should see subtitle: Tu as 56 € sur ton pass" time="0.058">
    </testcase>
    <testcase classname="HomeHeader eligible ex beneficiary users should see subtitle: Toute la culture à portée de main" name="HomeHeader eligible ex beneficiary users should see subtitle: Toute la culture à portée de main" time="0.026">
    </testcase>
    <testcase classname="HomeHeader general users should see subtitle: Toute la culture à portée de main" name="HomeHeader general users should see subtitle: Toute la culture à portée de main" time="0.018">
    </testcase>
    <testcase classname="HomeHeader not logged in users should see subtitle: Toute la culture à portée de main" name="HomeHeader not logged in users should see subtitle: Toute la culture à portée de main" time="0.022">
    </testcase>
    <testcase classname="HomeHeader should show LocationWidget when isDesktopViewport is false" name="HomeHeader should show LocationWidget when isDesktopViewport is false" time="0.027">
    </testcase>
    <testcase classname="HomeHeader should not show LocationWidget isDesktopViewport is true" name="HomeHeader should not show LocationWidget isDesktopViewport is true" time="0.153">
    </testcase>
    <testcase classname="HomeHeader should show LocationTitleWidget isDesktopViewport is true" name="HomeHeader should show LocationTitleWidget isDesktopViewport is true" time="0.073">
    </testcase>
    <testcase classname="HomeHeader should not show LocationTitleWidget isDesktopViewport is false" name="HomeHeader should not show LocationTitleWidget isDesktopViewport is false" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ConfirmChangeEmailDeprecated /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:17" time="5.712" tests="7">
    <testcase classname="&lt;ConfirmChangeEmailDeprecated /&gt; should navigate to change email expired if last email change expired" name="&lt;ConfirmChangeEmailDeprecated /&gt; should navigate to change email expired if last email change expired" time="0.067">
    </testcase>
    <testcase classname="&lt;ConfirmChangeEmailDeprecated /&gt; should navigate to home when pressing cancel button" name="&lt;ConfirmChangeEmailDeprecated /&gt; should navigate to home when pressing cancel button" time="0.018">
    </testcase>
    <testcase classname="&lt;ConfirmChangeEmailDeprecated /&gt; should navigate to email change tracking when pressing &quot;Confirmer la demande&quot; button and API response is success" name="&lt;ConfirmChangeEmailDeprecated /&gt; should navigate to email change tracking when pressing &quot;Confirmer la demande&quot; button and API response is success" time="0.191">
    </testcase>
    <testcase classname="&lt;ConfirmChangeEmailDeprecated /&gt; should redirect to home when pressing &quot;Confirmer la demande&quot; button and and API response is not 401 error" name="&lt;ConfirmChangeEmailDeprecated /&gt; should redirect to home when pressing &quot;Confirmer la demande&quot; button and and API response is not 401 error" time="0.049">
    </testcase>
    <testcase classname="&lt;ConfirmChangeEmailDeprecated /&gt; should redirect to change email expired when pressing &quot;Confirmer la demande&quot; button and and API response is 401 error" name="&lt;ConfirmChangeEmailDeprecated /&gt; should redirect to change email expired when pressing &quot;Confirmer la demande&quot; button and and API response is 401 error" time="0.035">
    </testcase>
    <testcase classname="&lt;ConfirmChangeEmailDeprecated /&gt; should display an error snackbar when pressing &quot;Confirmer la demande&quot; button and API response is not 401 error" name="&lt;ConfirmChangeEmailDeprecated /&gt; should display an error snackbar when pressing &quot;Confirmer la demande&quot; button and API response is not 401 error" time="0.058">
    </testcase>
    <testcase classname="&lt;ConfirmChangeEmailDeprecated /&gt; should not display an error snackbar when pressing &quot;Confirmer la demande&quot; button and API response is a 401 error" name="&lt;ConfirmChangeEmailDeprecated /&gt; should not display an error snackbar when pressing &quot;Confirmer la demande&quot; button and API response is a 401 error" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SearchLanding /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:15" time="8.478" tests="16">
    <testcase classname="&lt;SearchLanding /&gt; When wipAppV2SearchLandingHeader feature flag deactivated should render SearchLanding" name="&lt;SearchLanding /&gt; When wipAppV2SearchLandingHeader feature flag deactivated should render SearchLanding" time="0.295">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When wipAppV2SearchLandingHeader feature flag deactivated should not render gradient header" name="&lt;SearchLanding /&gt; When wipAppV2SearchLandingHeader feature flag deactivated should not render gradient header" time="0.061">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When App V2 feature flag activated should render V2 App Design SearchLanding" name="&lt;SearchLanding /&gt; When App V2 feature flag activated should render V2 App Design SearchLanding" time="0.065">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When wipAppV2SearchLandingHeader feature flag activated should render gradient header" name="&lt;SearchLanding /&gt; When wipAppV2SearchLandingHeader feature flag activated should render gradient header" time="0.053">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should display offer suggestions" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should display offer suggestions" time="0.157">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should display venue suggestions" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should display venue suggestions" time="0.184">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should handle venue press" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should handle venue press" time="0.266">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should hide suggestions when pressing a venue" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should hide suggestions when pressing a venue" time="0.878">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should dismiss keyboard on scroll" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should dismiss keyboard on scroll" time="0.785">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should display search history when it has items" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should display search history when it has items" time="0.362">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should not display search history when it has no items" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should not display search history when it has no items" time="0.046">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should dismiss the keyboard when pressing search history item" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should dismiss the keyboard when pressing search history item" time="0.121">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should update state and execute the search with the history item When it has not category and native category" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should update state and execute the search with the history item When it has not category and native category" time="0.203">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should update state and execute the search with the history item When it has category and native category" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should update state and execute the search with the history item When it has category and native category" time="0.294">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should update state and execute the search with the history item When it has only a category" name="&lt;SearchLanding /&gt; When SearchLanding is focus on suggestions should update state and execute the search with the history item When it has only a category" time="0.298">
    </testcase>
    <testcase classname="&lt;SearchLanding /&gt; When offline should display offline page" name="&lt;SearchLanding /&gt; When offline should display offline page" time="0.252">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VenueOffers /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:15" time="8.396" tests="13">
    <testcase classname="&lt;VenueOffers /&gt; should display skeleton if offers are fetching" name="&lt;VenueOffers /&gt; should display skeleton if offers are fetching" time="0.174">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should display skeleton if playlists are fetching" name="&lt;VenueOffers /&gt; should display skeleton if playlists are fetching" time="0.022">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should display placeholder when no offers" name="&lt;VenueOffers /&gt; should display placeholder when no offers" time="0.009">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should display &quot;En voir plus&quot; button if they are more hits to see than the one displayed" name="&lt;VenueOffers /&gt; should display &quot;En voir plus&quot; button if they are more hits to see than the one displayed" time="0.102">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should not display &quot;En voir plus&quot; button if they are no more hits to see than the one displayed" name="&lt;VenueOffers /&gt; should not display &quot;En voir plus&quot; button if they are no more hits to see than the one displayed" time="0.032">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should go to search page with venue infos when clicking &quot;En voir plus&quot; button" name="&lt;VenueOffers /&gt; should go to search page with venue infos when clicking &quot;En voir plus&quot; button" time="0.094">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should log analytics event when clicking &quot;En voir plus&quot; button" name="&lt;VenueOffers /&gt; should log analytics event when clicking &quot;En voir plus&quot; button" time="0.045">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should display all gtl playlists When there are gtl playlists associated to the venue and venue type is distribution store" name="&lt;VenueOffers /&gt; should display all gtl playlists When there are gtl playlists associated to the venue and venue type is distribution store" time="0.228">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should display all gtl playlists When there are gtl playlists associated to the venue and venue type is book store" name="&lt;VenueOffers /&gt; should display all gtl playlists When there are gtl playlists associated to the venue and venue type is book store" time="0.2">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should not display all gtl playlists When there are not gtl playlists associated to the venue and venue type is distribution store" name="&lt;VenueOffers /&gt; should not display all gtl playlists When there are not gtl playlists associated to the venue and venue type is distribution store" time="0.06">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should not display all gtl playlists When there are not gtl playlists associated to the venue and venue type is book store" name="&lt;VenueOffers /&gt; should not display all gtl playlists When there are not gtl playlists associated to the venue and venue type is book store" time="0.065">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; should not display all gtl playlists When there are gtl playlists associated to the venue and venue type is not distribution or book store" name="&lt;VenueOffers /&gt; should not display all gtl playlists When there are gtl playlists associated to the venue and venue type is not distribution or book store" time="0.213">
    </testcase>
    <testcase classname="&lt;VenueOffers /&gt; Cinema venue should display movie screening calendar if at least one offer is a movie screening" name="&lt;VenueOffers /&gt; Cinema venue should display movie screening calendar if at least one offer is a movie screening" time="0.346">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RootNavigator /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:18" time="7.159" tests="5">
    <testcase classname="&lt;RootNavigator /&gt; should NOT display PrivacyPolicy if splash screen is not yet hidden" name="&lt;RootNavigator /&gt; should NOT display PrivacyPolicy if splash screen is not yet hidden" time="0.083">
    </testcase>
    <testcase classname="&lt;RootNavigator /&gt; should display PrivacyPolicy if splash screen is hidden" name="&lt;RootNavigator /&gt; should display PrivacyPolicy if splash screen is hidden" time="0.164">
    </testcase>
    <testcase classname="&lt;RootNavigator /&gt; should not display quick access button in native" name="&lt;RootNavigator /&gt; should not display quick access button in native" time="0.039">
    </testcase>
    <testcase classname="&lt;RootNavigator /&gt; should increment logged in session count when user is logged in" name="&lt;RootNavigator /&gt; should increment logged in session count when user is logged in" time="0.074">
    </testcase>
    <testcase classname="&lt;RootNavigator /&gt; should not increment logged in session count when user is not logged in" name="&lt;RootNavigator /&gt; should not increment logged in session count when user is not logged in" time="0.096">
    </testcase>
  </testsuite>
  <testsuite name="AutocompleteOfferItem component" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:16" time="8.596" tests="26">
    <testcase classname="AutocompleteOfferItem component should render AutocompleteOfferItem" name="AutocompleteOfferItem component should render AutocompleteOfferItem" time="0.139">
    </testcase>
    <testcase classname="AutocompleteOfferItem component should not display `FILMS_SERIES_CINEMA` searchGroup" name="AutocompleteOfferItem component should not display `FILMS_SERIES_CINEMA` searchGroup" time="0.015">
    </testcase>
    <testcase classname="AutocompleteOfferItem component should create a suggestion clicked event when pressing a hit" name="AutocompleteOfferItem component should create a suggestion clicked event when pressing a hit" time="0.066">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is not in the first three suggestions should execute a search with the query suggestion on hit click" name="AutocompleteOfferItem component when item is not in the first three suggestions should execute a search with the query suggestion on hit click" time="0.018">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is not in the first three suggestions should not display the most popular native category of the query suggestion" name="AutocompleteOfferItem component when item is not in the first three suggestions should not display the most popular native category of the query suggestion" time="0.084">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is not in the first three suggestions should not execute the search with the category, native category and genre of the previous search on hit click" name="AutocompleteOfferItem component when item is not in the first three suggestions should not execute the search with the category, native category and genre of the previous search on hit click" time="0.017">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and its most popular native category when it associated to only one category on hit click" name="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and its most popular native category when it associated to only one category on hit click" time="0.048">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and its most popular native category is associated to several categories and is associated to the most popular category" name="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and its most popular native category is associated to several categories and is associated to the most popular category" time="0.016">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and its most popular category when native category associated to several categories and not associated to the most popular category" name="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and its most popular category when native category associated to several categories and not associated to the most popular category" time="0.205">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and the most popular category when the suggestion has not native category" name="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and the most popular category when the suggestion has not native category" time="0.013">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and without the most popular category and native category when there are unknown in the app" name="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and without the most popular category and native category when there are unknown in the app" time="0.007">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and without the most popular category when it is unknown in the app" name="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and without the most popular category when it is unknown in the app" time="0.007">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and without the most popular native category but the most popular category when native category is unknown in the app" name="AutocompleteOfferItem component when item is in the first three suggestions should execute a search with the query suggestion and without the most popular native category but the most popular category when native category is unknown in the app" time="0.005">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular native category of the query suggestion when it associated to only one category" name="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular native category of the query suggestion when it associated to only one category" time="0.009">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular native category of the query suggestion when it associated to the most popular category" name="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular native category of the query suggestion when it associated to the most popular category" time="0.005">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category or native category of the query suggestion when it does not return by Algolia" name="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category or native category of the query suggestion when it does not return by Algolia" time="0.007">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category or native category of the query suggestion when there are unknown in the app" name="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category or native category of the query suggestion when there are unknown in the app" time="0.005">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular native category of the query suggestion when it is not associated to the most popular category" name="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular native category of the query suggestion when it is not associated to the most popular category" time="0.005">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular native category of the query suggestion when it is unknown in the app" name="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular native category of the query suggestion when it is unknown in the app" time="0.004">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category of the query suggestion when native category associated to only one category" name="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category of the query suggestion when native category associated to only one category" time="0.049">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category of the query suggestion when native category associated to the most popular category" name="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category of the query suggestion when native category associated to the most popular category" time="0.022">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category of the query suggestion when category is unknown in the app" name="AutocompleteOfferItem component when item is in the first three suggestions should not display the most popular category of the query suggestion when category is unknown in the app" time="0.008">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular category of the query suggestion when is not associated to the most popular category" name="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular category of the query suggestion when is not associated to the most popular category" time="0.007">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular category of the query suggestion when has not native category associated to the suggestion" name="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular category of the query suggestion when has not native category associated to the suggestion" time="0.004">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular category of the query suggestion when native category is unknown in the app" name="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular category of the query suggestion when native category is unknown in the app" time="0.012">
    </testcase>
    <testcase classname="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular category of the query suggestion when native category is Livres Papier and FF WIP_NEW_MAPPING_BOOKS is enabled" name="AutocompleteOfferItem component when item is in the first three suggestions should display the most popular category of the query suggestion when native category is Livres Papier and FF WIP_NEW_MAPPING_BOOKS is enabled" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="nbsp-in-text" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:18" time="8.101" tests="16">
    <testcase classname="nbsp-in-text valid &apos;myText\u00a0!&apos;" name="nbsp-in-text valid &apos;myText\u00a0!&apos;" time="6.056">
    </testcase>
    <testcase classname="nbsp-in-text valid &apos;«\u00a0myText&apos;" name="nbsp-in-text valid &apos;«\u00a0myText&apos;" time="0.032">
    </testcase>
    <testcase classname="nbsp-in-text valid `myText\u00a0:`" name="nbsp-in-text valid `myText\u00a0:`" time="0.006">
    </testcase>
    <testcase classname="nbsp-in-text valid `«\u00a0myText`" name="nbsp-in-text valid `«\u00a0myText`" time="0.004">
    </testcase>
    <testcase classname="nbsp-in-text valid &quot;myText&amp;nbsp;?&quot;" name="nbsp-in-text valid &quot;myText&amp;nbsp;?&quot;" time="0.007">
    </testcase>
    <testcase classname="nbsp-in-text valid &quot;«&amp;nbsp;myText&quot;" name="nbsp-in-text valid &quot;«&amp;nbsp;myText&quot;" time="0.011">
    </testcase>
    <testcase classname="nbsp-in-text valid &lt;Text&gt;myText&amp;nbsp;€&lt;/Text&gt;" name="nbsp-in-text valid &lt;Text&gt;myText&amp;nbsp;€&lt;/Text&gt;" time="0.008">
    </testcase>
    <testcase classname="nbsp-in-text valid &lt;Text&gt;«&amp;nbsp;myText&lt;/Text&gt;" name="nbsp-in-text valid &lt;Text&gt;«&amp;nbsp;myText&lt;/Text&gt;" time="0.009">
    </testcase>
    <testcase classname="nbsp-in-text invalid &apos;myText !&apos;" name="nbsp-in-text invalid &apos;myText !&apos;" time="0.009">
    </testcase>
    <testcase classname="nbsp-in-text invalid &apos;« myText&apos;" name="nbsp-in-text invalid &apos;« myText&apos;" time="0.009">
    </testcase>
    <testcase classname="nbsp-in-text invalid `myText :`" name="nbsp-in-text invalid `myText :`" time="0.011">
    </testcase>
    <testcase classname="nbsp-in-text invalid `« myText`" name="nbsp-in-text invalid `« myText`" time="0.01">
    </testcase>
    <testcase classname="nbsp-in-text invalid &quot;myText ?&quot;" name="nbsp-in-text invalid &quot;myText ?&quot;" time="0.01">
    </testcase>
    <testcase classname="nbsp-in-text invalid &quot;« myText&quot;" name="nbsp-in-text invalid &quot;« myText&quot;" time="0.006">
    </testcase>
    <testcase classname="nbsp-in-text invalid &lt;Text&gt;myText €&lt;/Text&gt;" name="nbsp-in-text invalid &lt;Text&gt;myText €&lt;/Text&gt;" time="0.019">
    </testcase>
    <testcase classname="nbsp-in-text invalid &lt;Text&gt;« myText&lt;/Text&gt;" name="nbsp-in-text invalid &lt;Text&gt;« myText&lt;/Text&gt;" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SuspiciousLoginSuspendedAccount/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:23" time="4.206" tests="2">
    <testcase classname="&lt;SuspiciousLoginSuspendedAccount/&gt; should match snapshot" name="&lt;SuspiciousLoginSuspendedAccount/&gt; should match snapshot" time="0.097">
    </testcase>
    <testcase classname="&lt;SuspiciousLoginSuspendedAccount/&gt; should log analytics when clicking on &quot;Contacter le service fraude&quot; button" name="&lt;SuspiciousLoginSuspendedAccount/&gt; should log analytics when clicking on &quot;Contacter le service fraude&quot; button" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="&lt;IdentityCheckDMS /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:24" time="3.644" tests="1">
    <testcase classname="&lt;IdentityCheckDMS /&gt; should render correctly" name="&lt;IdentityCheckDMS /&gt; should render correctly" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ErrorApplicationModal /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:25" time="4.239" tests="5">
    <testcase classname="&lt;ErrorApplicationModal /&gt; should match previous snapshot" name="&lt;ErrorApplicationModal /&gt; should match previous snapshot" time="0.151">
    </testcase>
    <testcase classname="&lt;ErrorApplicationModal /&gt; should close modal and navigate to profile when pressing &quot;Aller vers la section profil&quot; button" name="&lt;ErrorApplicationModal /&gt; should close modal and navigate to profile when pressing &quot;Aller vers la section profil&quot; button" time="0.062">
    </testcase>
    <testcase classname="&lt;ErrorApplicationModal /&gt; should log analytics when clicking on close button with label &quot;Aller vers la section profil" name="&lt;ErrorApplicationModal /&gt; should log analytics when clicking on close button with label &quot;Aller vers la section profil" time="0.02">
    </testcase>
    <testcase classname="&lt;ErrorApplicationModal /&gt; should close modal when clicking on button &quot;Mettre en favori" name="&lt;ErrorApplicationModal /&gt; should close modal when clicking on button &quot;Mettre en favori" time="0.203">
    </testcase>
    <testcase classname="&lt;ErrorApplicationModal /&gt; should log analytics when clicking on button &quot;Mettre en favori" name="&lt;ErrorApplicationModal /&gt; should log analytics when clicking on button &quot;Mettre en favori" time="0.093">
    </testcase>
  </testsuite>
  <testsuite name="SignupBanner" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:25" time="3.677" tests="8">
    <testcase classname="SignupBanner When wipAppV2SystemBlock deactivated should display banner with background" name="SignupBanner When wipAppV2SystemBlock deactivated should display banner with background" time="0.062">
    </testcase>
    <testcase classname="SignupBanner When wipAppV2SystemBlock deactivated should not display system banner" name="SignupBanner When wipAppV2SystemBlock deactivated should not display system banner" time="0.033">
    </testcase>
    <testcase classname="SignupBanner When wipAppV2SystemBlock deactivated should redirect to signup form on press" name="SignupBanner When wipAppV2SystemBlock deactivated should redirect to signup form on press" time="0.153">
    </testcase>
    <testcase classname="SignupBanner When wipAppV2SystemBlock deactivated should log analytics on press" name="SignupBanner When wipAppV2SystemBlock deactivated should log analytics on press" time="0.027">
    </testcase>
    <testcase classname="SignupBanner When wipAppV2SystemBlock activated should not display banner with background" name="SignupBanner When wipAppV2SystemBlock activated should not display banner with background" time="0.031">
    </testcase>
    <testcase classname="SignupBanner When wipAppV2SystemBlock activated should not  system banner" name="SignupBanner When wipAppV2SystemBlock activated should not  system banner" time="0.016">
    </testcase>
    <testcase classname="SignupBanner When wipAppV2SystemBlock activated should redirect to signup form on press" name="SignupBanner When wipAppV2SystemBlock activated should redirect to signup form on press" time="0.014">
    </testcase>
    <testcase classname="SignupBanner When wipAppV2SystemBlock activated should log analytics on press" name="SignupBanner When wipAppV2SystemBlock activated should log analytics on press" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="ExpiredOrLostID" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:26" time="3.935" tests="4">
    <testcase classname="ExpiredOrLostID should render correctly" name="ExpiredOrLostID should render correctly" time="0.172">
    </testcase>
    <testcase classname="ExpiredOrLostID should open ants url on press &quot;Aller sur demarches-simplifiees.fr&quot;" name="ExpiredOrLostID should open ants url on press &quot;Aller sur demarches-simplifiees.fr&quot;" time="0.053">
    </testcase>
    <testcase classname="ExpiredOrLostID should log screen view when the screen is mounted" name="ExpiredOrLostID should log screen view when the screen is mounted" time="0.05">
    </testcase>
    <testcase classname="ExpiredOrLostID should send a batch event when the screen is mounted" name="ExpiredOrLostID should send a batch event when the screen is mounted" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="TrendsModule" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:26" time="4.295" tests="11">
    <testcase classname="TrendsModule should not log analytics on render when FF is disabled" name="TrendsModule should not log analytics on render when FF is disabled" time="0.035">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is false should log analytics on render when FF is enabled and home id not in REDESIGN_AB_TESTING_HOME_MODULES" name="TrendsModule When shouldApplyGraphicRedesign remote config is false should log analytics on render when FF is enabled and home id not in REDESIGN_AB_TESTING_HOME_MODULES" time="0.037">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is false should log analytics on render when FF is enabled and home id in REDESIGN_AB_TESTING_HOME_MODULES" name="TrendsModule When shouldApplyGraphicRedesign remote config is false should log analytics on render when FF is enabled and home id in REDESIGN_AB_TESTING_HOME_MODULES" time="0.005">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is true should log analytics on render when FF is enabled and home id not in REDESIGN_AB_TESTING_HOME_MODULES" name="TrendsModule When shouldApplyGraphicRedesign remote config is true should log analytics on render when FF is enabled and home id not in REDESIGN_AB_TESTING_HOME_MODULES" time="0.019">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is true should log analytics on render when FF is enabled and home id in REDESIGN_AB_TESTING_HOME_MODULES" name="TrendsModule When shouldApplyGraphicRedesign remote config is true should log analytics on render when FF is enabled and home id in REDESIGN_AB_TESTING_HOME_MODULES" time="0.05">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is true should redirect to VenueMap when pressing venue map block content type and user location is not everywhere" name="TrendsModule When shouldApplyGraphicRedesign remote config is true should redirect to VenueMap when pressing venue map block content type and user location is not everywhere" time="0.077">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is true should open venue map location modal when pressing venue map block content type and user location is everywhere" name="TrendsModule When shouldApplyGraphicRedesign remote config is true should open venue map location modal when pressing venue map block content type and user location is everywhere" time="0.033">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is true should redirect to thematic home when pressing trend block content type" name="TrendsModule When shouldApplyGraphicRedesign remote config is true should redirect to thematic home when pressing trend block content type" time="0.088">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is true should log analytics when pressing venue map block content type" name="TrendsModule When shouldApplyGraphicRedesign remote config is true should log analytics when pressing venue map block content type" time="0.026">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is true should log trends block clicked when pressing a trend" name="TrendsModule When shouldApplyGraphicRedesign remote config is true should log trends block clicked when pressing a trend" time="0.031">
    </testcase>
    <testcase classname="TrendsModule When shouldApplyGraphicRedesign remote config is true should log trends block clicked when pressing venue map block content type" name="TrendsModule When shouldApplyGraphicRedesign remote config is true should log trends block clicked when pressing venue map block content type" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AddToFavoriteButton /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:27" time="3.72" tests="2">
    <testcase classname="&lt;AddToFavoriteButton /&gt; should render nothing when offer already in favorite" name="&lt;AddToFavoriteButton /&gt; should render nothing when offer already in favorite" time="0.229">
    </testcase>
    <testcase classname="&lt;AddToFavoriteButton /&gt; should add favorite" name="&lt;AddToFavoriteButton /&gt; should add favorite" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ResetPasswordEmailSent /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:29" time="3.86" tests="4">
    <testcase classname="&lt;ResetPasswordEmailSent /&gt; should match snapshot" name="&lt;ResetPasswordEmailSent /&gt; should match snapshot" time="0.104">
    </testcase>
    <testcase classname="&lt;ResetPasswordEmailSent /&gt; should redirect to Login when clicking on &quot;Quitter&quot; button" name="&lt;ResetPasswordEmailSent /&gt; should redirect to Login when clicking on &quot;Quitter&quot; button" time="0.026">
    </testcase>
    <testcase classname="&lt;ResetPasswordEmailSent /&gt; should not show the button to open mail if no mail app is available" name="&lt;ResetPasswordEmailSent /&gt; should not show the button to open mail if no mail app is available" time="0.041">
    </testcase>
    <testcase classname="&lt;ResetPasswordEmailSent /&gt; should open mail app when clicking on check email button" name="&lt;ResetPasswordEmailSent /&gt; should open mail app when clicking on check email button" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="HomeLocationModal" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:30" time="4.124" tests="7">
    <testcase classname="HomeLocationModal should render correctly if modal visible" name="HomeLocationModal should render correctly if modal visible" time="0.226">
    </testcase>
    <testcase classname="HomeLocationModal should trigger logEvent &quot;logUserSetLocation&quot; on onSubmit" name="HomeLocationModal should trigger logEvent &quot;logUserSetLocation&quot; on onSubmit" time="0.3">
    </testcase>
    <testcase classname="HomeLocationModal should hide modal on close modal button press" name="HomeLocationModal should hide modal on close modal button press" time="0.14">
    </testcase>
    <testcase classname="HomeLocationModal should highlight geolocation button if geolocation is selected" name="HomeLocationModal should highlight geolocation button if geolocation is selected" time="0.07">
    </testcase>
    <testcase classname="HomeLocationModal should hide Géolocalisation désactivée if geolocation is enabled" name="HomeLocationModal should hide Géolocalisation désactivée if geolocation is enabled" time="0.059">
    </testcase>
    <testcase classname="HomeLocationModal should request geolocation if geolocation is denied and the geolocation button pressed" name="HomeLocationModal should request geolocation if geolocation is denied and the geolocation button pressed" time="0.045">
    </testcase>
    <testcase classname="HomeLocationModal should show geolocation modal if geolocation is never_ask_again on closing the modal after a geolocation button press" name="HomeLocationModal should show geolocation modal if geolocation is never_ask_again on closing the modal after a geolocation button press" time="0.128">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SSOButton /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:29" time="4.818" tests="7">
    <testcase classname="&lt;SSOButton /&gt; should not query auth state when FF is disabled" name="&lt;SSOButton /&gt; should not query auth state when FF is disabled" time="0.222">
    </testcase>
    <testcase classname="&lt;SSOButton /&gt; should sign in with device info when sso button is clicked" name="&lt;SSOButton /&gt; should sign in with device info when sso button is clicked" time="0.098">
    </testcase>
    <testcase classname="&lt;SSOButton /&gt; should call onSignInFailure when signin fails" name="&lt;SSOButton /&gt; should call onSignInFailure when signin fails" time="0.077">
    </testcase>
    <testcase classname="&lt;SSOButton /&gt; should log analytics when logging in with sso from signup" name="&lt;SSOButton /&gt; should log analytics when logging in with sso from signup" time="0.069">
    </testcase>
    <testcase classname="&lt;SSOButton /&gt; should log analytics when logging in with sso from login" name="&lt;SSOButton /&gt; should log analytics when logging in with sso from login" time="0.124">
    </testcase>
    <testcase classname="&lt;SSOButton /&gt; When shouldLogInfo remote config is false should not log to Sentry on SSO login error" name="&lt;SSOButton /&gt; When shouldLogInfo remote config is false should not log to Sentry on SSO login error" time="0.02">
    </testcase>
    <testcase classname="&lt;SSOButton /&gt; When shouldLogInfo remote config is true should log to Sentry on SSO login error" name="&lt;SSOButton /&gt; When shouldLogInfo remote config is true should log to Sentry on SSO login error" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Favorite /&gt; component" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:28" time="6.176" tests="6">
    <testcase classname="&lt;Favorite /&gt; component should navigate to the offer when clicking on the favorite" name="&lt;Favorite /&gt; component should navigate to the offer when clicking on the favorite" time="0.259">
    </testcase>
    <testcase classname="&lt;Favorite /&gt; component should show distance if geolocation enabled" name="&lt;Favorite /&gt; component should show distance if geolocation enabled" time="0.045">
    </testcase>
    <testcase classname="&lt;Favorite /&gt; component should delete favorite on button click" name="&lt;Favorite /&gt; component should delete favorite on button click" time="0.593">
    </testcase>
    <testcase classname="&lt;Favorite /&gt; component should fail to delete favorite on button click" name="&lt;Favorite /&gt; component should fail to delete favorite on button click" time="0.522">
    </testcase>
    <testcase classname="&lt;Favorite /&gt; component should call share when press share icon" name="&lt;Favorite /&gt; component should call share when press share icon" time="0.034">
    </testcase>
    <testcase classname="&lt;Favorite /&gt; component should log analytics when press share icon" name="&lt;Favorite /&gt; component should log analytics when press share icon" time="0.119">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppV2VenuesModule /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:31" time="4.327" tests="8">
    <testcase classname="&lt;AppV2VenuesModule /&gt; should render correctly" name="&lt;AppV2VenuesModule /&gt; should render correctly" time="0.207">
    </testcase>
    <testcase classname="&lt;AppV2VenuesModule /&gt; should log ModuleDisplayedOnHomePage event when seeing the module" name="&lt;AppV2VenuesModule /&gt; should log ModuleDisplayedOnHomePage event when seeing the module" time="0.033">
    </testcase>
    <testcase classname="&lt;AppV2VenuesModule /&gt; should not render list when data is undefined" name="&lt;AppV2VenuesModule /&gt; should not render list when data is undefined" time="0.003">
    </testcase>
    <testcase classname="&lt;AppV2VenuesModule /&gt; When shouldApplyGraphicRedesign remote config is false should return 4 venues maximum when home id not in REDESIGN_AB_TESTING_HOME_MODULES" name="&lt;AppV2VenuesModule /&gt; When shouldApplyGraphicRedesign remote config is false should return 4 venues maximum when home id not in REDESIGN_AB_TESTING_HOME_MODULES" time="0.023">
    </testcase>
    <testcase classname="&lt;AppV2VenuesModule /&gt; When shouldApplyGraphicRedesign remote config is false should not render list when home id in REDESIGN_AB_TESTING_HOME_MODULES" name="&lt;AppV2VenuesModule /&gt; When shouldApplyGraphicRedesign remote config is false should not render list when home id in REDESIGN_AB_TESTING_HOME_MODULES" time="0.008">
    </testcase>
    <testcase classname="&lt;AppV2VenuesModule /&gt; When shouldApplyGraphicRedesign remote config is true should return 4 venues maximum when home id not in REDESIGN_AB_TESTING_HOME_MODULES" name="&lt;AppV2VenuesModule /&gt; When shouldApplyGraphicRedesign remote config is true should return 4 venues maximum when home id not in REDESIGN_AB_TESTING_HOME_MODULES" time="0.044">
    </testcase>
    <testcase classname="&lt;AppV2VenuesModule /&gt; When shouldApplyGraphicRedesign remote config is true should return 4 venues maximum when home id in REDESIGN_AB_TESTING_HOME_MODULES" name="&lt;AppV2VenuesModule /&gt; When shouldApplyGraphicRedesign remote config is true should return 4 venues maximum when home id in REDESIGN_AB_TESTING_HOME_MODULES" time="0.046">
    </testcase>
    <testcase classname="&lt;AppV2VenuesModule /&gt; should not render list when feature flag deactivated" name="&lt;AppV2VenuesModule /&gt; should not render list when feature flag deactivated" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="EduConnectErrorBoundary component" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:32" time="3.538" tests="2">
    <testcase classname="EduConnectErrorBoundary component should not log error on sentry when error is an expected EduConnectError" name="EduConnectErrorBoundary component should not log error on sentry when error is an expected EduConnectError" time="0.046">
    </testcase>
    <testcase classname="EduConnectErrorBoundary component should log error on sentry when error is not an EduConnectError" name="EduConnectErrorBoundary component should log error on sentry when error is not an EduConnectError" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VenueMessagingApps /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:34" time="3.584" tests="2">
    <testcase classname="&lt;VenueMessagingApps /&gt; should share on instagram" name="&lt;VenueMessagingApps /&gt; should share on instagram" time="0.185">
    </testcase>
    <testcase classname="&lt;VenueMessagingApps /&gt; should log analytics on share" name="&lt;VenueMessagingApps /&gt; should log analytics on share" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="BookingDetailsTicketContent" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:34" time="3.206" tests="9">
    <testcase classname="BookingDetailsTicketContent should display the booking activation code when booking has one" name="BookingDetailsTicketContent should display the booking activation code when booking has one" time="0.071">
    </testcase>
    <testcase classname="BookingDetailsTicketContent should not display the booking token when booking has activation code" name="BookingDetailsTicketContent should not display the booking token when booking has activation code" time="0.012">
    </testcase>
    <testcase classname="BookingDetailsTicketContent should display the booking token when booking has no activation code" name="BookingDetailsTicketContent should display the booking token when booking has no activation code" time="0.003">
    </testcase>
    <testcase classname="BookingDetailsTicketContent should display the access button offer when booking has activation code" name="BookingDetailsTicketContent should display the access button offer when booking has activation code" time="0.015">
    </testcase>
    <testcase classname="BookingDetailsTicketContent should not display the access button offer when offer is not digital and booking has no activation code" name="BookingDetailsTicketContent should not display the access button offer when offer is not digital and booking has no activation code" time="0.018">
    </testcase>
    <testcase classname="BookingDetailsTicketContent should display the access button offer when offer is digital and booking has no activation code" name="BookingDetailsTicketContent should display the access button offer when offer is digital and booking has no activation code" time="0.012">
    </testcase>
    <testcase classname="BookingDetailsTicketContent EAN should display EAN when the offer is a book with an EAN" name="BookingDetailsTicketContent EAN should display EAN when the offer is a book with an EAN" time="0.024">
    </testcase>
    <testcase classname="BookingDetailsTicketContent EAN should not display EAN when the offer is a book without an EAN" name="BookingDetailsTicketContent EAN should not display EAN when the offer is a book without an EAN" time="0.008">
    </testcase>
    <testcase classname="BookingDetailsTicketContent EAN should not display EAN when the offer is not a book" name="BookingDetailsTicketContent EAN should not display EAN when the offer is not a book" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="NonEligibleModal" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:35" time="2.84" tests="13">
    <testcase classname="NonEligibleModal should render correctly for onboarding non-eligible under 15" name="NonEligibleModal should render correctly for onboarding non-eligible under 15" time="0.137">
    </testcase>
    <testcase classname="NonEligibleModal should render correctly for profile tutorial non-eligible under 15" name="NonEligibleModal should render correctly for profile tutorial non-eligible under 15" time="0.013">
    </testcase>
    <testcase classname="NonEligibleModal should render correctly for onboarding non-eligible over 18" name="NonEligibleModal should render correctly for onboarding non-eligible over 18" time="0.007">
    </testcase>
    <testcase classname="NonEligibleModal should render correctly for profile tutorial non-eligible over 18" name="NonEligibleModal should render correctly for profile tutorial non-eligible over 18" time="0.011">
    </testcase>
    <testcase classname="NonEligibleModal should close modal when pressing right header icon" name="NonEligibleModal should close modal when pressing right header icon" time="0.028">
    </testcase>
    <testcase classname="NonEligibleModal should close modal when pressing right header icon" name="NonEligibleModal should close modal when pressing right header icon" time="0.019">
    </testcase>
    <testcase classname="NonEligibleModal should close modal when pressing &quot;Explorer le catalogue&quot;" name="NonEligibleModal should close modal when pressing &quot;Explorer le catalogue&quot;" time="0.015">
    </testcase>
    <testcase classname="NonEligibleModal should close modal when pressing &quot;Explorer le catalogue&quot;" name="NonEligibleModal should close modal when pressing &quot;Explorer le catalogue&quot;" time="0.023">
    </testcase>
    <testcase classname="NonEligibleModal should navigate to home when pressing &quot;Explorer le catalogue&quot; on profile tutorial" name="NonEligibleModal should navigate to home when pressing &quot;Explorer le catalogue&quot; on profile tutorial" time="0.026">
    </testcase>
    <testcase classname="NonEligibleModal should navigate to home when pressing &quot;Explorer le catalogue&quot; on profile tutorial" name="NonEligibleModal should navigate to home when pressing &quot;Explorer le catalogue&quot; on profile tutorial" time="0.014">
    </testcase>
    <testcase classname="NonEligibleModal should not navigate to home when pressing &quot;Explorer le catalogue&quot; on onboarding" name="NonEligibleModal should not navigate to home when pressing &quot;Explorer le catalogue&quot; on onboarding" time="0.016">
    </testcase>
    <testcase classname="NonEligibleModal should not navigate to home when pressing &quot;Explorer le catalogue&quot; on onboarding" name="NonEligibleModal should not navigate to home when pressing &quot;Explorer le catalogue&quot; on onboarding" time="0.007">
    </testcase>
    <testcase classname="NonEligibleModal should redirect to FAQ when pressing &quot;comment ça marche ?&quot; for underage non-eligible" name="NonEligibleModal should redirect to FAQ when pressing &quot;comment ça marche ?&quot; for underage non-eligible" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="TicketBody" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:36" time="2.713" tests="8">
    <testcase classname="TicketBody &lt;QrCode/&gt; display should display the QR code when the the booking have a QR code and the offer subcategory allows to have a qr code" name="TicketBody &lt;QrCode/&gt; display should display the QR code when the the booking have a QR code and the offer subcategory allows to have a qr code" time="0.042">
    </testcase>
    <testcase classname="TicketBody &lt;QrCode/&gt; display should not display the QR code when event subcategory is in subcategories list without QR code display" name="TicketBody &lt;QrCode/&gt; display should not display the QR code when event subcategory is in subcategories list without QR code display" time="0.008">
    </testcase>
    <testcase classname="TicketBody Withdrawal should not display withdrawal informations for legacy offer that doesn&apos;t withdrawal informations" name="TicketBody Withdrawal should not display withdrawal informations for legacy offer that doesn&apos;t withdrawal informations" time="0.013">
    </testcase>
    <testcase classname="TicketBody Withdrawal &lt;NoTicket/&gt; display should display no ticket withdrawal wording" name="TicketBody Withdrawal &lt;NoTicket/&gt; display should display no ticket withdrawal wording" time="0.005">
    </testcase>
    <testcase classname="TicketBody Withdrawal should display by email withdrawal delay when delay is specified and email is normally received" name="TicketBody Withdrawal should display by email withdrawal delay when delay is specified and email is normally received" time="0.038">
    </testcase>
    <testcase classname="TicketBody Withdrawal &lt;TicketWithdrawal/&gt; display should display on site withdrawal delay when delay is specified" name="TicketBody Withdrawal &lt;TicketWithdrawal/&gt; display should display on site withdrawal delay when delay is specified" time="0.005">
    </testcase>
    <testcase classname="TicketBody Withdrawal Consulter mes e-mails display should show the button to open mail" name="TicketBody Withdrawal Consulter mes e-mails display should show the button to open mail" time="0.005">
    </testcase>
    <testcase classname="TicketBody Withdrawal Consulter mes e-mails display should not show the button to open mail if no mail app is available" name="TicketBody Withdrawal Consulter mes e-mails display should not show the button to open mail if no mail app is available" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ApplicationProcessingModal /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:35" time="3.657" tests="5">
    <testcase classname="&lt;ApplicationProcessingModal /&gt; should match previous snapshot" name="&lt;ApplicationProcessingModal /&gt; should match previous snapshot" time="0.128">
    </testcase>
    <testcase classname="&lt;ApplicationProcessingModal /&gt; should navigate to profile when clicking on button &quot;Aller sur mon profil&quot;" name="&lt;ApplicationProcessingModal /&gt; should navigate to profile when clicking on button &quot;Aller sur mon profil&quot;" time="0.093">
    </testcase>
    <testcase classname="&lt;ApplicationProcessingModal /&gt; should log analytics when clicking on button &quot;Aller sur mon profil&quot;" name="&lt;ApplicationProcessingModal /&gt; should log analytics when clicking on button &quot;Aller sur mon profil&quot;" time="0.071">
    </testcase>
    <testcase classname="&lt;ApplicationProcessingModal /&gt; should close modal when clicking on button &quot;Mettre en favori&quot;" name="&lt;ApplicationProcessingModal /&gt; should close modal when clicking on button &quot;Mettre en favori&quot;" time="0.36">
    </testcase>
    <testcase classname="&lt;ApplicationProcessingModal /&gt; should log analytics when clicking on button &quot;Mettre en favori&quot;" name="&lt;ApplicationProcessingModal /&gt; should log analytics when clicking on button &quot;Mettre en favori&quot;" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="MappingTree" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:36" time="3.074" tests="2">
    <testcase classname="MappingTree createMappingTree should return correct tree" name="MappingTree createMappingTree should return correct tree" time="0.068">
    </testcase>
    <testcase classname="MappingTree should return a mapping tree for book category ROMANS_ET_LITTERATURE with FF newMappingEnabled to true" name="MappingTree should return a mapping tree for book category ROMANS_ET_LITTERATURE with FF newMappingEnabled to true" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="buildVenuesQueryOptions" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:37" time="2.806" tests="4">
    <testcase classname="buildVenuesQueryOptions should fetch with default search params" name="buildVenuesQueryOptions should fetch with default search params" time="0.007">
    </testcase>
    <testcase classname="buildVenuesQueryOptions should filter around user if geolocated and around radius provided" name="buildVenuesQueryOptions should filter around user if geolocated and around radius provided" time="0.002">
    </testcase>
    <testcase classname="buildVenuesQueryOptions should filter with tags for playlists" name="buildVenuesQueryOptions should filter with tags for playlists" time="0.007">
    </testcase>
    <testcase classname="buildVenuesQueryOptions should filter venue types if provided" name="buildVenuesQueryOptions should filter venue types if provided" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FilterButton" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:39" time="2.371" tests="6">
    <testcase classname="FilterButton should contains the number of active filters" name="FilterButton should contains the number of active filters" time="0.035">
    </testcase>
    <testcase classname="FilterButton should not display badge when there are no active filters" name="FilterButton should not display badge when there are no active filters" time="0.009">
    </testcase>
    <testcase classname="FilterButton should navigate with undefined params when pressing filter button" name="FilterButton should navigate with undefined params when pressing filter button" time="0.016">
    </testcase>
    <testcase classname="FilterButton Accessibility should have an accessible label with the number of active filters" name="FilterButton Accessibility should have an accessible label with the number of active filters" time="0.008">
    </testcase>
    <testcase classname="FilterButton Accessibility should have an accessible label with one active filter" name="FilterButton Accessibility should have an accessible label with one active filter" time="0.03">
    </testcase>
    <testcase classname="FilterButton Accessibility should have an accessible label without active filter" name="FilterButton Accessibility should have an accessible label without active filter" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="useHighlightOffer" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:38" time="2.874" tests="8">
    <testcase classname="useHighlightOffer should return offer when offerId is provided" name="useHighlightOffer should return offer when offerId is provided" time="0.14">
    </testcase>
    <testcase classname="useHighlightOffer should return offer when offerTag is provided" name="useHighlightOffer should return offer when offerTag is provided" time="0.053">
    </testcase>
    <testcase classname="useHighlightOffer should return offer when offerEan is provided" name="useHighlightOffer should return offer when offerEan is provided" time="0.067">
    </testcase>
    <testcase classname="useHighlightOffer should return undefined when no offer id or tag or ean is provided" name="useHighlightOffer should return undefined when no offer id or tag or ean is provided" time="0.005">
    </testcase>
    <testcase classname="useHighlightOffer geolocation should return offer when isGeolocated is true and the distance to the offer is within the radius" name="useHighlightOffer geolocation should return offer when isGeolocated is true and the distance to the offer is within the radius" time="0.069">
    </testcase>
    <testcase classname="useHighlightOffer geolocation should not return offer when isGeolocated is true and the distance to the offer is beyond radius" name="useHighlightOffer geolocation should not return offer when isGeolocated is true and the distance to the offer is beyond radius" time="0.006">
    </testcase>
    <testcase classname="useHighlightOffer geolocation should not return offer when isGeolocated is true and the user position is not defined" name="useHighlightOffer geolocation should not return offer when isGeolocated is true and the user position is not defined" time="0.007">
    </testcase>
    <testcase classname="useHighlightOffer geolocation should return offer when isGeolocated is true and around radius is not defined" name="useHighlightOffer geolocation should return offer when isGeolocated is true and around radius is not defined" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="&lt;TicketSwiper/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:38" time="3.804" tests="6">
    <testcase classname="&lt;TicketSwiper/&gt; should display ticket without external bookings information if there are no external bookings (externalBookings is null)" name="&lt;TicketSwiper/&gt; should display ticket without external bookings information if there are no external bookings (externalBookings is null)" time="0.094">
    </testcase>
    <testcase classname="&lt;TicketSwiper/&gt; should display ticket without external bookings information if there are no external bookings (empty externalBookings array)" name="&lt;TicketSwiper/&gt; should display ticket without external bookings information if there are no external bookings (empty externalBookings array)" time="0.081">
    </testcase>
    <testcase classname="&lt;TicketSwiper/&gt; should display one ticket with external bookings information if there are one external booking" name="&lt;TicketSwiper/&gt; should display one ticket with external bookings information if there are one external booking" time="0.092">
    </testcase>
    <testcase classname="&lt;TicketSwiper/&gt; should display as many tickets as the number of tickets" name="&lt;TicketSwiper/&gt; should display as many tickets as the number of tickets" time="0.044">
    </testcase>
    <testcase classname="&lt;TicketSwiper/&gt; Swiper ticket controls should not show if number of ticket is equal to one" name="&lt;TicketSwiper/&gt; Swiper ticket controls should not show if number of ticket is equal to one" time="0.017">
    </testcase>
    <testcase classname="&lt;TicketSwiper/&gt; Swiper ticket controls should show if number of ticket is greater than one" name="&lt;TicketSwiper/&gt; Swiper ticket controls should show if number of ticket is greater than one" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="categoriesHelpers" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:39" time="3.739" tests="36">
    <testcase classname="categoriesHelpers should sort categories by alphabetical order" name="categoriesHelpers should sort categories by alphabetical order" time="0.018">
    </testcase>
    <testcase classname="categoriesHelpers should sort native subcategories by alphabetical order" name="categoriesHelpers should sort native subcategories by alphabetical order" time="0.003">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline should return false when category and native category are undefined" name="categoriesHelpers isOnlyOnline should return false when category and native category are undefined" time="0.002">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline Category should return true when all native categories of the category are online platform" name="categoriesHelpers isOnlyOnline Category should return true when all native categories of the category are online platform" time="0.004">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline Category should return false when all native categories of the category are offline" name="categoriesHelpers isOnlyOnline Category should return false when all native categories of the category are offline" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline Category should return false when native categories of the category are online and offline platform" name="categoriesHelpers isOnlyOnline Category should return false when native categories of the category are online and offline platform" time="0.002">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline Category should return false when native categories of the category are online, offline and online or offline platform" name="categoriesHelpers isOnlyOnline Category should return false when native categories of the category are online, offline and online or offline platform" time="0.004">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline Native category should return true when all pro subcategories of the native category are online platform" name="categoriesHelpers isOnlyOnline Native category should return true when all pro subcategories of the native category are online platform" time="0.003">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline Native category should return false when all pro subcategories of the native category are offline" name="categoriesHelpers isOnlyOnline Native category should return false when all pro subcategories of the native category are offline" time="0.003">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline Native category should return false when pro subcategories of the native category are online and offline platform" name="categoriesHelpers isOnlyOnline Native category should return false when pro subcategories of the native category are online and offline platform" time="0.003">
    </testcase>
    <testcase classname="categoriesHelpers isOnlyOnline Native category should return false when pro subcategories of the native category are offline and online or offline platform" name="categoriesHelpers isOnlyOnline Native category should return false when pro subcategories of the native category are offline and online or offline platform" time="0">
    </testcase>
    <testcase classname="categoriesHelpers getNativeCategoryFromEnum should return undefined when subcategories API return undefined data" name="categoriesHelpers getNativeCategoryFromEnum should return undefined when subcategories API return undefined data" time="0.003">
    </testcase>
    <testcase classname="categoriesHelpers getNativeCategoryFromEnum should return undefined when native category id is undefined" name="categoriesHelpers getNativeCategoryFromEnum should return undefined when native category id is undefined" time="0.004">
    </testcase>
    <testcase classname="categoriesHelpers getNativeCategoryFromEnum should return the native category from native category id" name="categoriesHelpers getNativeCategoryFromEnum should return the native category from native category id" time="0.003">
    </testcase>
    <testcase classname="categoriesHelpers getSearchGroupsEnumArrayFromNativeCategoryEnum should return an empty array when no data from backend" name="categoriesHelpers getSearchGroupsEnumArrayFromNativeCategoryEnum should return an empty array when no data from backend" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getSearchGroupsEnumArrayFromNativeCategoryEnum should return an empty array without native category in parameter" name="categoriesHelpers getSearchGroupsEnumArrayFromNativeCategoryEnum should return an empty array without native category in parameter" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getSearchGroupsEnumArrayFromNativeCategoryEnum should return an array of categories id" name="categoriesHelpers getSearchGroupsEnumArrayFromNativeCategoryEnum should return an array of categories id" time="0.004">
    </testcase>
    <testcase classname="categoriesHelpers isNativeCategoryOfCategory should return false when no data from backend" name="categoriesHelpers isNativeCategoryOfCategory should return false when no data from backend" time="0.005">
    </testcase>
    <testcase classname="categoriesHelpers isNativeCategoryOfCategory should return false when native category not associated to category" name="categoriesHelpers isNativeCategoryOfCategory should return false when native category not associated to category" time="0.002">
    </testcase>
    <testcase classname="categoriesHelpers isNativeCategoryOfCategory should return true when native category associated to category" name="categoriesHelpers isNativeCategoryOfCategory should return true when native category associated to category" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getDefaultFormView should render categories view by default when no category selected" name="categoriesHelpers getDefaultFormView should render categories view by default when no category selected" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getDefaultFormView should render categories view when category selected is &quot;Cartes jeunes&quot; because it does not native categories" name="categoriesHelpers getDefaultFormView should render categories view when category selected is &quot;Cartes jeunes&quot; because it does not native categories" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getDefaultFormView should render native categories view when category that is not &quot;Cartes jeunes&quot; because the native category view includes &quot;Tout&quot; choice selected" name="categoriesHelpers getDefaultFormView should render native categories view when category that is not &quot;Cartes jeunes&quot; because the native category view includes &quot;Tout&quot; choice selected" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getDefaultFormView should render native categories view when a category that is not &quot;Cartes jeunes&quot; and a native category that it has not genre type selected" name="categoriesHelpers getDefaultFormView should render native categories view when a category that is not &quot;Cartes jeunes&quot; and a native category that it has not genre type selected" time="0.002">
    </testcase>
    <testcase classname="categoriesHelpers getDefaultFormView should render genre type categories view when a category, a native category that it has genre type selected" name="categoriesHelpers getDefaultFormView should render genre type categories view when a category, a native category that it has genre type selected" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getDefaultFormView should render genre type categories view when a category, a native category, a genre type categories selected" name="categoriesHelpers getDefaultFormView should render genre type categories view when a category, a native category, a genre type categories selected" time="0.002">
    </testcase>
    <testcase classname="categoriesHelpers getFacetTypeFromGenreTypeKey should return OFFER_BOOK_TYPE for &quot;BOOK&quot;" name="categoriesHelpers getFacetTypeFromGenreTypeKey should return OFFER_BOOK_TYPE for &quot;BOOK&quot;" time="0.003">
    </testcase>
    <testcase classname="categoriesHelpers getFacetTypeFromGenreTypeKey should return OFFER_MUSIC_TYPE for &quot;MUSIC&quot;" name="categoriesHelpers getFacetTypeFromGenreTypeKey should return OFFER_MUSIC_TYPE for &quot;MUSIC&quot;" time="0.002">
    </testcase>
    <testcase classname="categoriesHelpers getFacetTypeFromGenreTypeKey should return OFFER_SHOW_TYPE for &quot;SHOW&quot;" name="categoriesHelpers getFacetTypeFromGenreTypeKey should return OFFER_SHOW_TYPE for &quot;SHOW&quot;" time="0.003">
    </testcase>
    <testcase classname="categoriesHelpers getFacetTypeFromGenreTypeKey should return OFFER_MOVIE_GENRES for &quot;MOVIE&quot;" name="categoriesHelpers getFacetTypeFromGenreTypeKey should return OFFER_MOVIE_GENRES for &quot;MOVIE&quot;" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getNbResultsFacetLabel should display &quot;+10000&quot; when the number of result facets is greater than 10000" name="categoriesHelpers getNbResultsFacetLabel should display &quot;+10000&quot; when the number of result facets is greater than 10000" time="0.007">
    </testcase>
    <testcase classname="categoriesHelpers getNbResultsFacetLabel should display the exact number of result facets is less than 10000" name="categoriesHelpers getNbResultsFacetLabel should display the exact number of result facets is less than 10000" time="0.001">
    </testcase>
    <testcase classname="categoriesHelpers getNbResultsFacetLabel should display &quot;0&quot; when the number of result facets is equal to 0" name="categoriesHelpers getNbResultsFacetLabel should display &quot;0&quot; when the number of result facets is equal to 0" time="0.002">
    </testcase>
    <testcase classname="categoriesHelpers getNbResultsFacetLabel should return undefined when the number of result facets is undefined" name="categoriesHelpers getNbResultsFacetLabel should return undefined when the number of result facets is undefined" time="0.002">
    </testcase>
    <testcase classname="categoriesHelpers buildBookSearchPayloadValues should return search payload for a book native category level" name="categoriesHelpers buildBookSearchPayloadValues should return search payload for a book native category level" time="0.007">
    </testcase>
    <testcase classname="categoriesHelpers buildBookSearchPayloadValues should return search payload for a book genre type level" name="categoriesHelpers buildBookSearchPayloadValues should return search payload for a book genre type level" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getEmailUpdateStatus" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:39" time="3.929" tests="13">
    <testcase classname="getEmailUpdateStatus should capture a Sentry exception when error code is 422 and return undefined" name="getEmailUpdateStatus should capture a Sentry exception when error code is 422 and return undefined" time="0.108">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry exception when error code is 401 and return undefined" name="getEmailUpdateStatus should not capture a Sentry exception when error code is 401 and return undefined" time="0.021">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry exception when error code is 404 and return undefined" name="getEmailUpdateStatus should not capture a Sentry exception when error code is 404 and return undefined" time="0.009">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry exception when error code is 500 and return undefined" name="getEmailUpdateStatus should not capture a Sentry exception when error code is 500 and return undefined" time="0.006">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry exception when error code is 502 and return undefined" name="getEmailUpdateStatus should not capture a Sentry exception when error code is 502 and return undefined" time="0.006">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry exception when error code is 503 and return undefined" name="getEmailUpdateStatus should not capture a Sentry exception when error code is 503 and return undefined" time="0.006">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry exception when error code is 504 and return undefined" name="getEmailUpdateStatus should not capture a Sentry exception when error code is 504 and return undefined" time="0.008">
    </testcase>
    <testcase classname="getEmailUpdateStatus should capture a Sentry info and return undefined when error code is 401 and shouldLogEvent is true" name="getEmailUpdateStatus should capture a Sentry info and return undefined when error code is 401 and shouldLogEvent is true" time="0.007">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry info and return undefined when error code is 401 and shouldLogEvent is false" name="getEmailUpdateStatus should not capture a Sentry info and return undefined when error code is 401 and shouldLogEvent is false" time="0.007">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry info when error code is 500 and return undefined" name="getEmailUpdateStatus should not capture a Sentry info when error code is 500 and return undefined" time="0.003">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry info when error code is 502 and return undefined" name="getEmailUpdateStatus should not capture a Sentry info when error code is 502 and return undefined" time="0.003">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry info when error code is 503 and return undefined" name="getEmailUpdateStatus should not capture a Sentry info when error code is 503 and return undefined" time="0.015">
    </testcase>
    <testcase classname="getEmailUpdateStatus should not capture a Sentry info when error code is 504 and return undefined" name="getEmailUpdateStatus should not capture a Sentry info when error code is 504 and return undefined" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VenueListModule /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:41" time="3.527" tests="2">
    <testcase classname="&lt;VenueListModule /&gt; should redirect to target venue when pressing on it" name="&lt;VenueListModule /&gt; should redirect to target venue when pressing on it" time="0.23">
    </testcase>
    <testcase classname="&lt;VenueListModule /&gt; should trigger log ConsultVenue when pressing on venue list item" name="&lt;VenueListModule /&gt; should trigger log ConsultVenue when pressing on venue list item" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VenueBanner /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:42" time="3.124" tests="4">
    <testcase classname="&lt;VenueBanner /&gt; should display the Google watermark if the image is from Google" name="&lt;VenueBanner /&gt; should display the Google watermark if the image is from Google" time="0.036">
    </testcase>
    <testcase classname="&lt;VenueBanner /&gt; should not display the Google watermark if the image is not from Google" name="&lt;VenueBanner /&gt; should not display the Google watermark if the image is not from Google" time="0.002">
    </testcase>
    <testcase classname="&lt;VenueBanner /&gt; should display the copyright if the image is from Google and has a credit" name="&lt;VenueBanner /&gt; should display the copyright if the image is from Google and has a credit" time="0.009">
    </testcase>
    <testcase classname="&lt;VenueBanner /&gt; should not display the copyright if the image has a credit but is not from Google" name="&lt;VenueBanner /&gt; should not display the copyright if the image has a credit but is not from Google" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Contact support button" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:42" time="3.224" tests="2">
    <testcase classname="Contact support button should open mail app when clicking on contact support button" name="Contact support button should open mail app when clicking on contact support button" time="0.114">
    </testcase>
    <testcase classname="Navigate to home button should redirect to Home when clicking on homepage button" name="Navigate to home button should redirect to Home when clicking on homepage button" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SignupConfirmationExpiredLink/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:42" time="3.935" tests="3">
    <testcase classname="&lt;SignupConfirmationExpiredLink/&gt; should redirect to home page WHEN go back to home button is clicked" name="&lt;SignupConfirmationExpiredLink/&gt; should redirect to home page WHEN go back to home button is clicked" time="0.16">
    </testcase>
    <testcase classname="&lt;SignupConfirmationExpiredLink/&gt; should redirect to signup confirmation email sent page WHEN clicking on resend email and response is success" name="&lt;SignupConfirmationExpiredLink/&gt; should redirect to signup confirmation email sent page WHEN clicking on resend email and response is success" time="0.261">
    </testcase>
    <testcase classname="&lt;SignupConfirmationExpiredLink/&gt; should NOT redirect to signup confirmation email sent page WHEN clicking on resend email and response is failure" name="&lt;SignupConfirmationExpiredLink/&gt; should NOT redirect to signup confirmation email sent page WHEN clicking on resend email and response is failure" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="BookDuoChoice" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:43" time="2.84" tests="3">
    <testcase classname="BookDuoChoice should display two blocs if offer is duo" name="BookDuoChoice should display two blocs if offer is duo" time="0.083">
    </testcase>
    <testcase classname="BookDuoChoice should select an item when pressed" name="BookDuoChoice should select an item when pressed" time="0.022">
    </testcase>
    <testcase classname="BookDuoChoice should show &apos;crédit insuffisant&apos; if not enough credit" name="BookDuoChoice should show &apos;crédit insuffisant&apos; if not enough credit" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="ContactSupportButton" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:44" time="2.996" tests="1">
    <testcase classname="ContactSupportButton should open mail app when clicking on contact service button" name="ContactSupportButton should open mail app when clicking on contact service button" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ExternalTouchableLink /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:44" time="2.797" tests="4">
    <testcase classname="&lt;ExternalTouchableLink /&gt; External Navigation should open url with expected parameters (nominal case)" name="&lt;ExternalTouchableLink /&gt; External Navigation should open url with expected parameters (nominal case)" time="0.058">
    </testcase>
    <testcase classname="&lt;ExternalTouchableLink /&gt; External Navigation should open itinerary if address is provided" name="&lt;ExternalTouchableLink /&gt; External Navigation should open itinerary if address is provided" time="0.004">
    </testcase>
    <testcase classname="&lt;ExternalTouchableLink /&gt; External Navigation should open in-app urls in new window by default" name="&lt;ExternalTouchableLink /&gt; External Navigation should open in-app urls in new window by default" time="0.005">
    </testcase>
    <testcase classname="&lt;ExternalTouchableLink /&gt; External Navigation should open in-app urls in current window or app when openInNewWindow=false" name="&lt;ExternalTouchableLink /&gt; External Navigation should open in-app urls in current window or app when openInNewWindow=false" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="getScreenFromDeeplink()" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:45" time="2.489" tests="6">
    <testcase classname="getScreenFromDeeplink() should return PageNotFound when route is unknown" name="getScreenFromDeeplink() should return PageNotFound when route is unknown" time="0.006">
    </testcase>
    <testcase classname="getScreenFromDeeplink() should return PageNotFound when prefix is not in known config" name="getScreenFromDeeplink() should return PageNotFound when prefix is not in known config" time="0.004">
    </testcase>
    <testcase classname="getScreenFromDeeplink() should return Home" name="getScreenFromDeeplink() should return Home" time="0.011">
    </testcase>
    <testcase classname="getScreenFromDeeplink() should also work with a different accepted prefix" name="getScreenFromDeeplink() should also work with a different accepted prefix" time="0.001">
    </testcase>
    <testcase classname="getScreenFromDeeplink() should return Profil when url = /profil" name="getScreenFromDeeplink() should return Profil when url = /profil" time="0.001">
    </testcase>
    <testcase classname="getScreenFromDeeplink() should return Offer with id=666" name="getScreenFromDeeplink() should return Offer with id=666" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VenueNotFound /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:46" time="2.209" tests="1">
    <testcase classname="&lt;VenueNotFound /&gt; should render correctly" name="&lt;VenueNotFound /&gt; should render correctly" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="useOnboardingContext()" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:46" time="2.466" tests="2">
    <testcase classname="useOnboardingContext() should show modal when showNonEligibleModal is called" name="useOnboardingContext() should show modal when showNonEligibleModal is called" time="0.015">
    </testcase>
    <testcase classname="useOnboardingContext() should show modal when showNonEligibleModal is called" name="useOnboardingContext() should show modal when showNonEligibleModal is called" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="useGetDepositAmountsByAge" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:46" time="2.376" tests="7">
    <testcase classname="useGetDepositAmountsByAge should return nothing when birthDate is not defined" name="useGetDepositAmountsByAge should return nothing when birthDate is not defined" time="0.012">
    </testcase>
    <testcase classname="useGetDepositAmountsByAge should return nothing when age is less than 15 years old" name="useGetDepositAmountsByAge should return nothing when age is less than 15 years old" time="0.006">
    </testcase>
    <testcase classname="useGetDepositAmountsByAge should return &quot;20€&quot; when 15 years old" name="useGetDepositAmountsByAge should return &quot;20€&quot; when 15 years old" time="0.002">
    </testcase>
    <testcase classname="useGetDepositAmountsByAge should return &quot;30€&quot; when 16 years old" name="useGetDepositAmountsByAge should return &quot;30€&quot; when 16 years old" time="0.003">
    </testcase>
    <testcase classname="useGetDepositAmountsByAge should return &quot;30€&quot; when 17 years old" name="useGetDepositAmountsByAge should return &quot;30€&quot; when 17 years old" time="0.003">
    </testcase>
    <testcase classname="useGetDepositAmountsByAge should return &quot;300€&quot; when 18 years old" name="useGetDepositAmountsByAge should return &quot;300€&quot; when 18 years old" time="0.004">
    </testcase>
    <testcase classname="useGetDepositAmountsByAge should return nothing when age is more than 18 years old" name="useGetDepositAmountsByAge should return nothing when age is more than 18 years old" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="useOffer" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:47" time="2.469" tests="1">
    <testcase classname="useOffer should call API otherwise" name="useOffer should call API otherwise" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="AsyncErrorBoundary component" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:48" time="2.247" tests="18">
    <testcase classname="AsyncErrorBoundary component should render" name="AsyncErrorBoundary component should render" time="0.057">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should go back on back arrow press" name="AsyncErrorBoundary component should go back on back arrow press" time="0.016">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should call retry with AsyncError" name="AsyncErrorBoundary component should call retry with AsyncError" time="0.011">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should capture exception when error is Error" name="AsyncErrorBoundary component should capture exception when error is Error" time="0.01">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should capture exception when error is ApiError and error code is 400" name="AsyncErrorBoundary component should capture exception when error is ApiError and error code is 400" time="0.015">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 401" name="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 401" time="0.013">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 500" name="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 500" time="0.019">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 502" name="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 502" time="0.016">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 503" name="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 503" time="0.009">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 504" name="AsyncErrorBoundary component should not capture error exception when error is ApiError and error code is 504" time="0.016">
    </testcase>
    <testcase classname="AsyncErrorBoundary component When shouldLogInfo remote config is true should capture info when error is ApiError and error code is 401" name="AsyncErrorBoundary component When shouldLogInfo remote config is true should capture info when error is ApiError and error code is 401" time="0.02">
    </testcase>
    <testcase classname="AsyncErrorBoundary component When shouldLogInfo remote config is false should not capture info when error is ApiError and error code is 401" name="AsyncErrorBoundary component When shouldLogInfo remote config is false should not capture info when error is ApiError and error code is 401" time="0.023">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture info when error is MonitoringError" name="AsyncErrorBoundary component should not capture info when error is MonitoringError" time="0.01">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture info when error is ApiError and error code is 400" name="AsyncErrorBoundary component should not capture info when error is ApiError and error code is 400" time="0.009">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture exception two times when error is MonitoringError" name="AsyncErrorBoundary component should not capture exception two times when error is MonitoringError" time="0.006">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should not capture exception when error is ScreenError" name="AsyncErrorBoundary component should not capture exception when error is ScreenError" time="0.008">
    </testcase>
    <testcase classname="AsyncErrorBoundary component should capture message when error is ScreenError" name="AsyncErrorBoundary component should capture message when error is ScreenError" time="0.037">
    </testcase>
    <testcase classname="Usage of AsyncErrorBoundary as fallback in ErrorBoundary should display custom error page when children raise error" name="Usage of AsyncErrorBoundary as fallback in ErrorBoundary should display custom error page when children raise error" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SuggestedPlaces/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:48" time="2.319" tests="5">
    <testcase classname="&lt;SuggestedPlaces/&gt; should show suggested places when searching a place" name="&lt;SuggestedPlaces/&gt; should show suggested places when searching a place" time="0.245">
    </testcase>
    <testcase classname="&lt;SuggestedPlaces/&gt; should show help message when there are no results" name="&lt;SuggestedPlaces/&gt; should show help message when there are no results" time="0.171">
    </testcase>
    <testcase classname="&lt;SuggestedPlaces/&gt; should not show help message when the query is empty" name="&lt;SuggestedPlaces/&gt; should not show help message when the query is empty" time="0.007">
    </testcase>
    <testcase classname="&lt;SuggestedPlaces/&gt; should show help message when the query is too short" name="&lt;SuggestedPlaces/&gt; should show help message when the query is too short" time="0.01">
    </testcase>
    <testcase classname="&lt;SuggestedPlaces/&gt; should show loader when loading" name="&lt;SuggestedPlaces/&gt; should show loader when loading" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="useAlgoliaRecommendedOffers" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:48" time="2.595" tests="7">
    <testcase classname="useAlgoliaRecommendedOffers should fetch algolia when ids are provided" name="useAlgoliaRecommendedOffers should fetch algolia when ids are provided" time="0.017">
    </testcase>
    <testcase classname="useAlgoliaRecommendedOffers should filter algolia hits" name="useAlgoliaRecommendedOffers should filter algolia hits" time="0.055">
    </testcase>
    <testcase classname="useAlgoliaRecommendedOffers should return undefined when algolia does not return any hit" name="useAlgoliaRecommendedOffers should return undefined when algolia does not return any hit" time="0.003">
    </testcase>
    <testcase classname="useAlgoliaRecommendedOffers should return undefined when ids are not provided" name="useAlgoliaRecommendedOffers should return undefined when ids are not provided" time="0.002">
    </testcase>
    <testcase classname="useAlgoliaRecommendedOffers should call function to preserve ids offer order when shouldPreserveIdsOrder is true" name="useAlgoliaRecommendedOffers should call function to preserve ids offer order when shouldPreserveIdsOrder is true" time="0.005">
    </testcase>
    <testcase classname="useAlgoliaRecommendedOffers should not call function to preserve ids offer order when shouldPreserveIdsOrder is undefined" name="useAlgoliaRecommendedOffers should not call function to preserve ids offer order when shouldPreserveIdsOrder is undefined" time="0.004">
    </testcase>
    <testcase classname="useAlgoliaRecommendedOffers should not call function to preserve ids offer order when shouldPreserveIdsOrder is false" name="useAlgoliaRecommendedOffers should not call function to preserve ids offer order when shouldPreserveIdsOrder is false" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="hasEnoughCredit" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:48" time="2.697" tests="12">
    <testcase classname="hasEnoughCredit any user can book free offers" name="hasEnoughCredit any user can book free offers" time="0.009">
    </testcase>
    <testcase classname="hasEnoughCredit any user can book free offers" name="hasEnoughCredit any user can book free offers" time="0.002">
    </testcase>
    <testcase classname="hasEnoughCredit any user can book free offers" name="hasEnoughCredit any user can book free offers" time="0.002">
    </testcase>
    <testcase classname="hasEnoughCredit any user can book free offers" name="hasEnoughCredit any user can book free offers" time="0.001">
    </testcase>
    <testcase classname="hasEnoughCredit should return true if the price is falsy" name="hasEnoughCredit should return true if the price is falsy" time="0.003">
    </testcase>
    <testcase classname="hasEnoughCredit should return false if domainsCredit is falsy" name="hasEnoughCredit should return false if domainsCredit is falsy" time="0.003">
    </testcase>
    <testcase classname="hasEnoughCredit should be bookable if it respects all the domains remaining credit - before generalisation" name="hasEnoughCredit should be bookable if it respects all the domains remaining credit - before generalisation" time="0.003">
    </testcase>
    <testcase classname="hasEnoughCredit should be bookable if it respects all the domains remaining credit - after generalisation" name="hasEnoughCredit should be bookable if it respects all the domains remaining credit - after generalisation" time="0.004">
    </testcase>
    <testcase classname="useHasEnoughCredit should return false if no offer nor user found" name="useHasEnoughCredit should return false if no offer nor user found" time="0.01">
    </testcase>
    <testcase classname="useHasEnoughCredit should return false if the user does not have domainsCredit" name="useHasEnoughCredit should return false if the user does not have domainsCredit" time="0.001">
    </testcase>
    <testcase classname="useHasEnoughCredit should return false if the user does not have enough credit for the offer" name="useHasEnoughCredit should return false if the user does not have enough credit for the offer" time="0.001">
    </testcase>
    <testcase classname="useHasEnoughCredit should return true if the user has enough credit for the offer" name="useHasEnoughCredit should return true if the user has enough credit for the offer" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="HorizontalTile Component" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:49" time="2.407" tests="1">
    <testcase classname="HorizontalTile Component should render correctly" name="HorizontalTile Component should render correctly" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="SystemBanner" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:50" time="2.38" tests="1">
    <testcase classname="SystemBanner should log analytics on display" name="SystemBanner should log analytics on display" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="useAvailableCredit" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:50" time="2.789" tests="4">
    <testcase classname="useAvailableCredit hasOngoingCredit should return true when depositExpirationDate equals 2022-12-01T00:00:00.000Z" name="useAvailableCredit hasOngoingCredit should return true when depositExpirationDate equals 2022-12-01T00:00:00.000Z" time="0.01">
    </testcase>
    <testcase classname="useAvailableCredit hasOngoingCredit should return false when depositExpirationDate equals 2019-12-01T00:00:00.000Z" name="useAvailableCredit hasOngoingCredit should return false when depositExpirationDate equals 2019-12-01T00:00:00.000Z" time="0.001">
    </testcase>
    <testcase classname="useAvailableCredit hasOngoingCredit should return false when depositExpirationDate equals undefined" name="useAvailableCredit hasOngoingCredit should return false when depositExpirationDate equals undefined" time="0.007">
    </testcase>
    <testcase classname="useAvailableCredit hasOngoingCredit should return true when depositExpirationDate equals 2020-12-01T00:00:00.000Z" name="useAvailableCredit hasOngoingCredit should return true when depositExpirationDate equals 2020-12-01T00:00:00.000Z" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="VideoMultiOfferTile" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:50" time="3.152" tests="3">
    <testcase classname="VideoMultiOfferTile should redirect to an offer when pressing it" name="VideoMultiOfferTile should redirect to an offer when pressing it" time="0.158">
    </testcase>
    <testcase classname="VideoMultiOfferTile should log ConsultOffer on when pressing it" name="VideoMultiOfferTile should log ConsultOffer on when pressing it" time="0.042">
    </testcase>
    <testcase classname="VideoMultiOfferTile should render properly with FF on" name="VideoMultiOfferTile should render properly with FF on" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="&lt;BookingInformations /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:52" time="2.209" tests="17">
    <testcase classname="&lt;BookingInformations /&gt; should return empty component when no offer" name="&lt;BookingInformations /&gt; should return empty component when no offer" time="0.092">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should return empty component when no stock" name="&lt;BookingInformations /&gt; should return empty component when no stock" time="0.003">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should return empty component when no quantity" name="&lt;BookingInformations /&gt; should return empty component when no quantity" time="0.006">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should render event date section when event" name="&lt;BookingInformations /&gt; should render event date section when event" time="0.063">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should display `Gratuit` if price is 0" name="&lt;BookingInformations /&gt; should display `Gratuit` if price is 0" time="0.017">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should display unique price when quantity is unique" name="&lt;BookingInformations /&gt; should display unique price when quantity is unique" time="0.007">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should display stock label when the offer has it" name="&lt;BookingInformations /&gt; should display stock label when the offer has it" time="0.035">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; shouldn&apos;t display stock label when the offer hasn&apos;t any" name="&lt;BookingInformations /&gt; shouldn&apos;t display stock label when the offer hasn&apos;t any" time="0.006">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should display stock attributes when the offer has it" name="&lt;BookingInformations /&gt; should display stock attributes when the offer has it" time="0.04">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; shouldn&apos;t display stock attributes when the offer hasn&apos;t any" name="&lt;BookingInformations /&gt; shouldn&apos;t display stock attributes when the offer hasn&apos;t any" time="0.015">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should display location when offer is not digital" name="&lt;BookingInformations /&gt; should display location when offer is not digital" time="0.014">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should display expirationDate section when offer is digital and has expirationDate" name="&lt;BookingInformations /&gt; should display expirationDate section when offer is digital and has expirationDate" time="0.007">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; shouldn&apos;t display expirationDate section when offer is digital and has no expirationDate" name="&lt;BookingInformations /&gt; shouldn&apos;t display expirationDate section when offer is digital and has no expirationDate" time="0.034">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; should display only date if it has no duration information" name="&lt;BookingInformations /&gt; should display only date if it has no duration information" time="0.014">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; formatDateTimezone() should format Date 2021-02-23T13:45:00 to string &quot;Mardi 23 février 2021, 13h45&quot;" name="&lt;BookingInformations /&gt; formatDateTimezone() should format Date 2021-02-23T13:45:00 to string &quot;Mardi 23 février 2021, 13h45&quot;" time="0.003">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; formatDateTimezone() should format Date 2021-05-03T09:30:00.000Z to string &quot;Lundi 3 mai 2021, 09h30&quot;" name="&lt;BookingInformations /&gt; formatDateTimezone() should format Date 2021-05-03T09:30:00.000Z to string &quot;Lundi 3 mai 2021, 09h30&quot;" time="0.001">
    </testcase>
    <testcase classname="&lt;BookingInformations /&gt; formatDateTimezone() should format Date 2021-12-16T09:03:00.000Z to string &quot;Jeudi 16 décembre 2021, 09h03&quot;" name="&lt;BookingInformations /&gt; formatDateTimezone() should format Date 2021-12-16T09:03:00.000Z to string &quot;Jeudi 16 décembre 2021, 09h03&quot;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OfferCategoryChoices /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:52" time="2.501" tests="3">
    <testcase classname="&lt;OfferCategoryChoices /&gt; should match snapshot" name="&lt;OfferCategoryChoices /&gt; should match snapshot" time="0.135">
    </testcase>
    <testcase classname="&lt;OfferCategoryChoices /&gt; should call onChange with proper category when toggling" name="&lt;OfferCategoryChoices /&gt; should call onChange with proper category when toggling" time="0.219">
    </testcase>
    <testcase classname="&lt;OfferCategoryChoices /&gt; should not return labels when no categories sent by backend" name="&lt;OfferCategoryChoices /&gt; should not return labels when no categories sent by backend" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="useModalContent" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:51" time="3.056" tests="12">
    <testcase classname="useModalContent show default modal if no information yet" name="useModalContent show default modal if no information yet" time="0.017">
    </testcase>
    <testcase classname="useModalContent iOS - does not show BookingImpossible if the digital offer is CINEMA" name="useModalContent iOS - does not show BookingImpossible if the digital offer is CINEMA" time="0.005">
    </testcase>
    <testcase classname="useModalContent iOS - shows BookingImpossible if the digital offer is not free" name="useModalContent iOS - shows BookingImpossible if the digital offer is not free" time="0.002">
    </testcase>
    <testcase classname="useModalContent iOS - shows BookingDetails if the digital offer is free" name="useModalContent iOS - shows BookingDetails if the digital offer is free" time="0.001">
    </testcase>
    <testcase classname="useModalContent iOS - shows BookingDetails if the offer is a physical good" name="useModalContent iOS - shows BookingDetails if the offer is a physical good" time="0.005">
    </testcase>
    <testcase classname="useModalContent shows the first step if the offer is an event" name="useModalContent shows the first step if the offer is an event" time="0.005">
    </testcase>
    <testcase classname="useModalContent shows the confirmation step if the offer is an event" name="useModalContent shows the confirmation step if the offer is an event" time="0.007">
    </testcase>
    <testcase classname="useModalContent should not show arrow back on date selection step when offer is an event" name="useModalContent should not show arrow back on date selection step when offer is an event" time="0.004">
    </testcase>
    <testcase classname="useModalContent should show arrow back on hour selection when offer is an event" name="useModalContent should show arrow back on hour selection when offer is an event" time="0.003">
    </testcase>
    <testcase classname="useModalContent should show arrow back on number place selection when offer is an event" name="useModalContent should show arrow back on number place selection when offer is an event" time="0.003">
    </testcase>
    <testcase classname=" shows modal AlreadyBooked when isEndedUsedBooking is true" name=" shows modal AlreadyBooked when isEndedUsedBooking is true" time="0.003">
    </testcase>
    <testcase classname=" should not show back arrow if receives bookingDataMovieScreening" name=" should not show back arrow if receives bookingDataMovieScreening" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="DefaultThematicHomeHeader" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:53" time="2.155" tests="1">
    <testcase classname="DefaultThematicHomeHeader should show title and subtitle if render correctly" name="DefaultThematicHomeHeader should show title and subtitle if render correctly" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VerifyEligibility /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:53" time="2.336" tests="3">
    <testcase classname="&lt;VerifyEligibility /&gt; should show the correct deposit amount" name="&lt;VerifyEligibility /&gt; should show the correct deposit amount" time="0.071">
    </testcase>
    <testcase classname="&lt;VerifyEligibility /&gt; should redirect to home page WHEN &quot;Vérifier mon identité plus tard&quot; button is clicked" name="&lt;VerifyEligibility /&gt; should redirect to home page WHEN &quot;Vérifier mon identité plus tard&quot; button is clicked" time="0.052">
    </testcase>
    <testcase classname="&lt;VerifyEligibility /&gt; should navigate to Stepper WHEN clicking on &quot;Commencer la vérification&quot; button" name="&lt;VerifyEligibility /&gt; should navigate to Stepper WHEN clicking on &quot;Commencer la vérification&quot; button" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="buildOfferLast30DaysBookings" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:54" time="2.331" tests="28">
    <testcase classname="buildOfferLast30DaysBookings should return an undefined offer last 30 days bookings predicate when not defined" name="buildOfferLast30DaysBookings should return an undefined offer last 30 days bookings predicate when not defined" time="0.006">
    </testcase>
    <testcase classname="buildOfferLast30DaysBookings should return an undefined offer last 30 days bookings predicate when defined at 0" name="buildOfferLast30DaysBookings should return an undefined offer last 30 days bookings predicate when defined at 0" time="0.01">
    </testcase>
    <testcase classname="buildOfferLast30DaysBookings should return an offer last 30 days bookings predicate when defined at a value &gt; 0" name="buildOfferLast30DaysBookings should return an offer last 30 days bookings predicate when defined at a value &gt; 0" time="0.001">
    </testcase>
    <testcase classname="buildOfferPriceRangePredicate should return an offer price range predicate from 0 to 300 when price range, minimum and maximum prices not defined" name="buildOfferPriceRangePredicate should return an offer price range predicate from 0 to 300 when price range, minimum and maximum prices not defined" time="0.001">
    </testcase>
    <testcase classname="buildOfferPriceRangePredicate should return an offer price range predicate at 0 when offerIsFree is true" name="buildOfferPriceRangePredicate should return an offer price range predicate at 0 when offerIsFree is true" time="0.001">
    </testcase>
    <testcase classname="buildOfferPriceRangePredicate should return an offer price range predicate with the minimum price when defined and the default maximum price" name="buildOfferPriceRangePredicate should return an offer price range predicate with the minimum price when defined and the default maximum price" time="0">
    </testcase>
    <testcase classname="buildOfferPriceRangePredicate should return an offer price range predicate with the maximum price when defined and the default minimum price" name="buildOfferPriceRangePredicate should return an offer price range predicate with the maximum price when defined and the default minimum price" time="0.001">
    </testcase>
    <testcase classname="buildOfferPriceRangePredicate should return an offer price range predicate with the maximum possible price when defined and the default minimum price" name="buildOfferPriceRangePredicate should return an offer price range predicate with the maximum possible price when defined and the default minimum price" time="0.001">
    </testcase>
    <testcase classname="buildOfferPriceRangePredicate should return an offer price range predicate with the price range when defined" name="buildOfferPriceRangePredicate should return an offer price range predicate with the price range when defined" time="0.002">
    </testcase>
    <testcase classname="buildOfferPriceRangePredicate should return an offer price range predicate with the minimum and maximum prices when defined and price range not defined" name="buildOfferPriceRangePredicate should return an offer price range predicate with the minimum and maximum prices when defined and price range not defined" time="0.001">
    </testcase>
    <testcase classname="buildDatePredicate should return an undefined date predicate when date and time range not defined" name="buildDatePredicate should return an undefined date predicate when date and time range not defined" time="0.001">
    </testcase>
    <testcase classname="buildDatePredicate should return a date predicate with date and time range when defined" name="buildDatePredicate should return a date predicate with date and time range when defined" time="0.005">
    </testcase>
    <testcase classname="buildDatePredicate should return a date predicate with date only when date defined and time range not defined" name="buildDatePredicate should return a date predicate with date only when date defined and time range not defined" time="0.002">
    </testcase>
    <testcase classname="buildDatePredicate should return a date predicate with time range only when time range defined and date not defined" name="buildDatePredicate should return a date predicate with time range only when time range defined and date not defined" time="0.002">
    </testcase>
    <testcase classname="buildHomepageDatePredicate should return an undefined homepage date predicate when beginning and ending date not defined" name="buildHomepageDatePredicate should return an undefined homepage date predicate when beginning and ending date not defined" time="0.001">
    </testcase>
    <testcase classname="buildHomepageDatePredicate should return an homepage date predicate with only beginning date when beginning date defined and ending date not defined" name="buildHomepageDatePredicate should return an homepage date predicate with only beginning date when beginning date defined and ending date not defined" time="0.001">
    </testcase>
    <testcase classname="buildHomepageDatePredicate should return an homepage date predicate with only ending date when ending date defined and beginning date not defined" name="buildHomepageDatePredicate should return an homepage date predicate with only ending date when ending date defined and beginning date not defined" time="0.001">
    </testcase>
    <testcase classname="buildHomepageDatePredicate should return an homepage date predicate with a beginning and ending dates when beginning and ending dates defined" name="buildHomepageDatePredicate should return an homepage date predicate with a beginning and ending dates when beginning and ending dates defined" time="0.002">
    </testcase>
    <testcase classname="buildTimeOnlyPredicate should return a time range in seconds" name="buildTimeOnlyPredicate should return a time range in seconds" time="0.002">
    </testcase>
    <testcase classname="buildDateAndTimePredicate should return a date and time predicate of the selected date and time range when date filter option is today" name="buildDateAndTimePredicate should return a date and time predicate of the selected date and time range when date filter option is today" time="0.002">
    </testcase>
    <testcase classname="buildDateAndTimePredicate should return a date and time predicate of the selected date and time range when date filter option is user pick" name="buildDateAndTimePredicate should return a date and time predicate of the selected date and time range when date filter option is user pick" time="0.007">
    </testcase>
    <testcase classname="buildDateAndTimePredicate should return a date and time predicate of the selected dates and time range when date filter option is current week" name="buildDateAndTimePredicate should return a date and time predicate of the selected dates and time range when date filter option is current week" time="0.001">
    </testcase>
    <testcase classname="buildDateAndTimePredicate should return a date and time predicate of the selected dates and time range when date filter option is current week-end" name="buildDateAndTimePredicate should return a date and time predicate of the selected dates and time range when date filter option is current week-end" time="0.002">
    </testcase>
    <testcase classname="buildDateOnlyPredicate should return a date predicate of the selected date when date filter option is today" name="buildDateOnlyPredicate should return a date predicate of the selected date when date filter option is today" time="0.008">
    </testcase>
    <testcase classname="buildDateOnlyPredicate should return a date predicate of the selected dates when date filter option is current week" name="buildDateOnlyPredicate should return a date predicate of the selected dates when date filter option is current week" time="0.001">
    </testcase>
    <testcase classname="buildDateOnlyPredicate should return a date predicate of the selected dates when date filter option is current week-end" name="buildDateOnlyPredicate should return a date predicate of the selected dates when date filter option is current week-end" time="0.002">
    </testcase>
    <testcase classname="buildDateOnlyPredicate should return a date predicate of the selected date when date filter option is user pick" name="buildDateOnlyPredicate should return a date predicate of the selected date when date filter option is user pick" time="0.001">
    </testcase>
    <testcase classname="getDatePredicate should return a date predicate from a beginning and ending dates" name="getDatePredicate should return a date predicate from a beginning and ending dates" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ButtonInsideText Component" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:54" time="2.404" tests="6">
    <testcase classname="ButtonInsideText Component * Icon property should not display icon when not provided" name="ButtonInsideText Component * Icon property should not display icon when not provided" time="0.03">
    </testcase>
    <testcase classname="ButtonInsideText Component * Icon property should display icon when provided" name="ButtonInsideText Component * Icon property should display icon when provided" time="0.01">
    </testcase>
    <testcase classname="ButtonInsideText Component * typography property should display ButtonText font family when not provided" name="ButtonInsideText Component * typography property should display ButtonText font family when not provided" time="0.046">
    </testcase>
    <testcase classname="ButtonInsideText Component * typography property should display Caption font family when Caption provided" name="ButtonInsideText Component * typography property should display Caption font family when Caption provided" time="0.009">
    </testcase>
    <testcase classname="ButtonInsideText Component * color property should display primary color when not provided" name="ButtonInsideText Component * color property should display primary color when not provided" time="0.002">
    </testcase>
    <testcase classname="ButtonInsideText Component * color property should display custom color when color provided" name="ButtonInsideText Component * color property should display custom color when color provided" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="logOpenApp" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:54" time="2.656" tests="12">
    <testcase classname="logOpenApp for appsFlyer should log open app event when status is unavailable" name="logOpenApp for appsFlyer should log open app event when status is unavailable" time="0.002">
    </testcase>
    <testcase classname="logOpenApp for appsFlyer should log open app event when status is authorized" name="logOpenApp for appsFlyer should log open app event when status is authorized" time="0.003">
    </testcase>
    <testcase classname="logOpenApp for appsFlyer should not log open event when status is denied" name="logOpenApp for appsFlyer should not log open event when status is denied" time="0.002">
    </testcase>
    <testcase classname="logOpenApp for appsFlyer should not log open event when status is restricted" name="logOpenApp for appsFlyer should not log open event when status is restricted" time="0.002">
    </testcase>
    <testcase classname="logOpenApp for appsFlyer should not log open event when status is not-determined" name="logOpenApp for appsFlyer should not log open event when status is not-determined" time="0">
    </testcase>
    <testcase classname="logOpenApp for firebase should log open app event when status is unavailable" name="logOpenApp for firebase should log open app event when status is unavailable" time="0.005">
    </testcase>
    <testcase classname="logOpenApp for firebase should log open app event when status is authorized" name="logOpenApp for firebase should log open app event when status is authorized" time="0.007">
    </testcase>
    <testcase classname="logOpenApp for firebase should not log open event when status is denied" name="logOpenApp for firebase should not log open event when status is denied" time="0.005">
    </testcase>
    <testcase classname="logOpenApp for firebase should not log open event when status is restricted" name="logOpenApp for firebase should not log open event when status is restricted" time="0.012">
    </testcase>
    <testcase classname="logOpenApp for firebase should not log open event when status is not-determined" name="logOpenApp for firebase should not log open event when status is not-determined" time="0.001">
    </testcase>
    <testcase classname="logOpenApp should not log open app event twice in same session" name="logOpenApp should not log open app event twice in same session" time="0.001">
    </testcase>
    <testcase classname="logOpenApp should not log open app event twice in same session" name="logOpenApp should not log open app event twice in same session" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="NoSearchResult component" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:55" time="2.676" tests="4">
    <testcase classname="NoSearchResult component should show the message without query entered" name="NoSearchResult component should show the message without query entered" time="0.076">
    </testcase>
    <testcase classname="NoSearchResult component should show the message with query entered" name="NoSearchResult component should show the message with query entered" time="0.021">
    </testcase>
    <testcase classname="NoSearchResult component should redirect to the general filters page when pressing &quot;Modifier mes filtres&quot; button" name="NoSearchResult component should redirect to the general filters page when pressing &quot;Modifier mes filtres&quot; button" time="0.019">
    </testcase>
    <testcase classname="NoSearchResult component should redirect to the general filters page when pressing &quot;Modifier mes filtres&quot; button with url params" name="NoSearchResult component should redirect to the general filters page when pressing &quot;Modifier mes filtres&quot; button with url params" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Highlight component for a offer suggestion" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:56" time="3.707" tests="17">
    <testcase classname="Highlight component for a offer suggestion should render Highlight" name="Highlight component for a offer suggestion should render Highlight" time="0.46">
    </testcase>
    <testcase classname="Highlight component for a offer suggestion should use highlight part for display" name="Highlight component for a offer suggestion should use highlight part for display" time="0.017">
    </testcase>
    <testcase classname="Highlight component for a offer suggestion should not use highlight history item part for display" name="Highlight component for a offer suggestion should not use highlight history item part for display" time="0.005">
    </testcase>
    <testcase classname="Highlight component for a venue suggestion should render Highlight" name="Highlight component for a venue suggestion should render Highlight" time="0.006">
    </testcase>
    <testcase classname="Highlight component for a venue suggestion should use highlight part for display" name="Highlight component for a venue suggestion should use highlight part for display" time="0.01">
    </testcase>
    <testcase classname="Highlight component for a venue suggestion should not use highlight history item part for display" name="Highlight component for a venue suggestion should not use highlight history item part for display" time="0.027">
    </testcase>
    <testcase classname="Highlight component for an history item should render Highlight" name="Highlight component for an history item should render Highlight" time="0.034">
    </testcase>
    <testcase classname="Highlight component for an history item should use highlight history item part for display" name="Highlight component for an history item should use highlight history item part for display" time="0.002">
    </testcase>
    <testcase classname="Highlight component for an history item should not use highlight part for display" name="Highlight component for an history item should not use highlight part for display" time="0.007">
    </testcase>
    <testcase classname="HighlightPart component should use body typo when the part of the hit is highlighted" name="HighlightPart component should use body typo when the part of the hit is highlighted" time="0.018">
    </testcase>
    <testcase classname="HighlightPart component should not use body typo when the part of the hit is not highlighted" name="HighlightPart component should not use body typo when the part of the hit is not highlighted" time="0.016">
    </testcase>
    <testcase classname="HighlightPart component should use button text typo when the part of the hit is not highlighted" name="HighlightPart component should use button text typo when the part of the hit is not highlighted" time="0.036">
    </testcase>
    <testcase classname="HighlightPart component should not use button text typo when the part of the hit is  highlighted" name="HighlightPart component should not use button text typo when the part of the hit is  highlighted" time="0.007">
    </testcase>
    <testcase classname="HighlightHistoryItemPart component should use placeholder typo when the part of the hit is highlighted" name="HighlightHistoryItemPart component should use placeholder typo when the part of the hit is highlighted" time="0.007">
    </testcase>
    <testcase classname="HighlightHistoryItemPart component should not use placeholder typo when the part of the hit is not highlighted" name="HighlightHistoryItemPart component should not use placeholder typo when the part of the hit is not highlighted" time="0.005">
    </testcase>
    <testcase classname="HighlightHistoryItemPart component should use body bold italic typo when the part of the hit is not highlighted" name="HighlightHistoryItemPart component should use body bold italic typo when the part of the hit is not highlighted" time="0.003">
    </testcase>
    <testcase classname="HighlightHistoryItemPart component should not use body bold italic typo when the part of the hit is highlighted" name="HighlightHistoryItemPart component should not use body bold italic typo when the part of the hit is highlighted" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="MarketingBlockHighlight" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:55" time="4.455" tests="1">
    <testcase classname="MarketingBlockHighlight navigate to highlight thematic home when pressing" name="MarketingBlockHighlight navigate to highlight thematic home when pressing" time="0.261">
    </testcase>
  </testsuite>
  <testsuite name="matchSubscriptionMessageIconToSvg" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:57" time="3.267" tests="11">
    <testcase classname="matchSubscriptionMessageIconToSvg PopOverIcon should return Clock icon if &apos;CLOCK&apos; is passed" name="matchSubscriptionMessageIconToSvg PopOverIcon should return Clock icon if &apos;CLOCK&apos; is passed" time="0.002">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg PopOverIcon should return LegalNotices icon if &apos;FILE&apos; is passed" name="matchSubscriptionMessageIconToSvg PopOverIcon should return LegalNotices icon if &apos;FILE&apos; is passed" time="0.002">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg PopOverIcon should return Error icon if &apos;ERROR&apos; is passed" name="matchSubscriptionMessageIconToSvg PopOverIcon should return Error icon if &apos;ERROR&apos; is passed" time="0">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg PopOverIcon should return Warning icon if &apos;WARNING&apos; is passed" name="matchSubscriptionMessageIconToSvg PopOverIcon should return Warning icon if &apos;WARNING&apos; is passed" time="0.001">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg PopOverIcon should return Info icon if &apos;INFO&apos; is passed" name="matchSubscriptionMessageIconToSvg PopOverIcon should return Info icon if &apos;INFO&apos; is passed" time="0.001">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg CallToActionIcon should return EmailFiled icon if &apos;EMAIL&apos; is passed" name="matchSubscriptionMessageIconToSvg CallToActionIcon should return EmailFiled icon if &apos;EMAIL&apos; is passed" time="0.002">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg CallToActionIcon should return ExternalSiteFilled icon if &apos;EXTERNAL&apos; is passed" name="matchSubscriptionMessageIconToSvg CallToActionIcon should return ExternalSiteFilled icon if &apos;EXTERNAL&apos; is passed" time="0.001">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg CallToActionIcon should return Again icon if &apos;RETRY&apos; is passed" name="matchSubscriptionMessageIconToSvg CallToActionIcon should return Again icon if &apos;RETRY&apos; is passed" time="0.001">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg should give the fallback given no icon" name="matchSubscriptionMessageIconToSvg should give the fallback given no icon" time="0.001">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg should give the fallback given no icon" name="matchSubscriptionMessageIconToSvg should give the fallback given no icon" time="0.001">
    </testcase>
    <testcase classname="matchSubscriptionMessageIconToSvg should no return icon when given no icon and no fallback icon" name="matchSubscriptionMessageIconToSvg should no return icon when given no icon and no fallback icon" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useFavorite hook" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:57" time="4.128" tests="2">
    <testcase classname="useFavorite hook should get favorite from offer id" name="useFavorite hook should get favorite from offer id" time="0.191">
    </testcase>
    <testcase classname="useFavorite hook should not get favorite from offer id" name="useFavorite hook should not get favorite from offer id" time="0.121">
    </testcase>
  </testsuite>
  <testsuite name="getShareVenue" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:57" time="4.215" tests="2">
    <testcase classname="getShareVenue should display share modal with data from offer for ios" name="getShareVenue should display share modal with data from offer for ios" time="0.006">
    </testcase>
    <testcase classname="getShareVenue should display share modal with data from offer for android" name="getShareVenue should display share modal with data from offer for android" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PasswordInput /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:03:58" time="3.676" tests="2">
    <testcase classname="&lt;PasswordInput /&gt; should change accessibilityLabel when password is hidden or it was displayed" name="&lt;PasswordInput /&gt; should change accessibilityLabel when password is hidden or it was displayed" time="0.124">
    </testcase>
    <testcase classname="&lt;PasswordInput /&gt; should render ref correctly" name="&lt;PasswordInput /&gt; should render ref correctly" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="ActivationBanner" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:00" time="2.283" tests="1">
    <testcase classname="ActivationBanner should redirect to stepper on press" name="ActivationBanner should redirect to stepper on press" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OpeningHoursStatus /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:00" time="2.527" tests="3">
    <testcase classname="&lt;OpeningHoursStatus /&gt; should update state automatically when state change is in less than 30 minutes" name="&lt;OpeningHoursStatus /&gt; should update state automatically when state change is in less than 30 minutes" time="0.285">
    </testcase>
    <testcase classname="&lt;OpeningHoursStatus /&gt; should not update state automatically when state change is in more than 30 minutes" name="&lt;OpeningHoursStatus /&gt; should not update state automatically when state change is in more than 30 minutes" time="0.015">
    </testcase>
    <testcase classname="&lt;OpeningHoursStatus /&gt; should set timer to 0 when app is in background for longer than remaining time" name="&lt;OpeningHoursStatus /&gt; should set timer to 0 when app is in background for longer than remaining time" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="bookingHelpers" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:01" time="1.929" tests="38">
    <testcase classname="bookingHelpers getButtonState should return false when step is date selection &amp; date not selected" name="bookingHelpers getButtonState should return false when step is date selection &amp; date not selected" time="0.003">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return false when step is hour selection &amp; hour &amp; stock not selected" name="bookingHelpers getButtonState should return false when step is hour selection &amp; hour &amp; stock not selected" time="0.007">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return false when step is price selection &amp; stock not selected" name="bookingHelpers getButtonState should return false when step is price selection &amp; stock not selected" time="0.001">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return false when step is quantity selection &amp; quantity not selected" name="bookingHelpers getButtonState should return false when step is quantity selection &amp; quantity not selected" time="0">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return true when step is date selection &amp; date selected" name="bookingHelpers getButtonState should return true when step is date selection &amp; date selected" time="0.002">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return true when step is hour selection &amp; hour selected" name="bookingHelpers getButtonState should return true when step is hour selection &amp; hour selected" time="0">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return true when step is hour selection &amp; stock selected" name="bookingHelpers getButtonState should return true when step is hour selection &amp; stock selected" time="0.002">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return true when step is hour selection &amp; hour &amp; stock selected" name="bookingHelpers getButtonState should return true when step is hour selection &amp; hour &amp; stock selected" time="0.001">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return true when step is price selection &amp; stock selected" name="bookingHelpers getButtonState should return true when step is price selection &amp; stock selected" time="0.002">
    </testcase>
    <testcase classname="bookingHelpers getButtonState should return true when step is quantity selection &amp; quantity selected" name="bookingHelpers getButtonState should return true when step is quantity selection &amp; quantity selected" time="0.001">
    </testcase>
    <testcase classname="bookingHelpers getButtonWording should return &quot;Valider la date&quot; when step is date selection" name="bookingHelpers getButtonWording should return &quot;Valider la date&quot; when step is date selection" time="0.001">
    </testcase>
    <testcase classname="bookingHelpers getButtonWording should return &quot;Valider lʼhoraire&quot; when step is hour selection" name="bookingHelpers getButtonWording should return &quot;Valider lʼhoraire&quot; when step is hour selection" time="0.002">
    </testcase>
    <testcase classname="bookingHelpers getButtonWording should return &quot;Valider le prix&quot; when step is price selection" name="bookingHelpers getButtonWording should return &quot;Valider le prix&quot; when step is price selection" time="0.001">
    </testcase>
    <testcase classname="bookingHelpers getButtonWording should return &quot;Finaliser ma réservation&quot; when step is quantity selection" name="bookingHelpers getButtonWording should return &quot;Finaliser ma réservation&quot; when step is quantity selection" time="0.002">
    </testcase>
    <testcase classname="bookingHelpers getButtonWording should return an empty string when step is confirmation" name="bookingHelpers getButtonWording should return an empty string when step is confirmation" time="0.002">
    </testcase>
    <testcase classname="bookingHelpers getHourWording should return &quot;crédit insuffisant&quot; when user has not enough credit" name="bookingHelpers getHourWording should return &quot;crédit insuffisant&quot; when user has not enough credit" time="0.002">
    </testcase>
    <testcase classname="bookingHelpers getHourWording should return &quot;dès 20 €&quot; when offer is bookable, its price is 20 and has several prices" name="bookingHelpers getHourWording should return &quot;dès 20 €&quot; when offer is bookable, its price is 20 and has several prices" time="0.002">
    </testcase>
    <testcase classname="bookingHelpers getHourWording should return &quot;20 €&quot; when offer is bookable, its price is 20 and has not several prices" name="bookingHelpers getHourWording should return &quot;20 €&quot; when offer is bookable, its price is 20 and has not several prices" time="0.003">
    </testcase>
    <testcase classname="bookingHelpers getHourWording should return &quot;épuisé&quot; when offer is not bookable" name="bookingHelpers getHourWording should return &quot;épuisé&quot; when offer is not bookable" time="0.001">
    </testcase>
    <testcase classname="getPriceWording should return &quot;Épuisé&quot; when stock is sold out" name="getPriceWording should return &quot;Épuisé&quot; when stock is sold out" time="0">
    </testcase>
    <testcase classname="getPriceWording should return &quot;Crédit insuffisant&quot; when offer price &gt; user credit" name="getPriceWording should return &quot;Crédit insuffisant&quot; when offer price &gt; user credit" time="0.001">
    </testcase>
    <testcase classname="getPriceWording should return an empty string when stock is not sold out" name="getPriceWording should return an empty string when stock is not sold out" time="0">
    </testcase>
    <testcase classname="getPreviousStep should return to date step when current step is hour" name="getPreviousStep should return to date step when current step is hour" time="0.001">
    </testcase>
    <testcase classname="getPreviousStep should return to hour step when current step is price" name="getPreviousStep should return to hour step when current step is price" time="0.003">
    </testcase>
    <testcase classname="getPreviousStep should return to hour step when current step is duo and has not several stock" name="getPreviousStep should return to hour step when current step is duo and has not several stock" time="0.001">
    </testcase>
    <testcase classname="getPreviousStep should return to hour step when current step is confirmation, offer is not duo and has not several stock" name="getPreviousStep should return to hour step when current step is confirmation, offer is not duo and has not several stock" time="0.001">
    </testcase>
    <testcase classname="getPreviousStep should return to price step when current step is duo and has several stocks" name="getPreviousStep should return to price step when current step is duo and has several stocks" time="0.001">
    </testcase>
    <testcase classname="getPreviousStep should return to price step when current step is confirmation, offer is not duo and has several stocks" name="getPreviousStep should return to price step when current step is confirmation, offer is not duo and has several stocks" time="0.001">
    </testcase>
    <testcase classname="getPreviousStep should return to duo step when current step is confirmation and offer is duo" name="getPreviousStep should return to duo step when current step is confirmation and offer is duo" time="0.001">
    </testcase>
    <testcase classname="getSortedHoursFromDate should return an array of sorted hours from date" name="getSortedHoursFromDate should return an array of sorted hours from date" time="0.001">
    </testcase>
    <testcase classname="getStockSortedByPriceFromHour should return an array of stocks from highest to lowest price from hour" name="getStockSortedByPriceFromHour should return an array of stocks from highest to lowest price from hour" time="0.001">
    </testcase>
    <testcase classname="sortByDateStringPredicate should return -1 when dates not defined" name="sortByDateStringPredicate should return -1 when dates not defined" time="0.001">
    </testcase>
    <testcase classname="getDistinctPricesFromAllStock should return only one price when several stocks have the same price" name="getDistinctPricesFromAllStock should return only one price when several stocks have the same price" time="0.002">
    </testcase>
    <testcase classname="getDistinctPricesFromAllStock should not return several prices when several stocks have the same price" name="getDistinctPricesFromAllStock should not return several prices when several stocks have the same price" time="0.001">
    </testcase>
    <testcase classname="getStockWithCategory should return an empty array when stock not defined" name="getStockWithCategory should return an empty array when stock not defined" time="0.006">
    </testcase>
    <testcase classname="getStockWithCategory should return all stock with category when stock defined and hour and date not defined" name="getStockWithCategory should return all stock with category when stock defined and hour and date not defined" time="0.001">
    </testcase>
    <testcase classname="getStockWithCategory should return stock with category from hour when stock, hour and date defined" name="getStockWithCategory should return stock with category from hour when stock, hour and date defined" time="0.001">
    </testcase>
    <testcase classname="getStockWithCategory should return stock with category from date when stock and date defined and hour not defined" name="getStockWithCategory should return stock with category from date when stock and date defined and hour not defined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useCategoryId" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:01" time="1.806" tests="14">
    <testcase classname="useCategoryId useSearchGroupLabel(ARTS_LOISIRS_CREATIFS) = Arts &amp; loisirs créatifs" name="useCategoryId useSearchGroupLabel(ARTS_LOISIRS_CREATIFS) = Arts &amp; loisirs créatifs" time="0.009">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(CARTES_JEUNES) = Cartes jeunes" name="useCategoryId useSearchGroupLabel(CARTES_JEUNES) = Cartes jeunes" time="0.006">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(CD_VINYLE_MUSIQUE_EN_LIGNE) = CD, vinyles, musique en ligne" name="useCategoryId useSearchGroupLabel(CD_VINYLE_MUSIQUE_EN_LIGNE) = CD, vinyles, musique en ligne" time="0.002">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(CONCERTS_FESTIVALS) = Concerts &amp; festivals" name="useCategoryId useSearchGroupLabel(CONCERTS_FESTIVALS) = Concerts &amp; festivals" time="0.001">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(RENCONTRES_CONFERENCES) = Conférences &amp; rencontres" name="useCategoryId useSearchGroupLabel(RENCONTRES_CONFERENCES) = Conférences &amp; rencontres" time="0.003">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(EVENEMENTS_EN_LIGNE) = Évènements en ligne" name="useCategoryId useSearchGroupLabel(EVENEMENTS_EN_LIGNE) = Évènements en ligne" time="0.001">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(FILMS_SERIES_CINEMA) = Cinéma, films et séries" name="useCategoryId useSearchGroupLabel(FILMS_SERIES_CINEMA) = Cinéma, films et séries" time="0.001">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(INSTRUMENTS) = Instruments de musique" name="useCategoryId useSearchGroupLabel(INSTRUMENTS) = Instruments de musique" time="0.001">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(JEUX_JEUX_VIDEOS) = Jeux &amp; jeux vidéos" name="useCategoryId useSearchGroupLabel(JEUX_JEUX_VIDEOS) = Jeux &amp; jeux vidéos" time="0.002">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(LIVRES) = Livres" name="useCategoryId useSearchGroupLabel(LIVRES) = Livres" time="0.002">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(MEDIA_PRESSE) = Médias &amp; presse" name="useCategoryId useSearchGroupLabel(MEDIA_PRESSE) = Médias &amp; presse" time="0.002">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(MUSEES_VISITES_CULTURELLES) = Musées &amp; visites culturelles" name="useCategoryId useSearchGroupLabel(MUSEES_VISITES_CULTURELLES) = Musées &amp; visites culturelles" time="0.002">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(SPECTACLES) = Spectacles" name="useCategoryId useSearchGroupLabel(SPECTACLES) = Spectacles" time="0.004">
    </testcase>
    <testcase classname="useCategoryId useSearchGroupLabel(NONE) = Toutes les catégories" name="useCategoryId useSearchGroupLabel(NONE) = Toutes les catégories" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getOfferArtists" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:02" time="1.902" tests="12">
    <testcase classname="getOfferArtists should return undefined when offer has not artists" name="getOfferArtists should return undefined when offer has not artists" time="0.002">
    </testcase>
    <testcase classname="getOfferArtists should return undefined when artists not associated at the category" name="getOfferArtists should return undefined when artists not associated at the category" time="0.001">
    </testcase>
    <testcase classname="getOfferArtists should return undefined when offer category is Livre and author is not informed" name="getOfferArtists should return undefined when offer category is Livre and author is not informed" time="0">
    </testcase>
    <testcase classname="getOfferArtists should return author when offer category is Livre and author is informed" name="getOfferArtists should return author when offer category is Livre and author is informed" time="0.001">
    </testcase>
    <testcase classname="getOfferArtists should return undefined when offer category is Musique enregistrée and performer is not informed" name="getOfferArtists should return undefined when offer category is Musique enregistrée and performer is not informed" time="0.001">
    </testcase>
    <testcase classname="getOfferArtists should return performer when offer category is Musique enregistrée and performer is informed" name="getOfferArtists should return performer when offer category is Musique enregistrée and performer is informed" time="0.001">
    </testcase>
    <testcase classname="getOfferArtists should return undefined when offer category is Musique live and performer is not informed" name="getOfferArtists should return undefined when offer category is Musique live and performer is not informed" time="0.003">
    </testcase>
    <testcase classname="getOfferArtists should return performer when offer category is Musique live and performer is informed" name="getOfferArtists should return performer when offer category is Musique live and performer is informed" time="0.002">
    </testcase>
    <testcase classname="getOfferArtists should return undefined when offer category is Spectacle and stage director is not informed" name="getOfferArtists should return undefined when offer category is Spectacle and stage director is not informed" time="0.003">
    </testcase>
    <testcase classname="getOfferArtists should return stage director when offer category is Spectacle and stage director is informed" name="getOfferArtists should return stage director when offer category is Spectacle and stage director is informed" time="0.011">
    </testcase>
    <testcase classname="getOfferArtists should return undefined when offer category is Cinéma and stage director is not informed" name="getOfferArtists should return undefined when offer category is Cinéma and stage director is not informed" time="0.002">
    </testcase>
    <testcase classname="getOfferArtists should return stage director when offer category is Cinéma and stage director is not informed" name="getOfferArtists should return stage director when offer category is Cinéma and stage director is not informed" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="BookPricesChoice" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:02" time="2.165" tests="3">
    <testcase classname="BookPricesChoice should render prices of stocks in parameter" name="BookPricesChoice should render prices of stocks in parameter" time="0.03">
    </testcase>
    <testcase classname="BookPricesChoice should select price stock when pressing a price and offer is duo" name="BookPricesChoice should select price stock when pressing a price and offer is duo" time="0.077">
    </testcase>
    <testcase classname="BookPricesChoice should select a quantity of 1 in addition to the price stock when pressing a price and offer is not duo" name="BookPricesChoice should select a quantity of 1 in addition to the price stock when pressing a price and offer is not duo" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="useShouldDisplayVenueMap" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:03" time="1.683" tests="4">
    <testcase classname="useShouldDisplayVenueMap should render venue map when user is located and feature flag enabled" name="useShouldDisplayVenueMap should render venue map when user is located and feature flag enabled" time="0.007">
    </testcase>
    <testcase classname="useShouldDisplayVenueMap should not render venue map when feature flag is disabled" name="useShouldDisplayVenueMap should not render venue map when feature flag is disabled" time="0.001">
    </testcase>
    <testcase classname="useShouldDisplayVenueMap should not render venue map when user is not located" name="useShouldDisplayVenueMap should not render venue map when user is not located" time="0.003">
    </testcase>
    <testcase classname="useShouldDisplayVenueMap should not render venue map  when user is located everywhere" name="useShouldDisplayVenueMap should not render venue map  when user is located everywhere" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="useShouldShowCulturalSurvey()" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:04" time="1.585" tests="5">
    <testcase classname="useShouldShowCulturalSurvey() should return undefined while reading information" name="useShouldShowCulturalSurvey() should return undefined while reading information" time="0.029">
    </testcase>
    <testcase classname="useShouldShowCulturalSurvey() should return true when user has never seen cultural survey" name="useShouldShowCulturalSurvey() should return true when user has never seen cultural survey" time="0.002">
    </testcase>
    <testcase classname="useShouldShowCulturalSurvey() should return false when user has already filled cultural survey" name="useShouldShowCulturalSurvey() should return false when user has already filled cultural survey" time="0.004">
    </testcase>
    <testcase classname="useShouldShowCulturalSurvey() should return true when user has seen cultural survey twice" name="useShouldShowCulturalSurvey() should return true when user has seen cultural survey twice" time="0.002">
    </testcase>
    <testcase classname="useShouldShowCulturalSurvey() should return false when user has seen cultural survey more than twice" name="useShouldShowCulturalSurvey() should return false when user has seen cultural survey more than twice" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="getVenueTypeIconName" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:03" time="2.134" tests="7">
    <testcase classname="getVenueTypeIconName should display selected venue type map pin icon" name="getVenueTypeIconName should display selected venue type map pin icon" time="0.004">
    </testcase>
    <testcase classname="getVenueTypeIconName should display venue type map pin icon" name="getVenueTypeIconName should display venue type map pin icon" time="0.002">
    </testcase>
    <testcase classname="getVenueTypeIconName should display selected default map pin when venue type code is null" name="getVenueTypeIconName should display selected default map pin when venue type code is null" time="0.001">
    </testcase>
    <testcase classname="getVenueTypeIconName should display default map pin when venue type code is null" name="getVenueTypeIconName should display default map pin when venue type code is null" time="0.002">
    </testcase>
    <testcase classname="getVenueTypeIconName should display default map pin when venue type code is not known" name="getVenueTypeIconName should display default map pin when venue type code is not known" time="0">
    </testcase>
    <testcase classname="getVenueTypeIconName should display center icon for other venue type code" name="getVenueTypeIconName should display center icon for other venue type code" time="0.001">
    </testcase>
    <testcase classname="getVenueTypeIconName should display center icon for digital venue type code" name="getVenueTypeIconName should display center icon for digital venue type code" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="useUserRoleFromOnboarding" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:03" time="1.781" tests="7">
    <testcase classname="useUserRoleFromOnboarding should return underage when user is under_15" name="useUserRoleFromOnboarding should return underage when user is under_15" time="0.13">
    </testcase>
    <testcase classname="useUserRoleFromOnboarding should return underage when user is 15" name="useUserRoleFromOnboarding should return underage when user is 15" time="0.056">
    </testcase>
    <testcase classname="useUserRoleFromOnboarding should return underage when user is 16" name="useUserRoleFromOnboarding should return underage when user is 16" time="0.063">
    </testcase>
    <testcase classname="useUserRoleFromOnboarding should return underage when user is 17" name="useUserRoleFromOnboarding should return underage when user is 17" time="0.071">
    </testcase>
    <testcase classname="useUserRoleFromOnboarding should return eighteen when user is 18" name="useUserRoleFromOnboarding should return eighteen when user is 18" time="0.053">
    </testcase>
    <testcase classname="useUserRoleFromOnboarding should return non eligible when user is over 18" name="useUserRoleFromOnboarding should return non eligible when user is over 18" time="0.053">
    </testcase>
    <testcase classname="useUserRoleFromOnboarding should return unknown when user has not selected an age" name="useUserRoleFromOnboarding should return unknown when user has not selected an age" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="getTokenStatus" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:04" time="1.264" tests="6">
    <testcase classname="getTokenStatus unknown status given no access token" name="getTokenStatus unknown status given no access token" time="0.001">
    </testcase>
    <testcase classname="getTokenStatus unknown status when access token can&apos;t be read" name="getTokenStatus unknown status when access token can&apos;t be read" time="0.005">
    </testcase>
    <testcase classname="getTokenStatus expired status given access token that expires before current date" name="getTokenStatus expired status given access token that expires before current date" time="0.002">
    </testcase>
    <testcase classname="getTokenStatus valid status given access token that expires in the future" name="getTokenStatus valid status given access token that expires in the future" time="0.003">
    </testcase>
    <testcase classname="computeTokenRemainingLifetimeInMs should return undefined when token can not be decoded" name="computeTokenRemainingLifetimeInMs should return undefined when token can not be decoded" time="0.014">
    </testcase>
    <testcase classname="computeTokenRemainingLifetimeInMs should return remaining lifetime in milliseconds" name="computeTokenRemainingLifetimeInMs should return remaining lifetime in milliseconds" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="&lt;StepList /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:04" time="1.598" tests="4">
    <testcase classname="&lt;StepList /&gt; should not render any complete step when active index is 0" name="&lt;StepList /&gt; should not render any complete step when active index is 0" time="0.106">
    </testcase>
    <testcase classname="&lt;StepList /&gt; should render one complete step, one in progress step and one future step" name="&lt;StepList /&gt; should render one complete step, one in progress step and one future step" time="0.012">
    </testcase>
    <testcase classname="&lt;StepList /&gt; should render two complete steps, one in progress step and no future step" name="&lt;StepList /&gt; should render two complete steps, one in progress step and no future step" time="0.017">
    </testcase>
    <testcase classname="&lt;StepList /&gt; should warn about active index being greater than children length" name="&lt;StepList /&gt; should warn about active index being greater than children length" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="computeIdentificationMethod" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:05" time="1.489" tests="4">
    <testcase classname="computeIdentificationMethod should return fork flow with two methods allowed" name="computeIdentificationMethod should return fork flow with two methods allowed" time="0.001">
    </testcase>
    <testcase classname="computeIdentificationMethod should return ubble flow with if only ubble method is allowed" name="computeIdentificationMethod should return ubble flow with if only ubble method is allowed" time="0">
    </testcase>
    <testcase classname="computeIdentificationMethod should return educonnect flow with if only educonnect method is allowed" name="computeIdentificationMethod should return educonnect flow with if only educonnect method is allowed" time="0.003">
    </testcase>
    <testcase classname="computeIdentificationMethod should return ubble flow by default" name="computeIdentificationMethod should return ubble flow by default" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="isString" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:06" time="0.94" tests="3">
    <testcase classname="isString should return true for a string" name="isString should return true for a string" time="0.001">
    </testcase>
    <testcase classname="isString should return false for null" name="isString should return false for null" time="0">
    </testcase>
    <testcase classname="isString should return false for undefined" name="isString should return false for undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useSignupRecaptcha" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:05" time="1.373" tests="5">
    <testcase classname="useSignupRecaptcha should return isDoingReCaptchaChallenge to false when there is no network" name="useSignupRecaptcha should return isDoingReCaptchaChallenge to false when there is no network" time="0.007">
    </testcase>
    <testcase classname="useSignupRecaptcha should call handleSignup when ReCaptcha is successful" name="useSignupRecaptcha should call handleSignup when ReCaptcha is successful" time="0.001">
    </testcase>
    <testcase classname="useSignupRecaptcha should log to Sentry when ReCaptcha challenge has failed" name="useSignupRecaptcha should log to Sentry when ReCaptcha challenge has failed" time="0.004">
    </testcase>
    <testcase classname="useSignupRecaptcha should not log to Sentry when ReCaptcha challenge has failed due to network error" name="useSignupRecaptcha should not log to Sentry when ReCaptcha challenge has failed due to network error" time="0.003">
    </testcase>
    <testcase classname="useSignupRecaptcha should notifies when ReCaptcha token has expired" name="useSignupRecaptcha should notifies when ReCaptcha token has expired" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;LocationSlider /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:05" time="1.523" tests="4">
    <testcase classname="&lt;LocationSlider /&gt; should render correctly" name="&lt;LocationSlider /&gt; should render correctly" time="0.151">
    </testcase>
    <testcase classname="&lt;LocationSlider /&gt; should update time range" name="&lt;LocationSlider /&gt; should update time range" time="0.029">
    </testcase>
    <testcase classname="&lt;LocationSlider /&gt; should call onChange with correct value" name="&lt;LocationSlider /&gt; should call onChange with correct value" time="0.019">
    </testcase>
    <testcase classname="&lt;LocationSlider /&gt; should use default value when value is not provided" name="&lt;LocationSlider /&gt; should use default value when value is not provided" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="getEventOnSiteWithdrawLabel" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:05" time="1.362" tests="18">
    <testcase classname="getEventOnSiteWithdrawLabel without withdrawal delay informed should return &quot;Billet à retirer sur place&quot; if event in 3 days" name="getEventOnSiteWithdrawLabel without withdrawal delay informed should return &quot;Billet à retirer sur place&quot; if event in 3 days" time="0.001">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel without withdrawal delay informed should return &quot;Billet à retirer sur place&quot; if event in 2 days" name="getEventOnSiteWithdrawLabel without withdrawal delay informed should return &quot;Billet à retirer sur place&quot; if event in 2 days" time="0">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel without withdrawal delay informed should return &quot;Billet à retirer sur place d’ici demain&quot; if event is tomorrow" name="getEventOnSiteWithdrawLabel without withdrawal delay informed should return &quot;Billet à retirer sur place d’ici demain&quot; if event is tomorrow" time="0.001">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel without withdrawal delay informed should return &quot;Billet à retirer sur place aujourd’hui&quot; if event is today" name="getEventOnSiteWithdrawLabel without withdrawal delay informed should return &quot;Billet à retirer sur place aujourd’hui&quot; if event is today" time="0.002">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with withdrawal delay less than 24 hours should return &quot;Billet à retirer sur place dans 3 jours&quot; if event in 3 days" name="getEventOnSiteWithdrawLabel with withdrawal delay less than 24 hours should return &quot;Billet à retirer sur place dans 3 jours&quot; if event in 3 days" time="0.002">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with withdrawal delay less than 24 hours should return &quot;Billet à retirer sur place dans 2 jours&quot; if event in 2 days" name="getEventOnSiteWithdrawLabel with withdrawal delay less than 24 hours should return &quot;Billet à retirer sur place dans 2 jours&quot; if event in 2 days" time="0.001">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with withdrawal delay less than 24 hours should return &quot;Billet à retirer sur place demain&quot; if event is tomorrow" name="getEventOnSiteWithdrawLabel with withdrawal delay less than 24 hours should return &quot;Billet à retirer sur place demain&quot; if event is tomorrow" time="0.002">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with withdrawal delay less than 24 hours should return &quot;Billet à retirer sur place dès 18h30&quot; if event is today" name="getEventOnSiteWithdrawLabel with withdrawal delay less than 24 hours should return &quot;Billet à retirer sur place dès 18h30&quot; if event is today" time="0.002">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with 24 hours withdrawal delay should return &quot;Billet à retirer sur place dans 2 jours&quot; if event in 3 days" name="getEventOnSiteWithdrawLabel with 24 hours withdrawal delay should return &quot;Billet à retirer sur place dans 2 jours&quot; if event in 3 days" time="0.002">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with 24 hours withdrawal delay should return &quot;Billet à retirer sur place dès demain&quot; if event in 2 days" name="getEventOnSiteWithdrawLabel with 24 hours withdrawal delay should return &quot;Billet à retirer sur place dès demain&quot; if event in 2 days" time="0.003">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with 24 hours withdrawal delay should return &quot;Billet à retirer sur place dès aujourd&apos;hui&quot;if event is tomorrow" name="getEventOnSiteWithdrawLabel with 24 hours withdrawal delay should return &quot;Billet à retirer sur place dès aujourd&apos;hui&quot;if event is tomorrow" time="0.016">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with 24 hours withdrawal delay should return &quot;Billet à retirer sur place aujourd’hui&quot; if event is today" name="getEventOnSiteWithdrawLabel with 24 hours withdrawal delay should return &quot;Billet à retirer sur place aujourd’hui&quot; if event is today" time="0.005">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with 48 hours withdrawal delay should return &quot;Billet à retirer sur place dès demain&quot; if event in 3 days" name="getEventOnSiteWithdrawLabel with 48 hours withdrawal delay should return &quot;Billet à retirer sur place dès demain&quot; if event in 3 days" time="0.005">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with 48 hours withdrawal delay should return &quot;Billet à retirer sur place dès aujourd&apos;hui&quot;if event in 2 days" name="getEventOnSiteWithdrawLabel with 48 hours withdrawal delay should return &quot;Billet à retirer sur place dès aujourd&apos;hui&quot;if event in 2 days" time="0.008">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with 48 hours withdrawal delay should return &quot;Billet à retirer sur place dès aujourd’hui&quot; if event is tomorrow" name="getEventOnSiteWithdrawLabel with 48 hours withdrawal delay should return &quot;Billet à retirer sur place dès aujourd’hui&quot; if event is tomorrow" time="0.004">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel with 48 hours withdrawal delay should return &quot;Billet à retirer sur place aujourd’hui&quot; if event is today" name="getEventOnSiteWithdrawLabel with 48 hours withdrawal delay should return &quot;Billet à retirer sur place aujourd’hui&quot; if event is today" time="0.006">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel should return an empty string if the event will start in more than 3 days" name="getEventOnSiteWithdrawLabel should return an empty string if the event will start in more than 3 days" time="0.001">
    </testcase>
    <testcase classname="getEventOnSiteWithdrawLabel should return an empty string if the event has started" name="getEventOnSiteWithdrawLabel should return an empty string if the event has started" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getHistoryLessThan30Days" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:06" time="1.283" tests="1">
    <testcase classname="getHistoryLessThan30Days should return history less than 30 days" name="getHistoryLessThan30Days should return history less than 30 days" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="getDateValuesString" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:07" time="1.028" tests="1">
    <testcase classname="getDateValuesString should return an object with day, month and year as strings with the date values" name="getDateValuesString should return an object with day, month and year as strings with the date values" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RadioSelector /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:07" time="1.469" tests="4">
    <testcase classname="&lt;RadioSelector /&gt; should call onPress when pressed" name="&lt;RadioSelector /&gt; should call onPress when pressed" time="0.044">
    </testcase>
    <testcase classname="&lt;RadioSelector /&gt; should not call onPress when disabled" name="&lt;RadioSelector /&gt; should not call onPress when disabled" time="0.012">
    </testcase>
    <testcase classname="&lt;RadioSelector /&gt; should render price when provided" name="&lt;RadioSelector /&gt; should render price when provided" time="0.015">
    </testcase>
    <testcase classname="&lt;RadioSelector /&gt; should render description when provided" name="&lt;RadioSelector /&gt; should render description when provided" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Slider /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:07" time="1.145" tests="7">
    <testcase classname="&lt;Slider /&gt; values should show two values if there are 2 values in the array values" name="&lt;Slider /&gt; values should show two values if there are 2 values in the array values" time="0.112">
    </testcase>
    <testcase classname="&lt;Slider /&gt; values should show one value if there are 1 value in the array values" name="&lt;Slider /&gt; values should show one value if there are 1 value in the array values" time="0.004">
    </testcase>
    <testcase classname="&lt;Slider /&gt; values should not show values if showValues is false" name="&lt;Slider /&gt; values should not show values if showValues is false" time="0.034">
    </testcase>
    <testcase classname="&lt;Slider /&gt; values should show minimum value if shouldShowMinMaxValues is true" name="&lt;Slider /&gt; values should show minimum value if shouldShowMinMaxValues is true" time="0.012">
    </testcase>
    <testcase classname="&lt;Slider /&gt; values should show maximim value if shouldShowMinMaxValues is true" name="&lt;Slider /&gt; values should show maximim value if shouldShowMinMaxValues is true" time="0.009">
    </testcase>
    <testcase classname="&lt;Slider /&gt; values should show minimum and maximum complement when defined" name="&lt;Slider /&gt; values should show minimum and maximum complement when defined" time="0.012">
    </testcase>
    <testcase classname="&lt;Slider /&gt; values should call onValuesChange when slider value changes" name="&lt;Slider /&gt; values should call onValuesChange when slider value changes" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="getBookingProperties" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:07" time="1.229" tests="5">
    <testcase classname="getBookingProperties when an event booking is provided" name="getBookingProperties when an event booking is provided" time="0.001">
    </testcase>
    <testcase classname="getBookingProperties when a physical booking is provided" name="getBookingProperties when a physical booking is provided" time="0.001">
    </testcase>
    <testcase classname="getBookingProperties when a booking with activation code is provided" name="getBookingProperties when a booking with activation code is provided" time="0.001">
    </testcase>
    <testcase classname="getBookingProperties when duo with an event" name="getBookingProperties when duo with an event" time="0.005">
    </testcase>
    <testcase classname="getBookingProperties when duo with an non-event" name="getBookingProperties when duo with an non-event" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="expirationDateUtils" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:07" time="1.363" tests="19">
    <testcase classname="expirationDateUtils getDigitalBookingsWithoutExpirationDate should get an array with a booking if is digital and without expiration date" name="expirationDateUtils getDigitalBookingsWithoutExpirationDate should get an array with a booking if is digital and without expiration date" time="0.002">
    </testcase>
    <testcase classname="expirationDateUtils getDigitalBookingsWithoutExpirationDate should return an empty array" name="expirationDateUtils getDigitalBookingsWithoutExpirationDate should return an empty array" time="0">
    </testcase>
    <testcase classname="expirationDateUtils isBookingInList should check if a booking does exist in the list of DigitalBookingWithoutExpirationDate array and return true if it exist" name="expirationDateUtils isBookingInList should check if a booking does exist in the list of DigitalBookingWithoutExpirationDate array and return true if it exist" time="0.001">
    </testcase>
    <testcase classname="expirationDateUtils isBookingInList should check if a booking does exist in the list of DigitalBookingWithoutExpirationDate array and return false if it does not exist" name="expirationDateUtils isBookingInList should check if a booking does exist in the list of DigitalBookingWithoutExpirationDate array and return false if it does not exist" time="0.001">
    </testcase>
    <testcase classname="expirationDateUtils displayExpirationMessage should display expiration message : Ta réservation s’archivera dans ${daysLeft} jours" name="expirationDateUtils displayExpirationMessage should display expiration message : Ta réservation s’archivera dans ${daysLeft} jours" time="0">
    </testcase>
    <testcase classname="expirationDateUtils displayExpirationMessage should display expiration message : Ta reservation s’archivera demain, when the offer archives the next day" name="expirationDateUtils displayExpirationMessage should display expiration message : Ta reservation s’archivera demain, when the offer archives the next day" time="0">
    </testcase>
    <testcase classname="expirationDateUtils displayExpirationMessage should display expiration message : Ta réservation s’archive aujourd’hui, when the offer archives today" name="expirationDateUtils displayExpirationMessage should display expiration message : Ta réservation s’archive aujourd’hui, when the offer archives today" time="0.001">
    </testcase>
    <testcase classname="expirationDateUtils displayExpirationMessage should display nothing when daysLeft &lt; 0" name="expirationDateUtils displayExpirationMessage should display nothing when daysLeft &lt; 0" time="0">
    </testcase>
    <testcase classname="expirationDateUtils daysCountdown should return the days countdown between two dates" name="expirationDateUtils daysCountdown should return the days countdown between two dates" time="0.002">
    </testcase>
    <testcase classname="expirationDateUtils daysCountdown should return -1 when the countdown ended" name="expirationDateUtils daysCountdown should return -1 when the countdown ended" time="0.001">
    </testcase>
    <testcase classname="expirationDateUtils formattedExpirationDate should formatted expiration date from the created date" name="expirationDateUtils formattedExpirationDate should formatted expiration date from the created date" time="0.002">
    </testcase>
    <testcase classname="expirationDateUtils formattedExpirationDate should return an empty string when dateCreated is an empty string" name="expirationDateUtils formattedExpirationDate should return an empty string when dateCreated is an empty string" time="0.001">
    </testcase>
    <testcase classname="expirationDateUtils isDigitalBookingWithoutExpirationDate should return true when booking is digital without expiration date" name="expirationDateUtils isDigitalBookingWithoutExpirationDate should return true when booking is digital without expiration date" time="0.001">
    </testcase>
    <testcase classname="expirationDateUtils isDigitalBookingWithoutExpirationDate should return false when booking is digital with expiration date" name="expirationDateUtils isDigitalBookingWithoutExpirationDate should return false when booking is digital with expiration date" time="0.001">
    </testcase>
    <testcase classname="expirationDateUtils isDigitalBookingWithoutExpirationDate should return false when booking is not digital without expiration date" name="expirationDateUtils isDigitalBookingWithoutExpirationDate should return false when booking is not digital without expiration date" time="0.001">
    </testcase>
    <testcase classname="expirationDateUtils isDigitalBookingWithoutExpirationDate should return false when booking is not digital with expiration date" name="expirationDateUtils isDigitalBookingWithoutExpirationDate should return false when booking is not digital with expiration date" time="0.03">
    </testcase>
    <testcase classname="expirationDateUtils isFreeBookingInSubcategories should return true when booking amount is 0 and the offer has a category that can be archived" name="expirationDateUtils isFreeBookingInSubcategories should return true when booking amount is 0 and the offer has a category that can be archived" time="0.003">
    </testcase>
    <testcase classname="expirationDateUtils isFreeBookingInSubcategories should return false when booking amount is 0 and the offer has not a category that can be archived" name="expirationDateUtils isFreeBookingInSubcategories should return false when booking amount is 0 and the offer has not a category that can be archived" time="0.009">
    </testcase>
    <testcase classname="expirationDateUtils isFreeBookingInSubcategories should return false when booking amount &gt; 0 and the offer has a category that can be archived" name="expirationDateUtils isFreeBookingInSubcategories should return false when booking amount &gt; 0 and the offer has a category that can be archived" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="getGeolocatedVenues" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:07" time="1.211" tests="2">
    <testcase classname="getGeolocatedVenues should return geolocated venues" name="getGeolocatedVenues should return geolocated venues" time="0.001">
    </testcase>
    <testcase classname="getGeolocatedVenues should return geolocated venues when a venue is selected and is not in venues in parameter" name="getGeolocatedVenues should return geolocated venues when a venue is selected and is not in venues in parameter" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CreditBlockTitle" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:08" time="1.208" tests="5">
    <testcase classname="CreditBlockTitle should return correct text for expired credit" name="CreditBlockTitle should return correct text for expired credit" time="0.093">
    </testcase>
    <testcase classname="CreditBlockTitle should return correct text for ongoing credit" name="CreditBlockTitle should return correct text for ongoing credit" time="0.007">
    </testcase>
    <testcase classname="CreditBlockTitle should return correct text for 18 years old credit" name="CreditBlockTitle should return correct text for 18 years old credit" time="0.045">
    </testcase>
    <testcase classname="CreditBlockTitle should return secondary text for ongoing credit" name="CreditBlockTitle should return secondary text for ongoing credit" time="0.005">
    </testcase>
    <testcase classname="CreditBlockTitle should return correct text for coming credit" name="CreditBlockTitle should return correct text for coming credit" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="isEmailValid function" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:08" time="0.855" tests="10">
    <testcase classname="isEmailValid function should accept a well formated email: prenom.nom@example.com" name="isEmailValid function should accept a well formated email: prenom.nom@example.com" time="0.001">
    </testcase>
    <testcase classname="isEmailValid function should accept a well formated email: prenom_de@example.com" name="isEmailValid function should accept a well formated email: prenom_de@example.com" time="0">
    </testcase>
    <testcase classname="isEmailValid function should accept a well formated email: pren-om@exam.ple.com" name="isEmailValid function should accept a well formated email: pren-om@exam.ple.com" time="0.004">
    </testcase>
    <testcase classname="isEmailValid function should accept a well formated email: prenomnom@exam-ple.com" name="isEmailValid function should accept a well formated email: prenomnom@exam-ple.com" time="0.002">
    </testcase>
    <testcase classname="isEmailValid function should reject a well formated email: prenom" name="isEmailValid function should reject a well formated email: prenom" time="0.001">
    </testcase>
    <testcase classname="isEmailValid function should reject a well formated email: prenom@" name="isEmailValid function should reject a well formated email: prenom@" time="0.001">
    </testcase>
    <testcase classname="isEmailValid function should reject a well formated email: @fake.com" name="isEmailValid function should reject a well formated email: @fake.com" time="0.002">
    </testcase>
    <testcase classname="isEmailValid function should reject a well formated email: domain.com" name="isEmailValid function should reject a well formated email: domain.com" time="0.002">
    </testcase>
    <testcase classname="isEmailValid function should reject a well formated email: prenom.nom@exampl_e.com" name="isEmailValid function should reject a well formated email: prenom.nom@exampl_e.com" time="0">
    </testcase>
    <testcase classname="isEmailValid function should reject a well formated email: prenom@nom@example.com" name="isEmailValid function should reject a well formated email: prenom@nom@example.com" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="setNameSchema" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:08" time="0.89" tests="4">
    <testcase classname="setNameSchema should reject when no name" name="setNameSchema should reject when no name" time="0.003">
    </testcase>
    <testcase classname="setNameSchema should reject when first name has a special character" name="setNameSchema should reject when first name has a special character" time="0.019">
    </testcase>
    <testcase classname="setNameSchema should reject when last name has a special character" name="setNameSchema should reject when last name has a special character" time="0.008">
    </testcase>
    <testcase classname="setNameSchema should resolve when last name and first name are valid" name="setNameSchema should resolve when last name and first name are valid" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;BlurryWrapper /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:08" time="1.085" tests="3">
    <testcase classname="&lt;BlurryWrapper /&gt; should apply default blur amount when no prop is provided" name="&lt;BlurryWrapper /&gt; should apply default blur amount when no prop is provided" time="0.193">
    </testcase>
    <testcase classname="&lt;BlurryWrapper /&gt; should apply light blur amount when blurAmount is set to LIGHT" name="&lt;BlurryWrapper /&gt; should apply light blur amount when blurAmount is set to LIGHT" time="0.005">
    </testcase>
    <testcase classname="&lt;BlurryWrapper /&gt; should apply intense blur amount when blurAmount is set to INTENSE" name="&lt;BlurryWrapper /&gt; should apply intense blur amount when blurAmount is set to INTENSE" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Search reducer" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:08" time="1.324" tests="4">
    <testcase classname="Search reducer should handle SET_STATE" name="Search reducer should handle SET_STATE" time="0.002">
    </testcase>
    <testcase classname="Search reducer should handle SET_LOCATION_AROUND_ME" name="Search reducer should handle SET_LOCATION_AROUND_ME" time="0.001">
    </testcase>
    <testcase classname="Search reducer should handle SET_LOCATION_EVERYWHERE" name="Search reducer should handle SET_LOCATION_EVERYWHERE" time="0">
    </testcase>
    <testcase classname="Search reducer should handle SET_LOCATION_PLACE" name="Search reducer should handle SET_LOCATION_PLACE" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="getPastYears" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:09" time="0.998" tests="3">
    <testcase classname="getPastYears should return an array of years as strings in descending order" name="getPastYears should return an array of years as strings in descending order" time="0.002">
    </testcase>
    <testcase classname="getPastYears should return an empty array if startYear is greater than currentYear" name="getPastYears should return an empty array if startYear is greater than currentYear" time="0">
    </testcase>
    <testcase classname="getPastYears should handle startYear as a negative value" name="getPastYears should handle startYear as a negative value" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getFavoriteDisplayPrice" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:09" time="0.948" tests="6">
    <testcase classname="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: undefined, startPrice: undefined }) 	= undefined" name="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: undefined, startPrice: undefined }) 	= undefined" time="0.002">
    </testcase>
    <testcase classname="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: null, startPrice: null }) 	= undefined" name="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: null, startPrice: null }) 	= undefined" time="0.001">
    </testcase>
    <testcase classname="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: 0, startPrice: null }) 	= Gratuit" name="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: 0, startPrice: null }) 	= Gratuit" time="0.002">
    </testcase>
    <testcase classname="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: 1000, startPrice: null }) 	= 10 €" name="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: 1000, startPrice: null }) 	= 10 €" time="0.002">
    </testcase>
    <testcase classname="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: null, startPrice: 0 }) 	= Dès 0 €" name="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: null, startPrice: 0 }) 	= Dès 0 €" time="0">
    </testcase>
    <testcase classname="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: null, startPrice: 1000 }) 	= Dès 10 €" name="getFavoriteDisplayPrice getFavoriteDisplayPrice({ price: null, startPrice: 1000 }) 	= Dès 10 €" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useGetDefaultRegion" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:09" time="1.19" tests="1">
    <testcase classname="useGetDefaultRegion should return default region" name="useGetDefaultRegion should return default region" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="getCodePushId" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:10" time="0.943" tests="4">
    <testcase classname="getCodePushId should return empty string when there is no code push information" name="getCodePushId should return empty string when there is no code push information" time="0.002">
    </testcase>
    <testcase classname="getCodePushId should return code push label when there is code push information" name="getCodePushId should return code push label when there is code push information" time="0.001">
    </testcase>
    <testcase classname="getCodePushId should fetch metadata once" name="getCodePushId should fetch metadata once" time="0.001">
    </testcase>
    <testcase classname="getCodePushId should return empty string when there is an error" name="getCodePushId should return empty string when there is an error" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="startTrackingAcceptedCookies" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:10" time="1.023" tests="12">
    <testcase classname="startTrackingAcceptedCookies should disable tracking when refused all cookies" name="startTrackingAcceptedCookies should disable tracking when refused all cookies" time="0.009">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should enable tracking if accepted all cookies" name="startTrackingAcceptedCookies should enable tracking if accepted all cookies" time="0.001">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should enable Google Analytics when performance cookies are accepted" name="startTrackingAcceptedCookies should enable Google Analytics when performance cookies are accepted" time="0.004">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should enable Amplitude when performance cookies are accepted" name="startTrackingAcceptedCookies should enable Amplitude when performance cookies are accepted" time="0.036">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should init AppsFlyers when marketing cookies are accepted" name="startTrackingAcceptedCookies should init AppsFlyers when marketing cookies are accepted" time="0.003">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should enable AppsFlyers when marketing cookies are accepted" name="startTrackingAcceptedCookies should enable AppsFlyers when marketing cookies are accepted" time="0.002">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should enable Batch when customization cookies are accepted" name="startTrackingAcceptedCookies should enable Batch when customization cookies are accepted" time="0">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should disable Amplitude, Batch and Google Analytics when only marketing cookies are accepted" name="startTrackingAcceptedCookies should disable Amplitude, Batch and Google Analytics when only marketing cookies are accepted" time="0.002">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should not init AppsFlyers when marketing cookies are refused" name="startTrackingAcceptedCookies should not init AppsFlyers when marketing cookies are refused" time="0.005">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should disable AppsFlyers when marketing cookies are refused" name="startTrackingAcceptedCookies should disable AppsFlyers when marketing cookies are refused" time="0.001">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should remove generate algolia key from localStorage when refused algolia tracking (performance)" name="startTrackingAcceptedCookies should remove generate algolia key from localStorage when refused algolia tracking (performance)" time="0.001">
    </testcase>
    <testcase classname="startTrackingAcceptedCookies should remove generate UTM keys from localStorage when refused customization cookies" name="startTrackingAcceptedCookies should remove generate UTM keys from localStorage when refused customization cookies" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="extractStockDates" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:10" time="1.332" tests="3">
    <testcase classname="extractStockDates should return an empty array for an offer without stocks" name="extractStockDates should return an empty array for an offer without stocks" time="0.002">
    </testcase>
    <testcase classname="extractStockDates should return an array of dates for an offer with stocks" name="extractStockDates should return an array of dates for an offer with stocks" time="0.001">
    </testcase>
    <testcase classname="extractStockDates should skip stocks without beginningDatetime" name="extractStockDates should skip stocks without beginningDatetime" time="0">
    </testcase>
  </testsuite>
  <testsuite name="[method] maintenanceStatus" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:10" time="1.233" tests="6">
    <testcase classname="[method] maintenanceStatus should set up listener to the maintenance feature flag" name="[method] maintenanceStatus should set up listener to the maintenance feature flag" time="0.001">
    </testcase>
    <testcase classname="[method] maintenanceStatus should set message when maintenance is on" name="[method] maintenanceStatus should set message when maintenance is on" time="0">
    </testcase>
    <testcase classname="[method] maintenanceStatus should ignore the message when maintenance is off" name="[method] maintenanceStatus should ignore the message when maintenance is off" time="0.002">
    </testcase>
    <testcase classname="[method] maintenanceStatus when something goes wrong in firebase should ignore the data when data is wrong" name="[method] maintenanceStatus when something goes wrong in firebase should ignore the data when data is wrong" time="0.005">
    </testcase>
    <testcase classname="[method] maintenanceStatus when something goes wrong in firebase should ignore the data when maintenanceIsOn is wrong" name="[method] maintenanceStatus when something goes wrong in firebase should ignore the data when maintenanceIsOn is wrong" time="0">
    </testcase>
    <testcase classname="[method] maintenanceStatus when something goes wrong in firebase should use default message when message is wrong" name="[method] maintenanceStatus when something goes wrong in firebase should use default message when message is wrong" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="formatDistance" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:11" time="1.069" tests="8">
    <testcase classname="formatDistance getHumanizeRelativeDistance(7.3) 	= 7 m" name="formatDistance getHumanizeRelativeDistance(7.3) 	= 7 m" time="0.001">
    </testcase>
    <testcase classname="formatDistance getHumanizeRelativeDistance(14.6) 	= 15 m" name="formatDistance getHumanizeRelativeDistance(14.6) 	= 15 m" time="0">
    </testcase>
    <testcase classname="formatDistance getHumanizeRelativeDistance(73.2) 	= 75 m" name="formatDistance getHumanizeRelativeDistance(73.2) 	= 75 m" time="0.002">
    </testcase>
    <testcase classname="formatDistance getHumanizeRelativeDistance(146.4) 	= 150 m" name="formatDistance getHumanizeRelativeDistance(146.4) 	= 150 m" time="0.001">
    </testcase>
    <testcase classname="formatDistance getHumanizeRelativeDistance(2.9276) 	= 2,9 km" name="formatDistance getHumanizeRelativeDistance(2.9276) 	= 2,9 km" time="0">
    </testcase>
    <testcase classname="formatDistance getHumanizeRelativeDistance(7.3191) 	= 7 km" name="formatDistance getHumanizeRelativeDistance(7.3191) 	= 7 km" time="0">
    </testcase>
    <testcase classname="formatDistance getHumanizeRelativeDistance(6739.1826) 	= 900+ km" name="formatDistance getHumanizeRelativeDistance(6739.1826) 	= 900+ km" time="0.001">
    </testcase>
    <testcase classname="formatDistance should return undefined if we can&apos;t have the user&apos;s position" name="formatDistance should return undefined if we can&apos;t have the user&apos;s position" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useDistance()" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:11" time="0.839" tests="5">
    <testcase classname="useDistance() should call useLocation and formatDistance when geolocation is on" name="useDistance() should call useLocation and formatDistance when geolocation is on" time="0.002">
    </testcase>
    <testcase classname="useDistance() should return undefined when no offerPosition given" name="useDistance() should return undefined when no offerPosition given" time="0.001">
    </testcase>
    <testcase classname="useDistance() should return undefined when user position and custom position are null" name="useDistance() should return undefined when user position and custom position are null" time="0.004">
    </testcase>
    <testcase classname="useDistance() should return undefined when custom position is defined and type is municipality" name="useDistance() should return undefined when custom position is defined and type is municipality" time="0.002">
    </testcase>
    <testcase classname="useDistance() should call useLocation and formatDistance when user have a custom position and type is housnumber" name="useDistance() should call useLocation and formatDistance when user have a custom position and type is housnumber" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="useShowSkeleton" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:11" time="1.105" tests="1">
    <testcase classname="useShowSkeleton should show skeleton when fetching data on load" name="useShowSkeleton should show skeleton when fetching data on load" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="checkGeolocPermission()" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:11" time="0.995" tests="5">
    <testcase classname="checkGeolocPermission() should return granted when permissionResult=granted" name="checkGeolocPermission() should return granted when permissionResult=granted" time="0.001">
    </testcase>
    <testcase classname="checkGeolocPermission() should return denied when permissionResult=denied" name="checkGeolocPermission() should return denied when permissionResult=denied" time="0">
    </testcase>
    <testcase classname="checkGeolocPermission() should return never_ask_again when permissionResult=blocked" name="checkGeolocPermission() should return never_ask_again when permissionResult=blocked" time="0.001">
    </testcase>
    <testcase classname="checkGeolocPermission() should return never_ask_again when permissionResult=unavailable" name="checkGeolocPermission() should return never_ask_again when permissionResult=unavailable" time="0.001">
    </testcase>
    <testcase classname="checkGeolocPermission() should return never_ask_again when permissionResult=limited" name="checkGeolocPermission() should return never_ask_again when permissionResult=limited" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getOfferImageUrls" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:11" time="0.926" tests="2">
    <testcase classname="getOfferImageUrls should return an empty array when images object is empty" name="getOfferImageUrls should return an empty array when images object is empty" time="0.002">
    </testcase>
    <testcase classname="getOfferImageUrls should return an array of image URLs" name="getOfferImageUrls should return an array of image URLs" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="setEmailSchema" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:11" time="1.008" tests="3">
    <testcase classname="setEmailSchema should reject when no email" name="setEmailSchema should reject when no email" time="0.002">
    </testcase>
    <testcase classname="setEmailSchema should resolve when email is valid and marketing opt-in is checked" name="setEmailSchema should resolve when email is valid and marketing opt-in is checked" time="0.006">
    </testcase>
    <testcase classname="setEmailSchema should resolve when email is valid and marketing opt-in is not checked" name="setEmailSchema should resolve when email is valid and marketing opt-in is not checked" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="isAppUrl" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:12" time="1.015" tests="2">
    <testcase classname="isAppUrl should return false if url does not start with linking prefixes" name="isAppUrl should return false if url does not start with linking prefixes" time="0.001">
    </testcase>
    <testcase classname="isAppUrl should return true if url starts with linking prefixes" name="isAppUrl should return true if url starts with linking prefixes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getSearchVenuePlaylistTitle" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:12" time="1.015" tests="6">
    <testcase classname="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(Les salles de concerts &amp; festivals,true) 	= Les salles de concerts &amp; festivals accessibles" name="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(Les salles de concerts &amp; festivals,true) 	= Les salles de concerts &amp; festivals accessibles" time="0.002">
    </testcase>
    <testcase classname="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(Les salles de concerts &amp; festivals,false) 	= Les salles de concerts &amp; festivals" name="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(Les salles de concerts &amp; festivals,false) 	= Les salles de concerts &amp; festivals" time="0">
    </testcase>
    <testcase classname="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(Les librairies près de toi,true) 	= Les librairies accessibles près de toi" name="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(Les librairies près de toi,true) 	= Les librairies accessibles près de toi" time="0.001">
    </testcase>
    <testcase classname="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(Les librairies près de toi,false) 	= Les librairies près de toi" name="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(Les librairies près de toi,false) 	= Les librairies près de toi" time="0.001">
    </testcase>
    <testcase classname="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(undefined,true) 	= Les lieux culturels accessibles" name="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(undefined,true) 	= Les lieux culturels accessibles" time="0.001">
    </testcase>
    <testcase classname="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(undefined,false) 	= Les lieux culturels" name="getSearchVenuePlaylistTitle getSearchVenuePlaylistTitle(undefined,false) 	= Les lieux culturels" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="startTracking" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:12" time="0.889" tests="2">
    <testcase classname="startTracking should disable tracking if enabled = false" name="startTracking should disable tracking if enabled = false" time="0.002">
    </testcase>
    <testcase classname="startTracking should enable tracking if enabled = true" name="startTracking should enable tracking if enabled = true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="buildFilters" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:12" time="0.968" tests="3">
    <testcase classname="buildFilters without filter should return an object if no parameters are passed" name="buildFilters without filter should return an object if no parameters are passed" time="0.002">
    </testcase>
    <testcase classname="buildFilters with filter excludedObjectIds should return filters that excludes objectID when excludedObjectIds is not empty" name="buildFilters with filter excludedObjectIds should return filters that excludes objectID when excludedObjectIds is not empty" time="0.001">
    </testcase>
    <testcase classname="buildFilters with filter excludedObjectIds should return filters that excludes objectID when excludedObjectIds is empty" name="buildFilters with filter excludedObjectIds should return filters that excludes objectID when excludedObjectIds is empty" time="0">
    </testcase>
  </testsuite>
  <testsuite name="accessibleRadioProps" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:12" time="1.035" tests="2">
    <testcase classname="accessibleRadioProps should return accessibility props with state in native" name="accessibleRadioProps should return accessibility props with state in native" time="0.003">
    </testcase>
    <testcase classname="accessibleRadioProps should return accessibility props with state in native" name="accessibleRadioProps should return accessibility props with state in native" time="0">
    </testcase>
  </testsuite>
  <testsuite name="getTagColor" errors="0" failures="0" skipped="0" timestamp="2024-07-01T10:04:13" time="0.825" tests="3">
    <testcase classname="getTagColor should return white for GONE status" name="getTagColor should return white for GONE status" time="0.001">
    </testcase>
    <testcase classname="getTagColor should return green for ONGOING status" name="getTagColor should return green for ONGOING status" time="0">
    </testcase>
    <testcase classname="getTagColor should return secondary for COMING status" name="getTagColor should return secondary for COMING status" time="0">
    </testcase>
  </testsuite>
</testsuites>