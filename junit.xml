<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="831" failures="0" errors="0" time="55.886">
  <testsuite name="no-raw-text" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:25" time="6.661" tests="38">
    <testcase classname="no-raw-text valid &lt;Text&gt;toto&lt;/Text&gt;" name="no-raw-text valid &lt;Text&gt;toto&lt;/Text&gt;" time="4.363">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.Hero&gt;toto&lt;/Typo.Hero&gt;" name="no-raw-text valid &lt;Typo.Hero&gt;toto&lt;/Typo.Hero&gt;" time="0.005">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.Title1&gt;toto&lt;/Typo.Title1&gt;" name="no-raw-text valid &lt;Typo.Title1&gt;toto&lt;/Typo.Title1&gt;" time="0.006">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.Title2&gt;toto&lt;/Typo.Title2&gt;" name="no-raw-text valid &lt;Typo.Title2&gt;toto&lt;/Typo.Title2&gt;" time="0.006">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.Title3&gt;toto&lt;/Typo.Title3&gt;" name="no-raw-text valid &lt;Typo.Title3&gt;toto&lt;/Typo.Title3&gt;" time="0.004">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.Title4&gt;toto&lt;/Typo.Title4&gt;" name="no-raw-text valid &lt;Typo.Title4&gt;toto&lt;/Typo.Title4&gt;" time="0.006">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.ButtonText&gt;toto&lt;/Typo.ButtonText&gt;" name="no-raw-text valid &lt;Typo.ButtonText&gt;toto&lt;/Typo.ButtonText&gt;" time="0.007">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.ButtonTextNeutralInfo&gt;toto&lt;/Typo.ButtonTextNeutralInfo&gt;" name="no-raw-text valid &lt;Typo.ButtonTextNeutralInfo&gt;toto&lt;/Typo.ButtonTextNeutralInfo&gt;" time="0.005">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.ButtonTextPrimary&gt;toto&lt;/Typo.ButtonTextPrimary&gt;" name="no-raw-text valid &lt;Typo.ButtonTextPrimary&gt;toto&lt;/Typo.ButtonTextPrimary&gt;" time="0.008">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.ButtonTextSecondary&gt;toto&lt;/Typo.ButtonTextSecondary&gt;" name="no-raw-text valid &lt;Typo.ButtonTextSecondary&gt;toto&lt;/Typo.ButtonTextSecondary&gt;" time="0.003">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.Body&gt;toto&lt;/Typo.Body&gt;" name="no-raw-text valid &lt;Typo.Body&gt;toto&lt;/Typo.Body&gt;" time="0.008">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.Caption&gt;toto&lt;/Typo.Caption&gt;" name="no-raw-text valid &lt;Typo.Caption&gt;toto&lt;/Typo.Caption&gt;" time="0.008">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.CaptionPrimary&gt;toto&lt;/Typo.CaptionPrimary&gt;" name="no-raw-text valid &lt;Typo.CaptionPrimary&gt;toto&lt;/Typo.CaptionPrimary&gt;" time="0.009">
    </testcase>
    <testcase classname="no-raw-text valid &lt;Typo.CaptionSecondary&gt;toto&lt;/Typo.CaptionSecondary&gt;" name="no-raw-text valid &lt;Typo.CaptionSecondary&gt;toto&lt;/Typo.CaptionSecondary&gt;" time="0.006">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledHero&gt;toto&lt;/StyledHero&gt;" name="no-raw-text valid &lt;StyledHero&gt;toto&lt;/StyledHero&gt;" time="0.003">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledTitle1&gt;toto&lt;/StyledTitle1&gt;" name="no-raw-text valid &lt;StyledTitle1&gt;toto&lt;/StyledTitle1&gt;" time="0.004">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledTitle2&gt;toto&lt;/StyledTitle2&gt;" name="no-raw-text valid &lt;StyledTitle2&gt;toto&lt;/StyledTitle2&gt;" time="0.003">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledTitle3&gt;toto&lt;/StyledTitle3&gt;" name="no-raw-text valid &lt;StyledTitle3&gt;toto&lt;/StyledTitle3&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledTitle4&gt;toto&lt;/StyledTitle4&gt;" name="no-raw-text valid &lt;StyledTitle4&gt;toto&lt;/StyledTitle4&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledButtonText&gt;toto&lt;/StyledButtonText&gt;" name="no-raw-text valid &lt;StyledButtonText&gt;toto&lt;/StyledButtonText&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledButtonTextNeutralInfo&gt;toto&lt;/StyledButtonTextNeutralInfo&gt;" name="no-raw-text valid &lt;StyledButtonTextNeutralInfo&gt;toto&lt;/StyledButtonTextNeutralInfo&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledButtonTextPrimary&gt;toto&lt;/StyledButtonTextPrimary&gt;" name="no-raw-text valid &lt;StyledButtonTextPrimary&gt;toto&lt;/StyledButtonTextPrimary&gt;" time="0.004">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledButtonTextSecondary&gt;toto&lt;/StyledButtonTextSecondary&gt;" name="no-raw-text valid &lt;StyledButtonTextSecondary&gt;toto&lt;/StyledButtonTextSecondary&gt;" time="0.001">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledBody&gt;toto&lt;/StyledBody&gt;" name="no-raw-text valid &lt;StyledBody&gt;toto&lt;/StyledBody&gt;" time="0.003">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledCaption&gt;toto&lt;/StyledCaption&gt;" name="no-raw-text valid &lt;StyledCaption&gt;toto&lt;/StyledCaption&gt;" time="0.001">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledCaptionNeutralInfo&gt;toto&lt;/StyledCaptionNeutralInfo&gt;" name="no-raw-text valid &lt;StyledCaptionNeutralInfo&gt;toto&lt;/StyledCaptionNeutralInfo&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledCaptionPrimary&gt;toto&lt;/StyledCaptionPrimary&gt;" name="no-raw-text valid &lt;StyledCaptionPrimary&gt;toto&lt;/StyledCaptionPrimary&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text valid &lt;StyledCaptionSecondary&gt;toto&lt;/StyledCaptionSecondary&gt;" name="no-raw-text valid &lt;StyledCaptionSecondary&gt;toto&lt;/StyledCaptionSecondary&gt;" time="0.008">
    </testcase>
    <testcase classname="no-raw-text valid &lt;CustomText&gt;toto&lt;/CustomText&gt;" name="no-raw-text valid &lt;CustomText&gt;toto&lt;/CustomText&gt;" time="0.004">
    </testcase>
    <testcase classname="no-raw-text valid &lt;TrucText&gt;toto&lt;/TrucText&gt;" name="no-raw-text valid &lt;TrucText&gt;toto&lt;/TrucText&gt;" time="0.003">
    </testcase>
    <testcase classname="no-raw-text valid &lt;React.Fragment&gt;
    &lt;Text&gt;toto&lt;/Text&gt;
    &lt;/React.Fragment&gt;" name="no-raw-text valid &lt;React.Fragment&gt;
    &lt;Text&gt;toto&lt;/Text&gt;
    &lt;/React.Fragment&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text valid &lt;CustomTag&gt;
    &lt;Text&gt;toto&lt;/Text&gt;
    &lt;/CustomTag&gt;" name="no-raw-text valid &lt;CustomTag&gt;
    &lt;Text&gt;toto&lt;/Text&gt;
    &lt;/CustomTag&gt;" time="0.004">
    </testcase>
    <testcase classname="no-raw-text invalid &lt;View&gt;toto&lt;/View&gt;" name="no-raw-text invalid &lt;View&gt;toto&lt;/View&gt;" time="0.007">
    </testcase>
    <testcase classname="no-raw-text invalid &lt;Button&gt;toto&lt;/Button&gt;" name="no-raw-text invalid &lt;Button&gt;toto&lt;/Button&gt;" time="0.004">
    </testcase>
    <testcase classname="no-raw-text invalid &lt;TextInput&gt;toto&lt;/TextInput&gt;" name="no-raw-text invalid &lt;TextInput&gt;toto&lt;/TextInput&gt;" time="0.003">
    </testcase>
    <testcase classname="no-raw-text invalid &lt;TextTruc&gt;toto&lt;/TextTruc&gt;" name="no-raw-text invalid &lt;TextTruc&gt;toto&lt;/TextTruc&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text invalid &lt;StyledTruc&gt;toto&lt;/StyledTruc&gt;" name="no-raw-text invalid &lt;StyledTruc&gt;toto&lt;/StyledTruc&gt;" time="0.002">
    </testcase>
    <testcase classname="no-raw-text invalid &lt;StyldBody&gt;toto&lt;/StyldBody&gt;" name="no-raw-text invalid &lt;StyldBody&gt;toto&lt;/StyldBody&gt;" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ChangeEmail/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:25" time="6.735" tests="26">
    <testcase classname="&lt;ChangeEmail/&gt; should render correctly" name="&lt;ChangeEmail/&gt; should render correctly" time="0.277">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; should not display the update app banner when FF (disableOldChangeEmail) is disabled" name="&lt;ChangeEmail/&gt; should not display the update app banner when FF (disableOldChangeEmail) is disabled" time="0.082">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; should show email suggestion" name="&lt;ChangeEmail/&gt; should show email suggestion" time="0.125">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; email change already in progress should render correctly" name="&lt;ChangeEmail/&gt; email change already in progress should render correctly" time="0.054">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; email change already in progress should log analytics" name="&lt;ChangeEmail/&gt; email change already in progress should log analytics" time="0.039">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; submit button should be disabled by default" name="&lt;ChangeEmail/&gt; submit button should be disabled by default" time="0.046">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; submit button should be enabled when form is valid" name="&lt;ChangeEmail/&gt; submit button should be enabled when form is valid" time="0.082">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; submit button should be disabled when form is invalid" name="&lt;ChangeEmail/&gt; submit button should be disabled when form is invalid" time="0.281">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; submit button should be disabled when form is invalid" name="&lt;ChangeEmail/&gt; submit button should be disabled when form is invalid" time="0.059">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; submit button should be disabled when form is invalid" name="&lt;ChangeEmail/&gt; submit button should be disabled when form is invalid" time="0.098">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When email change succeeds should navigate to Profile" name="&lt;ChangeEmail/&gt; When email change succeeds should navigate to Profile" time="0.129">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When email change succeeds should show success snackbar" name="&lt;ChangeEmail/&gt; When email change succeeds should show success snackbar" time="0.078">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When email change succeeds should log analytics" name="&lt;ChangeEmail/&gt; When email change succeeds should log analytics" time="0.086">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; should display &quot;same email&quot; error if I entered the same email (case insensitive)" name="&lt;ChangeEmail/&gt; should display &quot;same email&quot; error if I entered the same email (case insensitive)" time="0.048">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When user gives wrong password should not navigate" name="&lt;ChangeEmail/&gt; When user gives wrong password should not navigate" time="0.086">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When user gives wrong password should show error message" name="&lt;ChangeEmail/&gt; When user gives wrong password should show error message" time="0.09">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When user gives wrong password should log analytics" name="&lt;ChangeEmail/&gt; When user gives wrong password should log analytics" time="0.09">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When user has reached attempts limit should not navigate" name="&lt;ChangeEmail/&gt; When user has reached attempts limit should not navigate" time="0.085">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When user has reached attempts limit should show the generic error message" name="&lt;ChangeEmail/&gt; When user has reached attempts limit should show the generic error message" time="0.141">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; When user has reached attempts limit should log analytics" name="&lt;ChangeEmail/&gt; When user has reached attempts limit should log analytics" time="0.069">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; when FF disableOldChangeEmail is active and FF enableNewChangeEmail is inactive should display the update app banner" name="&lt;ChangeEmail/&gt; when FF disableOldChangeEmail is active and FF enableNewChangeEmail is inactive should display the update app banner" time="0.033">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; when FF disableOldChangeEmail is active and FF enableNewChangeEmail is inactive should disable the email input" name="&lt;ChangeEmail/&gt; when FF disableOldChangeEmail is active and FF enableNewChangeEmail is inactive should disable the email input" time="0.032">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; when FF disableOldChangeEmail is active and FF enableNewChangeEmail is inactive should disable the password input" name="&lt;ChangeEmail/&gt; when FF disableOldChangeEmail is active and FF enableNewChangeEmail is inactive should disable the password input" time="0.03">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; when FF disableOldChangeEmail is active and FF enableNewChangeEmail is inactive should disable the submit button when form is valid" name="&lt;ChangeEmail/&gt; when FF disableOldChangeEmail is active and FF enableNewChangeEmail is inactive should disable the submit button when form is valid" time="0.042">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; when FF enableNewChangeEmail is active and FF disableOldChangeEmail is disabled should display the change email label" name="&lt;ChangeEmail/&gt; when FF enableNewChangeEmail is active and FF disableOldChangeEmail is disabled should display the change email label" time="0.032">
    </testcase>
    <testcase classname="&lt;ChangeEmail/&gt; when FF enableNewChangeEmail is active and FF disableOldChangeEmail is disabled should display the email input" name="&lt;ChangeEmail/&gt; when FF enableNewChangeEmail is active and FF disableOldChangeEmail is disabled should display the email input" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OnGoingBookingsList /&gt; - Analytics" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:25" time="7.881" tests="6">
    <testcase classname="&lt;OnGoingBookingsList /&gt; - Analytics offline should allow pull to refetch when netInfo.isConnected &amp;&amp; netInfo.isInternetReachable" name="&lt;OnGoingBookingsList /&gt; - Analytics offline should allow pull to refetch when netInfo.isConnected &amp;&amp; netInfo.isInternetReachable" time="0.065">
    </testcase>
    <testcase classname="&lt;OnGoingBookingsList /&gt; - Analytics offline should show snack bar error when trying to pull to refetch with message &quot;Impossible de recharger tes réservations, connecte-toi à internet pour réessayer.&quot;" name="&lt;OnGoingBookingsList /&gt; - Analytics offline should show snack bar error when trying to pull to refetch with message &quot;Impossible de recharger tes réservations, connecte-toi à internet pour réessayer.&quot;" time="0.012">
    </testcase>
    <testcase classname="&lt;OnGoingBookingsList /&gt; - Analytics displays the placeholder when bookings are loading" name="&lt;OnGoingBookingsList /&gt; - Analytics displays the placeholder when bookings are loading" time="0.152">
    </testcase>
    <testcase classname="&lt;OnGoingBookingsList /&gt; - Analytics displays the placeholder when subcategories are loading" name="&lt;OnGoingBookingsList /&gt; - Analytics displays the placeholder when subcategories are loading" time="0.117">
    </testcase>
    <testcase classname="&lt;OnGoingBookingsList /&gt; - Analytics should trigger logEvent &quot;BookingsScrolledToBottom&quot; when reaching the end" name="&lt;OnGoingBookingsList /&gt; - Analytics should trigger logEvent &quot;BookingsScrolledToBottom&quot; when reaching the end" time="0.031">
    </testcase>
    <testcase classname="&lt;OnGoingBookingsList /&gt; - Analytics should trigger logEvent &quot;BookingsScrolledToBottom&quot; only once" name="&lt;OnGoingBookingsList /&gt; - Analytics should trigger logEvent &quot;BookingsScrolledToBottom&quot; only once" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ProfileTutorialAgeInformation /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:25" time="8.035" tests="13">
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should render correctly when logged in at 15" name="&lt;ProfileTutorialAgeInformation /&gt; should render correctly when logged in at 15" time="0.176">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display 16 timeline when logged in at 16" name="&lt;ProfileTutorialAgeInformation /&gt; should display 16 timeline when logged in at 16" time="0.07">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display 17 timeline when logged in at 17" name="&lt;ProfileTutorialAgeInformation /&gt; should display 17 timeline when logged in at 17" time="0.076">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display 18 timeline when logged in at 18" name="&lt;ProfileTutorialAgeInformation /&gt; should display 18 timeline when logged in at 18" time="0.041">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display that the user has activated credit at 15 when logged in at 16" name="&lt;ProfileTutorialAgeInformation /&gt; should display that the user has activated credit at 15 when logged in at 16" time="0.07">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display that the user couldn‘t have 15 credit if more than 15 years old" name="&lt;ProfileTutorialAgeInformation /&gt; should display that the user couldn‘t have 15 credit if more than 15 years old" time="0.053">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display that the user couldn‘t have 17 credit if more than 17 years old" name="&lt;ProfileTutorialAgeInformation /&gt; should display that the user couldn‘t have 17 credit if more than 17 years old" time="0.036">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display that the user couldn‘t have 15 or 16 credit if more than 16 years old" name="&lt;ProfileTutorialAgeInformation /&gt; should display that the user couldn‘t have 15 or 16 credit if more than 16 years old" time="0.042">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display not logged in version when user is not loggedIn" name="&lt;ProfileTutorialAgeInformation /&gt; should display not logged in version when user is not loggedIn" time="0.054">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should open questionnaire when pressing on &apos;Donner mon avis&apos;" name="&lt;ProfileTutorialAgeInformation /&gt; should open questionnaire when pressing on &apos;Donner mon avis&apos;" time="0.039">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should display verify eligibility when user is eligible" name="&lt;ProfileTutorialAgeInformation /&gt; should display verify eligibility when user is eligible" time="0.034">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should log to analytics when pressing &apos;Se connecter&apos;" name="&lt;ProfileTutorialAgeInformation /&gt; should log to analytics when pressing &apos;Se connecter&apos;" time="0.048">
    </testcase>
    <testcase classname="&lt;ProfileTutorialAgeInformation /&gt; should log to analytics when pressing &apos;Créer un compte&apos;" name="&lt;ProfileTutorialAgeInformation /&gt; should log to analytics when pressing &apos;Créer un compte&apos;" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DeeplinksGeneratorForm /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:25" time="8.119" tests="11">
    <testcase classname="&lt;DeeplinksGeneratorForm /&gt; should render deeplink generator form with marketing as default utm_gen" name="&lt;DeeplinksGeneratorForm /&gt; should render deeplink generator form with marketing as default utm_gen" time="0.258">
    </testcase>
    <testcase classname="&lt;DeeplinksGeneratorForm /&gt; should create url with utm params" name="&lt;DeeplinksGeneratorForm /&gt; should create url with utm params" time="0.188">
    </testcase>
    <testcase classname="&lt;DeeplinksGeneratorForm /&gt; should add showResults param when the user generate a search link" name="&lt;DeeplinksGeneratorForm /&gt; should add showResults param when the user generate a search link" time="0.184">
    </testcase>
    <testcase classname="&lt;DeeplinksGeneratorForm /&gt; should remove subcategory param when the user change the category and generate a search link" name="&lt;DeeplinksGeneratorForm /&gt; should remove subcategory param when the user change the category and generate a search link" time="0.281">
    </testcase>
    <testcase classname="getDefaultScreenParams should return an object with view, locationFilter, noFocus, from params when screen is Search" name="getDefaultScreenParams should return an object with view, locationFilter, noFocus, from params when screen is Search" time="0.003">
    </testcase>
    <testcase classname="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is Offer" name="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is Offer" time="0.005">
    </testcase>
    <testcase classname="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is Venue" name="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is Venue" time="0.003">
    </testcase>
    <testcase classname="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is Home" name="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is Home" time="0.001">
    </testcase>
    <testcase classname="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is Profile" name="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is Profile" time="0">
    </testcase>
    <testcase classname="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is SignupForm" name="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is SignupForm" time="0.001">
    </testcase>
    <testcase classname="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is ThematicHome" name="getDefaultScreenParams should return an object with from param set to &quot;deeplink&quot; when screen is ThematicHome" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Search/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:25" time="8.063" tests="12">
    <testcase classname="&lt;Search/&gt; should render SearchResults" name="&lt;Search/&gt; should render SearchResults" time="0.202">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should display offer suggestions" name="&lt;Search/&gt; When SearchResults is focus on suggestions should display offer suggestions" time="0.124">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should display venue suggestions" name="&lt;Search/&gt; When SearchResults is focus on suggestions should display venue suggestions" time="0.131">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should handle venue press" name="&lt;Search/&gt; When SearchResults is focus on suggestions should handle venue press" time="0.086">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should dismiss keyboard on scroll" name="&lt;Search/&gt; When SearchResults is focus on suggestions should dismiss keyboard on scroll" time="0.09">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should display search history when it has items" name="&lt;Search/&gt; When SearchResults is focus on suggestions should display search history when it has items" time="0.126">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should not display search history when it has not items" name="&lt;Search/&gt; When SearchResults is focus on suggestions should not display search history when it has not items" time="0.035">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should dismiss the keyboard when pressing search history item" name="&lt;Search/&gt; When SearchResults is focus on suggestions should dismiss the keyboard when pressing search history item" time="0.075">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should update state and execute the search with the history item When it has not category and native category" name="&lt;Search/&gt; When SearchResults is focus on suggestions should update state and execute the search with the history item When it has not category and native category" time="0.078">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should update state and execute the search with the history item When it has category and native category" name="&lt;Search/&gt; When SearchResults is focus on suggestions should update state and execute the search with the history item When it has category and native category" time="0.092">
    </testcase>
    <testcase classname="&lt;Search/&gt; When SearchResults is focus on suggestions should update state and execute the search with the history item When it has only a category" name="&lt;Search/&gt; When SearchResults is focus on suggestions should update state and execute the search with the history item When it has only a category" time="0.059">
    </testcase>
    <testcase classname="&lt;Search/&gt; When offline should display offline page" name="&lt;Search/&gt; When offline should display offline page" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="&lt;StepDots /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:32" time="1.825" tests="8">
    <testcase classname="&lt;StepDots /&gt; three steps with first as current step should render first step properly" name="&lt;StepDots /&gt; three steps with first as current step should render first step properly" time="0.293">
    </testcase>
    <testcase classname="&lt;StepDots /&gt; three steps with first as current step should render second and third steps properly" name="&lt;StepDots /&gt; three steps with first as current step should render second and third steps properly" time="0.005">
    </testcase>
    <testcase classname="&lt;StepDots /&gt; three steps with second as current step should render first step properly" name="&lt;StepDots /&gt; three steps with second as current step should render first step properly" time="0.011">
    </testcase>
    <testcase classname="&lt;StepDots /&gt; three steps with second as current step should render second step properly" name="&lt;StepDots /&gt; three steps with second as current step should render second step properly" time="0.013">
    </testcase>
    <testcase classname="&lt;StepDots /&gt; three steps with second as current step should render third step properly" name="&lt;StepDots /&gt; three steps with second as current step should render third step properly" time="0.025">
    </testcase>
    <testcase classname="&lt;StepDots /&gt; three steps with last as current step should render first and second steps properly" name="&lt;StepDots /&gt; three steps with last as current step should render first and second steps properly" time="0.004">
    </testcase>
    <testcase classname="&lt;StepDots /&gt; three steps with last as current step should render second and third steps properly" name="&lt;StepDots /&gt; three steps with last as current step should render second and third steps properly" time="0.004">
    </testcase>
    <testcase classname="&lt;StepDots /&gt; three steps with first and second with neutral color should render first and second steps properly" name="&lt;StepDots /&gt; three steps with first and second with neutral color should render first and second steps properly" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ExclusivityExternalLink component" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:34" time="2.789" tests="2">
    <testcase classname="ExclusivityExternalLink component should trigger logEvent &quot;ModuleDisplayedOnHomepage&quot; on render" name="ExclusivityExternalLink component should trigger logEvent &quot;ModuleDisplayedOnHomepage&quot; on render" time="0.042">
    </testcase>
    <testcase classname="ExclusivityExternalLink component should open url when clicking on the component" name="ExclusivityExternalLink component should open url when clicking on the component" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="VideoModule" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:34" time="3.122" tests="6">
    <testcase classname="VideoModule should show modal when pressing video thumbnail" name="VideoModule should show modal when pressing video thumbnail" time="0.271">
    </testcase>
    <testcase classname="VideoModule should log ModuleDisplayedOnHomePage event when seeing the module" name="VideoModule should log ModuleDisplayedOnHomePage event when seeing the module" time="0.045">
    </testcase>
    <testcase classname="VideoModule should not log ModuleDisplayedOnHomePage event when module is not rendered" name="VideoModule should not log ModuleDisplayedOnHomePage event when module is not rendered" time="0.005">
    </testcase>
    <testcase classname="VideoModule should render multi offer component if multiples offers" name="VideoModule should render multi offer component if multiples offers" time="0.066">
    </testcase>
    <testcase classname="VideoModule should render mobile design if mobile viewport" name="VideoModule should render mobile design if mobile viewport" time="0.045">
    </testcase>
    <testcase classname="VideoModule should render desktop design if desktop viewport" name="VideoModule should render desktop design if desktop viewport" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OfferBookingButton /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:34" time="2.909" tests="6">
    <testcase classname="&lt;OfferBookingButton /&gt; should display the correct wording &quot;Réserver l’offre&quot;" name="&lt;OfferBookingButton /&gt; should display the correct wording &quot;Réserver l’offre&quot;" time="0.054">
    </testcase>
    <testcase classname="&lt;OfferBookingButton /&gt; should display the blurry style" name="&lt;OfferBookingButton /&gt; should display the blurry style" time="0.013">
    </testcase>
    <testcase classname="&lt;OfferBookingButton /&gt; should display the bottom banner text" name="&lt;OfferBookingButton /&gt; should display the bottom banner text" time="0.007">
    </testcase>
    <testcase classname="&lt;OfferBookingButton /&gt; should display the button disabled" name="&lt;OfferBookingButton /&gt; should display the button disabled" time="0.009">
    </testcase>
    <testcase classname="&lt;OfferBookingButton /&gt; shouldn&apos;t return the button when it hasn&apos;t wording" name="&lt;OfferBookingButton /&gt; shouldn&apos;t return the button when it hasn&apos;t wording" time="0.002">
    </testcase>
    <testcase classname="&lt;OfferBookingButton /&gt; shouldn&apos;t return the bottom banner when it is undefined" name="&lt;OfferBookingButton /&gt; shouldn&apos;t return the bottom banner when it is undefined" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="&lt;FraudulentSuspendedAccount /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:32" time="4.758" tests="2">
    <testcase classname="&lt;FraudulentSuspendedAccount /&gt; should match snapshot" name="&lt;FraudulentSuspendedAccount /&gt; should match snapshot" time="0.083">
    </testcase>
    <testcase classname="&lt;FraudulentSuspendedAccount /&gt; should log analytics when clicking on &quot;Contacter le service fraude&quot; button" name="&lt;FraudulentSuspendedAccount /&gt; should log analytics when clicking on &quot;Contacter le service fraude&quot; button" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Accessibility" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:34" time="3.151" tests="5">
    <testcase classname="Accessibility should render correctly" name="Accessibility should render correctly" time="0.034">
    </testcase>
    <testcase classname="Accessibility should navigate to AccessibilityActionPlan when Schéma pluriannuel is clicked" name="Accessibility should navigate to AccessibilityActionPlan when Schéma pluriannuel is clicked" time="0.036">
    </testcase>
    <testcase classname="Accessibility should navigate to AccessibilityDeclaration when Déclaration d’accessibilité is clicked" name="Accessibility should navigate to AccessibilityDeclaration when Déclaration d’accessibilité is clicked" time="0.012">
    </testcase>
    <testcase classname="Accessibility should navigate to AccessibilityEngagement when Les engagements du pass Culture is clicked" name="Accessibility should navigate to AccessibilityEngagement when Les engagements du pass Culture is clicked" time="0.022">
    </testcase>
    <testcase classname="Accessibility should navigate to RecommendedPaths when Parcours recommandés is clicked" name="Accessibility should navigate to RecommendedPaths when Parcours recommandés is clicked" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="TabBar" errors="0" failures="0" skipped="1" timestamp="2024-03-27T08:58:38" time="2.623" tests="10">
    <testcase classname="TabBar render correctly" name="TabBar render correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="TabBar should display the 5 following tabs with Home selected" name="TabBar should display the 5 following tabs with Home selected" time="0.094">
    </testcase>
    <testcase classname="TabBar should display the 5 following tabs with Bookings selected" name="TabBar should display the 5 following tabs with Bookings selected" time="0.034">
    </testcase>
    <testcase classname="TabBar displays only one selected at a time" name="TabBar displays only one selected at a time" time="0.019">
    </testcase>
    <testcase classname="TabBar should navigate again to Profil tab on click Profil tab icon when Profil tab is already selected" name="TabBar should navigate again to Profil tab on click Profil tab icon when Profil tab is already selected" time="0.021">
    </testcase>
    <testcase classname="TabBar should navigate again to Home tab on click Home tab icon when Home tab is already selected" name="TabBar should navigate again to Home tab on click Home tab icon when Home tab is already selected" time="0.014">
    </testcase>
    <testcase classname="TabBar should reset Search navigation params when clicked on selected Search tab" name="TabBar should reset Search navigation params when clicked on selected Search tab" time="0.023">
    </testcase>
    <testcase classname="TabBar should reset Search accessibility navigation params when clicked on selected Search tab" name="TabBar should reset Search accessibility navigation params when clicked on selected Search tab" time="0.02">
    </testcase>
    <testcase classname="TabBar navigates to Profile on Profile tab click" name="TabBar navigates to Profile on Profile tab click" time="0.021">
    </testcase>
    <testcase classname="TabBar should call navigate with searchState params on press &quot;Recherche&quot;" name="TabBar should call navigate with searchState params on press &quot;Recherche&quot;" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SetStatus/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:38" time="3.182" tests="4">
    <testcase classname="&lt;SetStatus/&gt; should render correctly" name="&lt;SetStatus/&gt; should render correctly" time="0.227">
    </testcase>
    <testcase classname="&lt;SetStatus/&gt; should navigate to stepper on press &quot;Continuer&quot;" name="&lt;SetStatus/&gt; should navigate to stepper on press &quot;Continuer&quot;" time="0.276">
    </testcase>
    <testcase classname="&lt;SetStatus/&gt; should log screen view when the screen is mounted" name="&lt;SetStatus/&gt; should log screen view when the screen is mounted" time="0.046">
    </testcase>
    <testcase classname="&lt;SetStatus/&gt; should log analytics on press Continuer" name="&lt;SetStatus/&gt; should log analytics on press Continuer" time="0.219">
    </testcase>
  </testsuite>
  <testsuite name="DMSIntroduction" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:34" time="6.359" tests="7">
    <testcase classname="DMSIntroduction should log screen view when the screen is mounted" name="DMSIntroduction should log screen view when the screen is mounted" time="0.065">
    </testcase>
    <testcase classname="DMSIntroduction french version should render correctly" name="DMSIntroduction french version should render correctly" time="0.036">
    </testcase>
    <testcase classname="DMSIntroduction french version should open french dms link when pressing &quot;Aller sur demarches-simplifiees.fr&quot; button" name="DMSIntroduction french version should open french dms link when pressing &quot;Aller sur demarches-simplifiees.fr&quot; button" time="0.073">
    </testcase>
    <testcase classname="DMSIntroduction french version should log french DMS event when pressing &quot;Aller sur demarches-simplifiees.fr&quot; button" name="DMSIntroduction french version should log french DMS event when pressing &quot;Aller sur demarches-simplifiees.fr&quot; button" time="0.018">
    </testcase>
    <testcase classname="DMSIntroduction foreign version should render correctly" name="DMSIntroduction foreign version should render correctly" time="0.043">
    </testcase>
    <testcase classname="DMSIntroduction foreign version should open foreign dms link when pressing &quot;Aller sur demarches-simplifiees.fr&quot; button" name="DMSIntroduction foreign version should open foreign dms link when pressing &quot;Aller sur demarches-simplifiees.fr&quot; button" time="0.067">
    </testcase>
    <testcase classname="DMSIntroduction foreign version should log foreign DMS event when pressing &quot;Aller sur demarches-simplifiees.fr&quot; button" name="DMSIntroduction foreign version should log foreign DMS event when pressing &quot;Aller sur demarches-simplifiees.fr&quot; button" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="&lt;TicketWithContent/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:37" time="4.351" tests="1">
    <testcase classname="&lt;TicketWithContent/&gt; should render properly" name="&lt;TicketWithContent/&gt; should render properly" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AccessibilityFiltersModal /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:38" time="4.303" tests="5">
    <testcase classname="&lt;AccessibilityFiltersModal /&gt; should render modal correctly" name="&lt;AccessibilityFiltersModal /&gt; should render modal correctly" time="0.461">
    </testcase>
    <testcase classname="&lt;AccessibilityFiltersModal /&gt; should save selected disabilities when search button is pressed" name="&lt;AccessibilityFiltersModal /&gt; should save selected disabilities when search button is pressed" time="0.43">
    </testcase>
    <testcase classname="&lt;AccessibilityFiltersModal /&gt; should not save modified disabilities when pressing close button" name="&lt;AccessibilityFiltersModal /&gt; should not save modified disabilities when pressing close button" time="0.389">
    </testcase>
    <testcase classname="&lt;AccessibilityFiltersModal /&gt; should reset filter when reset button and search button are pressed" name="&lt;AccessibilityFiltersModal /&gt; should reset filter when reset button and search button are pressed" time="0.394">
    </testcase>
    <testcase classname="&lt;AccessibilityFiltersModal /&gt; should not reset filter when reset button is pressed and user closes modal" name="&lt;AccessibilityFiltersModal /&gt; should not reset filter when reset button is pressed and user closes modal" time="0.375">
    </testcase>
  </testsuite>
  <testsuite name="getDatesFromTimeRangeAndDate" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:42" time="1.345" tests="7">
    <testcase classname="getDatesFromTimeRangeAndDate utc should return dates with beginning and ending times for given date and timerange" name="getDatesFromTimeRangeAndDate utc should return dates with beginning and ending times for given date and timerange" time="0.008">
    </testcase>
    <testcase classname="getDatesFromTimeRangeAndDate utc should return dates with beginning and ending times for given date and timerange with extreme values" name="getDatesFromTimeRangeAndDate utc should return dates with beginning and ending times for given date and timerange with extreme values" time="0.004">
    </testcase>
    <testcase classname="getWeekDatesFromDate should return dates of the week for a given date" name="getWeekDatesFromDate should return dates of the week for a given date" time="0.004">
    </testcase>
    <testcase classname="getWeekDatesFromDate should return dates of the week for a given date when in the middle of the week" name="getWeekDatesFromDate should return dates of the week for a given date when in the middle of the week" time="0.002">
    </testcase>
    <testcase classname="getWeekDatesFromDate should return date of the week for a given date when date is sunday" name="getWeekDatesFromDate should return date of the week for a given date when date is sunday" time="0.005">
    </testcase>
    <testcase classname="getWeekEndDatesFromDate should return dates of the week end for a given date" name="getWeekEndDatesFromDate should return dates of the week end for a given date" time="0.001">
    </testcase>
    <testcase classname="getWeekEndDatesFromDate should return date of the week end for a given date when date is sunday" name="getWeekEndDatesFromDate should return date of the week end for a given date when date is sunday" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Offer /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:38" time="5.165" tests="6">
    <testcase classname="&lt;Offer /&gt; should not display offer container when offer is not found and subcategories loaded" name="&lt;Offer /&gt; should not display offer container when offer is not found and subcategories loaded" time="0.201">
    </testcase>
    <testcase classname="&lt;Offer /&gt; should not display offer container when subcategories not loaded and offer loaded" name="&lt;Offer /&gt; should not display offer container when subcategories not loaded and offer loaded" time="0.07">
    </testcase>
    <testcase classname="&lt;Offer /&gt; should not display offer container when subcategories and offer not loaded" name="&lt;Offer /&gt; should not display offer container when subcategories and offer not loaded" time="0.029">
    </testcase>
    <testcase classname="&lt;Offer /&gt; should display offer container when subcategories and offer loaded" name="&lt;Offer /&gt; should display offer container when subcategories and offer loaded" time="0.41">
    </testcase>
    <testcase classname="&lt;Offer /&gt; should display subcategory tag" name="&lt;Offer /&gt; should display subcategory tag" time="0.207">
    </testcase>
    <testcase classname="&lt;Offer /&gt; should display offer placeholder on init" name="&lt;Offer /&gt; should display offer placeholder on init" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="hourSchema" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:41" time="2.118" tests="27">
    <testcase classname="hourSchema hourSchema should fail when value (25) is not a valid hour" name="hourSchema hourSchema should fail when value (25) is not a valid hour" time="0.015">
    </testcase>
    <testcase classname="hourSchema hourSchema should fail when value (-1) is not a valid hour" name="hourSchema hourSchema should fail when value (-1) is not a valid hour" time="0.002">
    </testcase>
    <testcase classname="hourSchema hourSchema should fail when value (8) is not a valid hour" name="hourSchema hourSchema should fail when value (8) is not a valid hour" time="0.005">
    </testcase>
    <testcase classname="hourSchema hourSchema should fail when value (null) is not a valid hour" name="hourSchema hourSchema should fail when value (null) is not a valid hour" time="0.005">
    </testcase>
    <testcase classname="hourSchema hourSchema should fail when value (undefined) is not a valid hour" name="hourSchema hourSchema should fail when value (undefined) is not a valid hour" time="0.003">
    </testcase>
    <testcase classname="hourSchema hourSchema should fail when value (false) is not a valid hour" name="hourSchema hourSchema should fail when value (false) is not a valid hour" time="0.001">
    </testcase>
    <testcase classname="hourSchema hourSchema should validate when value ($value) is a valid hour" name="hourSchema hourSchema should validate when value ($value) is a valid hour" time="0.003">
    </testcase>
    <testcase classname="hourSchema hourSchema should validate when value ($value) is a valid hour" name="hourSchema hourSchema should validate when value ($value) is a valid hour" time="0.001">
    </testcase>
    <testcase classname="hourSchema hourSchema should validate when value ($value) is a valid hour" name="hourSchema hourSchema should validate when value ($value) is a valid hour" time="0.002">
    </testcase>
    <testcase classname="hourSchema hourSchema should validate when value ($value) is a valid hour" name="hourSchema hourSchema should validate when value ($value) is a valid hour" time="0.002">
    </testcase>
    <testcase classname="hourSchema hourSchema should validate when value ($value) is a valid hour" name="hourSchema hourSchema should validate when value ($value) is a valid hour" time="0.001">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should fail when value (undefined) is not an array of two valid hours" name="hoursSchema hoursSchema should fail when value (undefined) is not an array of two valid hours" time="0.003">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should fail when value (8) is not an array of two valid hours" name="hoursSchema hoursSchema should fail when value (8) is not an array of two valid hours" time="0.004">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should fail when value (2) is not an array of two valid hours" name="hoursSchema hoursSchema should fail when value (2) is not an array of two valid hours" time="0.004">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should fail when we have 1 value" name="hoursSchema hoursSchema should fail when we have 1 value" time="0.001">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should fail when we have 3 value" name="hoursSchema hoursSchema should fail when we have 3 value" time="0.001">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should validate when value ($value) is an array of two valid hours" name="hoursSchema hoursSchema should validate when value ($value) is an array of two valid hours" time="0.001">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should validate when value ($value) is an array of two valid hours" name="hoursSchema hoursSchema should validate when value ($value) is an array of two valid hours" time="0.002">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should validate when value ($value) is an array of two valid hours" name="hoursSchema hoursSchema should validate when value ($value) is an array of two valid hours" time="0.002">
    </testcase>
    <testcase classname="hoursSchema hoursSchema should validate when value ($value) is an array of two valid hours" name="hoursSchema hoursSchema should validate when value ($value) is an array of two valid hours" time="0.001">
    </testcase>
    <testcase classname="datesHoursSchema should fail when hasSelectedChoice is true and selectedDateChoice defined without selectedDate" name="datesHoursSchema should fail when hasSelectedChoice is true and selectedDateChoice defined without selectedDate" time="0.005">
    </testcase>
    <testcase classname="datesHoursSchema should fail when hasSelectedChoice is true and selectedDate defined without selectedDateChoice" name="datesHoursSchema should fail when hasSelectedChoice is true and selectedDate defined without selectedDateChoice" time="0.002">
    </testcase>
    <testcase classname="datesHoursSchema should fail when hasSelectedHours is true without selectedHours" name="datesHoursSchema should fail when hasSelectedHours is true without selectedHours" time="0.002">
    </testcase>
    <testcase classname="datesHoursSchema should validate without any value" name="datesHoursSchema should validate without any value" time="0.001">
    </testcase>
    <testcase classname="datesHoursSchema should validate when hasSelectedDate is true with selectedDateChoice and selectedDate" name="datesHoursSchema should validate when hasSelectedDate is true with selectedDateChoice and selectedDate" time="0.026">
    </testcase>
    <testcase classname="datesHoursSchema should validate when hasSelectedHours is true with selectedHours" name="datesHoursSchema should validate when hasSelectedHours is true with selectedHours" time="0.004">
    </testcase>
    <testcase classname="datesHoursSchema should validate when hasSelectedDate is true with selectedDateChoice and selectedDate and hasSelectedHours is true with selectedHours" name="datesHoursSchema should validate when hasSelectedDate is true with selectedDateChoice and selectedDate and hasSelectedHours is true with selectedHours" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;IdentificationFork /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:41" time="4.661" tests="7">
    <testcase classname="&lt;IdentificationFork /&gt; should render correctly" name="&lt;IdentificationFork /&gt; should render correctly" time="0.09">
    </testcase>
    <testcase classname="&lt;IdentificationFork /&gt; should navigate to next screen &quot;SelectIDOrigin&quot; on press &quot;Ma pièce d’identité&quot;" name="&lt;IdentificationFork /&gt; should navigate to next screen &quot;SelectIDOrigin&quot; on press &quot;Ma pièce d’identité&quot;" time="0.101">
    </testcase>
    <testcase classname="&lt;IdentificationFork /&gt; should navigate to next screen &quot;EduConnectForm&quot; on press &quot;Mes codes ÉduConnect&quot;" name="&lt;IdentificationFork /&gt; should navigate to next screen &quot;EduConnectForm&quot; on press &quot;Mes codes ÉduConnect&quot;" time="0.084">
    </testcase>
    <testcase classname="&lt;IdentificationFork /&gt; should log screen view when the screen is mounted" name="&lt;IdentificationFork /&gt; should log screen view when the screen is mounted" time="0.055">
    </testcase>
    <testcase classname="&lt;IdentificationFork /&gt; should log analytics on press &quot;Ma pièce d’identité&quot;" name="&lt;IdentificationFork /&gt; should log analytics on press &quot;Ma pièce d’identité&quot;" time="0.032">
    </testcase>
    <testcase classname="&lt;IdentificationFork /&gt; should log analytics on press &quot;Mes codes ÉduConnect&quot;" name="&lt;IdentificationFork /&gt; should log analytics on press &quot;Mes codes ÉduConnect&quot;" time="0.032">
    </testcase>
    <testcase classname="&lt;IdentificationFork /&gt; should open data privacy chart when pressing link" name="&lt;IdentificationFork /&gt; should open data privacy chart when pressing link" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="PhoneValidationTooManySMSSent" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:44" time="2.432" tests="4">
    <testcase classname="PhoneValidationTooManySMSSent should display &quot;1 heure&quot; in description" name="PhoneValidationTooManySMSSent should display &quot;1 heure&quot; in description" time="0.136">
    </testcase>
    <testcase classname="PhoneValidationTooManySMSSent should display &quot;2 heures&quot; in description" name="PhoneValidationTooManySMSSent should display &quot;2 heures&quot; in description" time="0.012">
    </testcase>
    <testcase classname="PhoneValidationTooManySMSSent should redirect to Home when clicking on homepage button" name="PhoneValidationTooManySMSSent should redirect to Home when clicking on homepage button" time="0.05">
    </testcase>
    <testcase classname="PhoneValidationTooManySMSSent should redirect to SetPhoneValidationCode when clicking on second button" name="PhoneValidationTooManySMSSent should redirect to SetPhoneValidationCode when clicking on second button" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="&lt;BookingConfirmation /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:41" time="4.312" tests="9">
    <testcase classname="&lt;BookingConfirmation /&gt; should render correctly" name="&lt;BookingConfirmation /&gt; should render correctly" time="0.104">
    </testcase>
    <testcase classname="&lt;BookingConfirmation /&gt; InAppReview should call InAppReview Modal after 3 seconds if isAvailable and rules are respected" name="&lt;BookingConfirmation /&gt; InAppReview should call InAppReview Modal after 3 seconds if isAvailable and rules are respected" time="0.019">
    </testcase>
    <testcase classname="&lt;BookingConfirmation /&gt; InAppReview should not call InAppReview Modal if isAvailable is false" name="&lt;BookingConfirmation /&gt; InAppReview should not call InAppReview Modal if isAvailable is false" time="0.035">
    </testcase>
    <testcase classname="&lt;BookingConfirmation /&gt; InAppReview should not call InAppReview Modal if isAvailable is true and rules are not respected" name="&lt;BookingConfirmation /&gt; InAppReview should not call InAppReview Modal if isAvailable is true and rules are not respected" time="0.014">
    </testcase>
    <testcase classname="&lt;BookingConfirmation /&gt; buttons should call display share when press share button" name="&lt;BookingConfirmation /&gt; buttons should call display share when press share button" time="0.063">
    </testcase>
    <testcase classname="&lt;BookingConfirmation /&gt; buttons should log analytics when press share button" name="&lt;BookingConfirmation /&gt; buttons should log analytics when press share button" time="0.06">
    </testcase>
    <testcase classname="&lt;BookingConfirmation /&gt; buttons should go to Bookings and log analytics event" name="&lt;BookingConfirmation /&gt; buttons should go to Bookings and log analytics event" time="0.018">
    </testcase>
    <testcase classname="&lt;BookingConfirmation /&gt; buttons should track Batch event when button is clicked" name="&lt;BookingConfirmation /&gt; buttons should track Batch event when button is clicked" time="0.021">
    </testcase>
    <testcase classname="&lt;BookingConfirmation /&gt; buttons should track Batch event when button is clicked" name="&lt;BookingConfirmation /&gt; buttons should track Batch event when button is clicked" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="BookingOfferModalFooter" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:44" time="2.14" tests="18">
    <testcase classname="BookingOfferModalFooter when current step is date selection should display &quot;Valider la date&quot;" name="BookingOfferModalFooter when current step is date selection should display &quot;Valider la date&quot;" time="0.079">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is date selection should not change step when date not selected" name="BookingOfferModalFooter when current step is date selection should not change step when date not selected" time="0.005">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is date selection should change step to hour selection when date selected" name="BookingOfferModalFooter when current step is date selection should change step to hour selection when date selected" time="0.073">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is date selection should reset potential previous hour when date selected" name="BookingOfferModalFooter when current step is date selection should reset potential previous hour when date selected" time="0.028">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is hour selection should display &quot;Valider lʼhoraire&quot;" name="BookingOfferModalFooter when current step is hour selection should display &quot;Valider lʼhoraire&quot;" time="0.013">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is hour selection should not change step when hour not selected" name="BookingOfferModalFooter when current step is hour selection should not change step when hour not selected" time="0.006">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is hour selection should change step to price selection when hour selected and has several prices" name="BookingOfferModalFooter when current step is hour selection should change step to price selection when hour selected and has several prices" time="0.004">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is hour selection should reset stock selection when hour selected and has several prices" name="BookingOfferModalFooter when current step is hour selection should reset stock selection when hour selected and has several prices" time="0.005">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is hour selection should change step to quantity selection when hour selected, has not several prices and offer is duo" name="BookingOfferModalFooter when current step is hour selection should change step to quantity selection when hour selected, has not several prices and offer is duo" time="0.01">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is hour selection should change step to confirmation when hour selected, has not several prices and offer is not duo" name="BookingOfferModalFooter when current step is hour selection should change step to confirmation when hour selected, has not several prices and offer is not duo" time="0.007">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is price selection should display &quot;Valider le prix&quot;" name="BookingOfferModalFooter when current step is price selection should display &quot;Valider le prix&quot;" time="0.004">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is price selection should not change step when stock not selected" name="BookingOfferModalFooter when current step is price selection should not change step when stock not selected" time="0.005">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is price selection should change step to quantity selection when stock selected and offer is duo" name="BookingOfferModalFooter when current step is price selection should change step to quantity selection when stock selected and offer is duo" time="0.043">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is price selection should change step to confirmation when stock selected and offer is not duo" name="BookingOfferModalFooter when current step is price selection should change step to confirmation when stock selected and offer is not duo" time="0.005">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is quantity selection should display &quot;Finaliser ma réservation&quot;" name="BookingOfferModalFooter when current step is quantity selection should display &quot;Finaliser ma réservation&quot;" time="0.004">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is quantity selection should not change step when quantity not selected" name="BookingOfferModalFooter when current step is quantity selection should not change step when quantity not selected" time="0.004">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is quantity selection should change step to confirmation when quantity selected" name="BookingOfferModalFooter when current step is quantity selection should change step to confirmation when quantity selected" time="0.004">
    </testcase>
    <testcase classname="BookingOfferModalFooter when current step is confirmation should not display footer" name="BookingOfferModalFooter when current step is confirmation should not display footer" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Favorites/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:42" time="5.148" tests="3">
    <testcase classname="&lt;Favorites/&gt; should render correctly" name="&lt;Favorites/&gt; should render correctly" time="0.376">
    </testcase>
    <testcase classname="&lt;Favorites/&gt; should show non connected page when not logged in" name="&lt;Favorites/&gt; should show non connected page when not logged in" time="0.06">
    </testcase>
    <testcase classname="&lt;Favorites/&gt; should render offline page when not connected" name="&lt;Favorites/&gt; should render offline page when not connected" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="getCategoriesFacetFilters" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:46" time="1.807" tests="2">
    <testcase classname="getCategoriesFacetFilters should return none search group when category label is not in Contentful labels" name="getCategoriesFacetFilters should return none search group when category label is not in Contentful labels" time="0.005">
    </testcase>
    <testcase classname="getCategoriesFacetFilters should return the search group when category label is in Contentful labels" name="getCategoriesFacetFilters should return the search group when category label is in Contentful labels" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PageNotFound/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:44" time="4.121" tests="1">
    <testcase classname="&lt;PageNotFound/&gt; should render correctly" name="&lt;PageNotFound/&gt; should render correctly" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="DeleteProfileSuccess component" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:46" time="3.198" tests="4">
    <testcase classname="DeleteProfileSuccess component should render delete profile success" name="DeleteProfileSuccess component should render delete profile success" time="0.107">
    </testcase>
    <testcase classname="DeleteProfileSuccess component should log out user" name="DeleteProfileSuccess component should log out user" time="0.013">
    </testcase>
    <testcase classname="DeleteProfileSuccess component should redirect to Home page when clicking on &quot;Retourner à l’accueil&quot; button" name="DeleteProfileSuccess component should redirect to Home page when clicking on &quot;Retourner à l’accueil&quot; button" time="0.029">
    </testcase>
    <testcase classname="DeleteProfileSuccess component should log analytics and  redirect to Login page when clicking on &quot;Réactiver mon compte&quot; button" name="DeleteProfileSuccess component should log analytics and  redirect to Login page when clicking on &quot;Réactiver mon compte&quot; button" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="MonitoringError" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:46" time="4.354" tests="11">
    <testcase classname="MonitoringError should call eventMonitoring.captureException() on new MonitoringError instance" name="MonitoringError should call eventMonitoring.captureException() on new MonitoringError instance" time="0.008">
    </testcase>
    <testcase classname="MonitoringError should rename MonitoringError to RenamedError" name="MonitoringError should rename MonitoringError to RenamedError" time="0.016">
    </testcase>
    <testcase classname="MonitoringError should pass captureContext to MonitoringError as a 2nd argument" name="MonitoringError should pass captureContext to MonitoringError as a 2nd argument" time="0.002">
    </testcase>
    <testcase classname="MonitoringError should pass captureContext to RenamedError as a last argument" name="MonitoringError should pass captureContext to RenamedError as a last argument" time="0.001">
    </testcase>
    <testcase classname="MonitoringError should captureMessage as info on new MonitoringError instance when shouldBeCapturedAsInfo is true" name="MonitoringError should captureMessage as info on new MonitoringError instance when shouldBeCapturedAsInfo is true" time="0.004">
    </testcase>
    <testcase classname="MonitoringError should not captureMessage as info on new MonitoringError instance when shouldBeCapturedAsInfo is false" name="MonitoringError should not captureMessage as info on new MonitoringError instance when shouldBeCapturedAsInfo is false" time="0.002">
    </testcase>
    <testcase classname="MonitoringError should not captureMessage as info on new MonitoringError instance when shouldBeCapturedAsInfo is undefined" name="MonitoringError should not captureMessage as info on new MonitoringError instance when shouldBeCapturedAsInfo is undefined" time="0.001">
    </testcase>
    <testcase classname="OfferNotFoundError should return message with offer id when it defined" name="OfferNotFoundError should return message with offer id when it defined" time="0.003">
    </testcase>
    <testcase classname="OfferNotFoundError should return message without offer id when it undefined" name="OfferNotFoundError should return message without offer id when it undefined" time="0.001">
    </testcase>
    <testcase classname="VenueNotFoundError should return message with offer id when it defined" name="VenueNotFoundError should return message with offer id when it defined" time="0.001">
    </testcase>
    <testcase classname="VenueNotFoundError should return message without offer id when it undefined" name="VenueNotFoundError should return message without offer id when it undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;CollapsibleText /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:46" time="4.544" tests="8">
    <testcase classname="&lt;CollapsibleText /&gt; should not display all text" name="&lt;CollapsibleText /&gt; should not display all text" time="0.032">
    </testcase>
    <testcase classname="&lt;CollapsibleText /&gt; should display Voir plus button when the text ends with an ellipsis (onLayout, then onTextLayout)" name="&lt;CollapsibleText /&gt; should display Voir plus button when the text ends with an ellipsis (onLayout, then onTextLayout)" time="0.024">
    </testcase>
    <testcase classname="&lt;CollapsibleText /&gt; should display Voir plus button when the text ends with an ellipsis (onTextLayout, then onLayout)" name="&lt;CollapsibleText /&gt; should display Voir plus button when the text ends with an ellipsis (onTextLayout, then onLayout)" time="0.013">
    </testcase>
    <testcase classname="&lt;CollapsibleText /&gt; should not display Voir plus button when the last line is not filled" name="&lt;CollapsibleText /&gt; should not display Voir plus button when the last line is not filled" time="0.011">
    </testcase>
    <testcase classname="&lt;CollapsibleText /&gt; should use Étendre le texte in button accessibility label" name="&lt;CollapsibleText /&gt; should use Étendre le texte in button accessibility label" time="0.013">
    </testcase>
    <testcase classname="&lt;CollapsibleText /&gt; should display Voir moins on button text when pressing it" name="&lt;CollapsibleText /&gt; should display Voir moins on button text when pressing it" time="0.026">
    </testcase>
    <testcase classname="&lt;CollapsibleText /&gt; should display all text when pressing button" name="&lt;CollapsibleText /&gt; should display all text when pressing button" time="0.023">
    </testcase>
    <testcase classname="&lt;CollapsibleText /&gt; should use Réduire le texte in button accessibility label when pressing button" name="&lt;CollapsibleText /&gt; should use Réduire le texte in button accessibility label when pressing button" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="NotConnectedFavorites component" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:49" time="2.899" tests="3">
    <testcase classname="NotConnectedFavorites component should render not connected favorites" name="NotConnectedFavorites component should render not connected favorites" time="0.061">
    </testcase>
    <testcase classname="NotConnectedFavorites component should navigate to SignupForm on button click and log analytics" name="NotConnectedFavorites component should navigate to SignupForm on button click and log analytics" time="0.102">
    </testcase>
    <testcase classname="NotConnectedFavorites component should navigate to Login on button click log analytics" name="NotConnectedFavorites component should navigate to Login on button click log analytics" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="formatSecondsToString" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:50" time="1.812" tests="8">
    <testcase classname="formatSecondsToString should display withdrawal wording In minutes" name="formatSecondsToString should display withdrawal wording In minutes" time="0.003">
    </testcase>
    <testcase classname="formatSecondsToString should display withdrawal wording In minutes" name="formatSecondsToString should display withdrawal wording In minutes" time="0.002">
    </testcase>
    <testcase classname="formatSecondsToString should display withdrawal wording In hour" name="formatSecondsToString should display withdrawal wording In hour" time="0.002">
    </testcase>
    <testcase classname="formatSecondsToString should display withdrawal wording In hours" name="formatSecondsToString should display withdrawal wording In hours" time="0.002">
    </testcase>
    <testcase classname="formatSecondsToString should display withdrawal wording In hours" name="formatSecondsToString should display withdrawal wording In hours" time="0.002">
    </testcase>
    <testcase classname="formatSecondsToString should display withdrawal wording In days" name="formatSecondsToString should display withdrawal wording In days" time="0.002">
    </testcase>
    <testcase classname="formatSecondsToString should display withdrawal wording In days" name="formatSecondsToString should display withdrawal wording In days" time="0.003">
    </testcase>
    <testcase classname="formatSecondsToString should display withdrawal wording In week" name="formatSecondsToString should display withdrawal wording In week" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SuspendAccountConfirmation /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:49" time="3.591" tests="9">
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should navigate to home When there is no email change" name="&lt;SuspendAccountConfirmation /&gt; should navigate to home When there is no email change" time="0.052">
    </testcase>
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should navigate to home When pressing &quot;Ne pas suspendre mon compte&quot; button" name="&lt;SuspendAccountConfirmation /&gt; should navigate to home When pressing &quot;Ne pas suspendre mon compte&quot; button" time="0.013">
    </testcase>
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should navigate to home When pressing &quot;Oui, suspendre mon compte&quot; button and API response is error and is not a 401 error" name="&lt;SuspendAccountConfirmation /&gt; should navigate to home When pressing &quot;Oui, suspendre mon compte&quot; button and API response is error and is not a 401 error" time="0.045">
    </testcase>
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should display message and buttons when there is current email change" name="&lt;SuspendAccountConfirmation /&gt; should display message and buttons when there is current email change" time="0.031">
    </testcase>
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should navigate to email change tracking when pressing &quot;Confirmer la demande&quot; button and API response is success" name="&lt;SuspendAccountConfirmation /&gt; should navigate to email change tracking when pressing &quot;Confirmer la demande&quot; button and API response is success" time="0.097">
    </testcase>
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should display an error snackbar when pressing &quot;Confirmer la demande&quot; button and API response is error and is not 401 error" name="&lt;SuspendAccountConfirmation /&gt; should display an error snackbar when pressing &quot;Confirmer la demande&quot; button and API response is error and is not 401 error" time="0.028">
    </testcase>
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should not display an error snackbar when pressing &quot;Confirmer la demande&quot; button and API response is a 401 error" name="&lt;SuspendAccountConfirmation /&gt; should not display an error snackbar when pressing &quot;Confirmer la demande&quot; button and API response is a 401 error" time="0.043">
    </testcase>
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should navigate to change email expired When last email change expired" name="&lt;SuspendAccountConfirmation /&gt; should navigate to change email expired When last email change expired" time="0.018">
    </testcase>
    <testcase classname="&lt;SuspendAccountConfirmation /&gt; should navigate to change email expired When pressing &quot;Confirmer la demande&quot; button and API response is a 401 error" name="&lt;SuspendAccountConfirmation /&gt; should navigate to change email expired When pressing &quot;Confirmer la demande&quot; button and API response is a 401 error" time="0.076">
    </testcase>
  </testsuite>
  <testsuite name="useOpenItinerary" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:48" time="4.641" tests="5">
    <testcase classname="useOpenItinerary beforeNavigate should call beforeNavigate" name="useOpenItinerary beforeNavigate should call beforeNavigate" time="0.018">
    </testcase>
    <testcase classname="useOpenItinerary beforeNavigate should not call beforeNavigate" name="useOpenItinerary beforeNavigate should not call beforeNavigate" time="0.002">
    </testcase>
    <testcase classname="useOpenItinerary canOpenItinerary should return true" name="useOpenItinerary canOpenItinerary should return true" time="0.005">
    </testcase>
    <testcase classname="useOpenItinerary canOpenItinerary should return false when address is undefined" name="useOpenItinerary canOpenItinerary should return false when address is undefined" time="0.002">
    </testcase>
    <testcase classname="useOpenItinerary canOpenItinerary should return false when address is null" name="useOpenItinerary canOpenItinerary should return false when address is null" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="[api] helpers" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:51" time="2.117" tests="32">
    <testcase classname="[api] helpers [method] safeFetch should call fetch with populated header" name="[api] helpers [method] safeFetch should call fetch with populated header" time="0.006">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch should call fetch with populated header when route is in NotAuthenticatedCalls" name="[api] helpers [method] safeFetch should call fetch with populated header when route is in NotAuthenticatedCalls" time="0.002">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch needs authentication response when refresh token fails" name="[api] helpers [method] safeFetch needs authentication response when refresh token fails" time="0.131">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch forces user to login when refresh token is expired" name="[api] helpers [method] safeFetch forces user to login when refresh token is expired" time="0.002">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch regenerates the access token and fetch the real url after when the access token is expired" name="[api] helpers [method] safeFetch regenerates the access token and fetch the real url after when the access token is expired" time="0.001">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch should call refreshAccessToken route once when no error" name="[api] helpers [method] safeFetch should call refreshAccessToken route once when no error" time="0.006">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch should not call refreshAccessToken route while the token is still valid" name="[api] helpers [method] safeFetch should not call refreshAccessToken route while the token is still valid" time="0.001">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch should call refreshAccessToken route again after 15 minutes (access token&apos;s lifetime)" name="[api] helpers [method] safeFetch should call refreshAccessToken route again after 15 minutes (access token&apos;s lifetime)" time="0.002">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch should refresh access token when it is unknown and refresh token is valid" name="[api] helpers [method] safeFetch should refresh access token when it is unknown and refresh token is valid" time="0.005">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch needs authentication response when there is no refresh token" name="[api] helpers [method] safeFetch needs authentication response when there is no refresh token" time="0.001">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch needs authentication response when cannot get refresh token" name="[api] helpers [method] safeFetch needs authentication response when cannot get refresh token" time="0.003">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch log exception to sentry when cannot get refresh token" name="[api] helpers [method] safeFetch log exception to sentry when cannot get refresh token" time="0.002">
    </testcase>
    <testcase classname="[api] helpers [method] safeFetch retries to regenerate the access token when the access token is expired and the first try to regenerate fails" name="[api] helpers [method] safeFetch retries to regenerate the access token when the access token is expired and the first try to regenerate fails" time="0.006">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should return body when status is ok" name="[api] helpers handleGeneratedApiResponse should return body when status is ok" time="0.002">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should return body when status is ok given a plain text response" name="[api] helpers handleGeneratedApiResponse should return body when status is ok given a plain text response" time="0.003">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should return empty object when status is 204 (no content)" name="[api] helpers handleGeneratedApiResponse should return empty object when status is 204 (no content)" time="0">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should navigate to suspension screen when status is 403 (forbidden)" name="[api] helpers handleGeneratedApiResponse should navigate to suspension screen when status is 403 (forbidden)" time="0.002">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should navigate to banned country screen when status is 403 (forbidden) with country ban header" name="[api] helpers handleGeneratedApiResponse should navigate to banned country screen when status is 403 (forbidden) with country ban header" time="0.002">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" name="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" time="0.006">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" name="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" time="0.011">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" name="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" time="0.003">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" name="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" time="0.002">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" name="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" time="0.001">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" name="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" time="0.002">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" name="[api] helpers handleGeneratedApiResponse should throw error if status is not ok" time="0.001">
    </testcase>
    <testcase classname="[api] helpers handleGeneratedApiResponse should navigate to login when access and refresh tokens are invalid" name="[api] helpers handleGeneratedApiResponse should navigate to login when access and refresh tokens are invalid" time="0.001">
    </testcase>
    <testcase classname="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 401" name="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 401" time="0.001">
    </testcase>
    <testcase classname="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 500" name="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 500" time="0">
    </testcase>
    <testcase classname="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 502" name="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 502" time="0">
    </testcase>
    <testcase classname="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 503" name="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 503" time="0.001">
    </testcase>
    <testcase classname="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 504" name="[api] helpers isAPIExceptionCapturedAsInfo should return true when error code is 504" time="0.001">
    </testcase>
    <testcase classname="[api] helpers isAPIExceptionCapturedAsInfo should return false when error code is 400" name="[api] helpers isAPIExceptionCapturedAsInfo should return false when error code is 400" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="OnboardingGeolocation" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:52" time="2.352" tests="5">
    <testcase classname="OnboardingGeolocation should render correctly" name="OnboardingGeolocation should render correctly" time="0.068">
    </testcase>
    <testcase classname="OnboardingGeolocation should redirect to AgeSelection when &quot;Passer&quot; is clicked" name="OnboardingGeolocation should redirect to AgeSelection when &quot;Passer&quot; is clicked" time="0.018">
    </testcase>
    <testcase classname="OnboardingGeolocation should request geoloc permission when &quot;Utiliser ma position&quot; is clicked" name="OnboardingGeolocation should request geoloc permission when &quot;Utiliser ma position&quot; is clicked" time="0.032">
    </testcase>
    <testcase classname="OnboardingGeolocation should log analytics when &quot;Utiliser ma position&quot; is clicked" name="OnboardingGeolocation should log analytics when &quot;Utiliser ma position&quot; is clicked" time="0.018">
    </testcase>
    <testcase classname="OnboardingGeolocation should log analytics when skip button is clicked" name="OnboardingGeolocation should log analytics when skip button is clicked" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OfferDuoModal/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:52" time="3.453" tests="12">
    <testcase classname="&lt;OfferDuoModal/&gt; should render modal correctly after animation and with enabled submit" name="&lt;OfferDuoModal/&gt; should render modal correctly after animation and with enabled submit" time="0.114">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; modal header should have header when viewport width is mobile" name="&lt;OfferDuoModal/&gt; modal header should have header when viewport width is mobile" time="0.031">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; modal header Buttons should close the modal and general filter page when pressing close button when the modal is opening from general filter page" name="&lt;OfferDuoModal/&gt; modal header Buttons should close the modal and general filter page when pressing close button when the modal is opening from general filter page" time="0.04">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; modal header Buttons should only close the modal when pressing close button when the modal is opening from search results" name="&lt;OfferDuoModal/&gt; modal header Buttons should only close the modal when pressing close button when the modal is opening from search results" time="0.063">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; when user is logged in and beneficiary with credit should toggle offerIsDuo" name="&lt;OfferDuoModal/&gt; when user is logged in and beneficiary with credit should toggle offerIsDuo" time="0.032">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; click reset button should disable duo offer when click on reset button" name="&lt;OfferDuoModal/&gt; click reset button should disable duo offer when click on reset button" time="0.065">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; should close the modal should close modal on submit" name="&lt;OfferDuoModal/&gt; should close the modal should close modal on submit" time="0.114">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; should close the modal when pressing previous button" name="&lt;OfferDuoModal/&gt; should close the modal when pressing previous button" time="0.137">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; with &quot;Appliquer le filtre&quot; button should display alternative button title" name="&lt;OfferDuoModal/&gt; with &quot;Appliquer le filtre&quot; button should display alternative button title" time="0.032">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; with &quot;Appliquer le filtre&quot; button should update search state when pressing submit button" name="&lt;OfferDuoModal/&gt; with &quot;Appliquer le filtre&quot; button should update search state when pressing submit button" time="0.1">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; with &quot;Rechercher&quot; button should set search state view to Search results when selecting DUO offer and pressing button" name="&lt;OfferDuoModal/&gt; with &quot;Rechercher&quot; button should set search state view to Search results when selecting DUO offer and pressing button" time="0.128">
    </testcase>
    <testcase classname="&lt;OfferDuoModal/&gt; with &quot;Rechercher&quot; button should use default filters without change when pressing button" name="&lt;OfferDuoModal/&gt; with &quot;Rechercher&quot; button should use default filters without change when pressing button" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="TrackEmailChangeContent" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:52" time="3.189" tests="5">
    <testcase classname="TrackEmailChangeContent should open mail app when pressing first step and first step is active" name="TrackEmailChangeContent should open mail app when pressing first step and first step is active" time="0.296">
    </testcase>
    <testcase classname="TrackEmailChangeContent should navigate to TrackEmailChange when pressing second step and second step is active" name="TrackEmailChangeContent should navigate to TrackEmailChange when pressing second step and second step is active" time="0.102">
    </testcase>
    <testcase classname="TrackEmailChangeContent should open mail app when pressing last step and last step is active" name="TrackEmailChangeContent should open mail app when pressing last step and last step is active" time="0.091">
    </testcase>
    <testcase classname="TrackEmailChangeContent should navigate to home when status is empty" name="TrackEmailChangeContent should navigate to home when status is empty" time="0.074">
    </testcase>
    <testcase classname="TrackEmailChangeContent should navigate to ChangeEmailExpiredLink when request is expired" name="TrackEmailChangeContent should navigate to ChangeEmailExpiredLink when request is expired" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="&lt;EighteenBlockDescription /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:53" time="2.142" tests="3">
    <testcase classname="&lt;EighteenBlockDescription /&gt; should display activation text when user is not logged in" name="&lt;EighteenBlockDescription /&gt; should display activation text when user is not logged in" time="0.259">
    </testcase>
    <testcase classname="&lt;EighteenBlockDescription /&gt; should display activation text when user is logged in but not beneficiary" name="&lt;EighteenBlockDescription /&gt; should display activation text when user is logged in but not beneficiary" time="0.057">
    </testcase>
    <testcase classname="&lt;EighteenBlockDescription /&gt; should not display activation text when user is logged in and already beneficiary" name="&lt;EighteenBlockDescription /&gt; should not display activation text when user is logged in and already beneficiary" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="useHomepageModules" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:53" time="2.849" tests="2">
    <testcase classname="useHomepageModules calls the API and returns the data" name="useHomepageModules calls the API and returns the data" time="0.28">
    </testcase>
    <testcase classname="useHomepageModules calls the API and returns the data of a thematic home page" name="useHomepageModules calls the API and returns the data of a thematic home page" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="useShowReview" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:55" time="1.528" tests="8">
    <testcase classname="useShowReview should show the review when it is available and we want to show it" name="useShowReview should show the review when it is available and we want to show it" time="0.019">
    </testcase>
    <testcase classname="useShowReview should not show the review when it is not available" name="useShowReview should not show the review when it is not available" time="0.001">
    </testcase>
    <testcase classname="useShowReview should not show the review when we dont want to show it" name="useShowReview should not show the review when we dont want to show it" time="0.001">
    </testcase>
    <testcase classname="useShowReview should update information if the review ends successfully" name="useShowReview should update information if the review ends successfully" time="0.004">
    </testcase>
    <testcase classname="useShowReview should not update information if the review doesnt end successfully" name="useShowReview should not update information if the review doesnt end successfully" time="0.001">
    </testcase>
    <testcase classname="useShowReview FF disableStoreReview should show the review when we enable store review" name="useShowReview FF disableStoreReview should show the review when we enable store review" time="0.001">
    </testcase>
    <testcase classname="useShowReview FF disableStoreReview should not show the review when app is running in the background" name="useShowReview FF disableStoreReview should not show the review when app is running in the background" time="0.004">
    </testcase>
    <testcase classname="useShowReview FF disableStoreReview should not show review when we disable store review" name="useShowReview FF disableStoreReview should not show review when we disable store review" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="useLocation()" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:54" time="2.652" tests="11">
    <testcase classname="useLocation() requestGeolocPermission() should call onSubmit() and onAcceptance() when requestGeolocPermission() returns GRANTED" name="useLocation() requestGeolocPermission() should call onSubmit() and onAcceptance() when requestGeolocPermission() returns GRANTED" time="0.089">
    </testcase>
    <testcase classname="useLocation() requestGeolocPermission() should call onSubmit() and onRefusal() when requestGeolocPermission() returns DENIED" name="useLocation() requestGeolocPermission() should call onSubmit() and onRefusal() when requestGeolocPermission() returns DENIED" time="0.064">
    </testcase>
    <testcase classname="useLocation() requestGeolocPermission() should call onSubmit() and onRefusal() when requestGeolocPermission() returns NEVER_ASK_AGAIN" name="useLocation() requestGeolocPermission() should call onSubmit() and onRefusal() when requestGeolocPermission() returns NEVER_ASK_AGAIN" time="0.057">
    </testcase>
    <testcase classname="useLocation() requestGeolocPermission() should call onSubmit() and onAcceptance() when requestGeolocPermission() returns NEED_ASK_POSITION_DIRECTLY and position is not null" name="useLocation() requestGeolocPermission() should call onSubmit() and onAcceptance() when requestGeolocPermission() returns NEED_ASK_POSITION_DIRECTLY and position is not null" time="0.056">
    </testcase>
    <testcase classname="useLocation() requestGeolocPermission() should call onSubmit() and onRefusal() when requestGeolocPermission() returns NEED_ASK_POSITION_DIRECTLY and position is null" name="useLocation() requestGeolocPermission() should call onSubmit() and onRefusal() when requestGeolocPermission() returns NEED_ASK_POSITION_DIRECTLY and position is null" time="0.053">
    </testcase>
    <testcase classname="useLocation() requestGeolocPermission() should call getGeolocPosition() when permission is granted" name="useLocation() requestGeolocPermission() should call getGeolocPosition() when permission is granted" time="0.055">
    </testcase>
    <testcase classname="useLocation() requestGeolocPermission() should call getGeolocPosition() when permission is need_ask_position_directly" name="useLocation() requestGeolocPermission() should call getGeolocPosition() when permission is need_ask_position_directly" time="0.055">
    </testcase>
    <testcase classname="useLocation() requestGeolocPermission() should not call getGeolocPosition() when permission is denied" name="useLocation() requestGeolocPermission() should not call getGeolocPosition() when permission is denied" time="0.008">
    </testcase>
    <testcase classname="useLocation() requestGeolocPermission() should not call getGeolocPosition() when permission is never_ask_again" name="useLocation() requestGeolocPermission() should not call getGeolocPosition() when permission is never_ask_again" time="0.003">
    </testcase>
    <testcase classname="useLocation() location_type should write UserGeolocation in location_type async storage when geolocation is turned on" name="useLocation() location_type should write UserGeolocation in location_type async storage when geolocation is turned on" time="0.053">
    </testcase>
    <testcase classname="useLocation() location_type should clear location_type async storage when neither place nor geolocPosition are set" name="useLocation() location_type should clear location_type async storage when neither place nor geolocPosition are set" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="RoundedButton" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:55" time="1.899" tests="5">
    <testcase classname="RoundedButton Icon should display icon without animation" name="RoundedButton Icon should display icon without animation" time="0.042">
    </testcase>
    <testcase classname="RoundedButton AnimatedIcon should display animated icon" name="RoundedButton AnimatedIcon should display animated icon" time="0.015">
    </testcase>
    <testcase classname="RoundedButton AnimatedIcon should display initial colors before animation" name="RoundedButton AnimatedIcon should display initial colors before animation" time="0.012">
    </testcase>
    <testcase classname="RoundedButton AnimatedIcon should display final colors after animation" name="RoundedButton AnimatedIcon should display final colors after animation" time="0.112">
    </testcase>
    <testcase classname="RoundedButton AnimatedIcon should convey animatedValue to AnimatedIcon" name="RoundedButton AnimatedIcon should convey animatedValue to AnimatedIcon" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="useLogBeforeNavToSearchResults" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:56" time="1.245" tests="2">
    <testcase classname="useLogBeforeNavToSearchResults should clear the previous search state" name="useLogBeforeNavToSearchResults should clear the previous search state" time="0.01">
    </testcase>
    <testcase classname="useLogBeforeNavToSearchResults should log the analytics event &apos;DiscoverOffers&apos;" name="useLogBeforeNavToSearchResults should log the analytics event &apos;DiscoverOffers&apos;" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="useSearchResults" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:55" time="2.288" tests="3">
    <testcase classname="useSearchResults useSearchInfiniteQuery should fetch offers, venues and all facets" name="useSearchResults useSearchInfiniteQuery should fetch offers, venues and all facets" time="0.046">
    </testcase>
    <testcase classname="useSearchResults useSearchInfiniteQuery should not fetch again when focus on suggestion changes" name="useSearchResults useSearchInfiniteQuery should not fetch again when focus on suggestion changes" time="0.011">
    </testcase>
    <testcase classname="useSearchResults useSearchInfiniteQuery should show hit numbers even if nbHits is at 0 but its are not null" name="useSearchResults useSearchInfiniteQuery should show hit numbers even if nbHits is at 0 but its are not null" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="usePatchProfile" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:56" time="2.27" tests="2">
    <testcase classname="usePatchProfile should call api when profile is complete" name="usePatchProfile should call api when profile is complete" time="0.014">
    </testcase>
    <testcase classname="usePatchProfile should clear activation profile from storage when query succeeds" name="usePatchProfile should clear activation profile from storage when query succeeds" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="RecommendationModule" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:56" time="2.609" tests="2">
    <testcase classname="RecommendationModule should trigger logEvent &quot;ModuleDisplayedOnHomepage&quot; when shouldModuleBeDisplayed is true" name="RecommendationModule should trigger logEvent &quot;ModuleDisplayedOnHomepage&quot; when shouldModuleBeDisplayed is true" time="0.13">
    </testcase>
    <testcase classname="RecommendationModule should not trigger logEvent &quot;ModuleDisplayedOnHomepage&quot; when shouldModuleBeDisplayed is false" name="RecommendationModule should not trigger logEvent &quot;ModuleDisplayedOnHomepage&quot; when shouldModuleBeDisplayed is false" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="VideoPlayer" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:56" time="2.249" tests="2">
    <testcase classname="VideoPlayer should render error view when showErrorView is true" name="VideoPlayer should render error view when showErrorView is true" time="0.056">
    </testcase>
    <testcase classname="VideoPlayer should not render error view when showErrorView is false" name="VideoPlayer should not render error view when showErrorView is false" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SummaryInfo /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:58" time="1.742" tests="4">
    <testcase classname="&lt;SummaryInfo /&gt; should display icon" name="&lt;SummaryInfo /&gt; should display icon" time="0.135">
    </testcase>
    <testcase classname="&lt;SummaryInfo /&gt; should display title" name="&lt;SummaryInfo /&gt; should display title" time="0.005">
    </testcase>
    <testcase classname="&lt;SummaryInfo /&gt; should display subtitle when it defined" name="&lt;SummaryInfo /&gt; should display subtitle when it defined" time="0.006">
    </testcase>
    <testcase classname="&lt;SummaryInfo /&gt; should display bottom separator" name="&lt;SummaryInfo /&gt; should display bottom separator" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;GenericErrorPage /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:58" time="1.603" tests="1">
    <testcase classname="&lt;GenericErrorPage /&gt; should render correctly" name="&lt;GenericErrorPage /&gt; should render correctly" time="0.153">
    </testcase>
  </testsuite>
  <testsuite name="SignUpSignInChoiceOfferModal" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:58" time="2.551" tests="4">
    <testcase classname="SignUpSignInChoiceOfferModal should match previous snapshot" name="SignUpSignInChoiceOfferModal should match previous snapshot" time="0.121">
    </testcase>
    <testcase classname="SignUpSignInChoiceOfferModal should go to login with offerId in params on button click and log analytics" name="SignUpSignInChoiceOfferModal should go to login with offerId in params on button click and log analytics" time="0.026">
    </testcase>
    <testcase classname="SignUpSignInChoiceOfferModal should go to signup with offerId in params on click button and log analytics" name="SignUpSignInChoiceOfferModal should go to signup with offerId in params on click button and log analytics" time="0.02">
    </testcase>
    <testcase classname="SignUpSignInChoiceOfferModal should log analytics when quitting modal" name="SignUpSignInChoiceOfferModal should log analytics when quitting modal" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="SnackBar Component" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:58" time="2.994" tests="13">
    <testcase classname="SnackBar Component Basic behavior should forward properly text and colors" name="SnackBar Component Basic behavior should forward properly text and colors" time="0.051">
    </testcase>
    <testcase classname="SnackBar Component Basic behavior should not display progress bar if timeout is not provided" name="SnackBar Component Basic behavior should not display progress bar if timeout is not provided" time="0.012">
    </testcase>
    <testcase classname="SnackBar Component Basic behavior should render the content container when visible=true" name="SnackBar Component Basic behavior should render the content container when visible=true" time="0.015">
    </testcase>
    <testcase classname="SnackBar Component Basic behavior should render the content container when visible=false only if already rendered" name="SnackBar Component Basic behavior should render the content container when visible=false only if already rendered" time="0.049">
    </testcase>
    <testcase classname="SnackBar Component Basic behavior should render the illustration icon when provided when visible" name="SnackBar Component Basic behavior should render the illustration icon when provided when visible" time="0.017">
    </testcase>
    <testcase classname="SnackBar Component Basic behavior should not render the illustration icon when not provided" name="SnackBar Component Basic behavior should not render the illustration icon when not provided" time="0.068">
    </testcase>
    <testcase classname="SnackBar Component Basic behavior should trigger onClose when the closeIcon is clicked" name="SnackBar Component Basic behavior should trigger onClose when the closeIcon is clicked" time="0.023">
    </testcase>
    <testcase classname="SnackBar Component Visibility lifecycle Initialisation should not display anything at initialisation when mounted (visible = true)" name="SnackBar Component Visibility lifecycle Initialisation should not display anything at initialisation when mounted (visible = true)" time="0.015">
    </testcase>
    <testcase classname="SnackBar Component Visibility lifecycle Initialisation should not display anything at initialisation when mounted (visible = false)" name="SnackBar Component Visibility lifecycle Initialisation should not display anything at initialisation when mounted (visible = false)" time="0.008">
    </testcase>
    <testcase classname="SnackBar Component Visibility lifecycle should display the snackbar container when shown" name="SnackBar Component Visibility lifecycle should display the snackbar container when shown" time="0.02">
    </testcase>
    <testcase classname="SnackBar Component Visibility lifecycle should hide the snackbar container when hidden" name="SnackBar Component Visibility lifecycle should hide the snackbar container when hidden" time="0.557">
    </testcase>
    <testcase classname="SnackBar Component Visibility lifecycle should reset progressBar animation when visual properties changed" name="SnackBar Component Visibility lifecycle should reset progressBar animation when visual properties changed" time="0.017">
    </testcase>
    <testcase classname="SnackBar Component Visibility lifecycle should reset the timer when &quot;refresher&quot; is updated" name="SnackBar Component Visibility lifecycle should reset the timer when &quot;refresher&quot; is updated" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="&lt;BookingDetailsCancelButton /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:59" time="2.663" tests="17">
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should display the &quot;Terminer&quot; button for digital offers when booking has activation code" name="&lt;BookingDetailsCancelButton /&gt; should display the &quot;Terminer&quot; button for digital offers when booking has activation code" time="0.05">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should display button if confirmationDate is null" name="&lt;BookingDetailsCancelButton /&gt; should display button if confirmationDate is null" time="0.023">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should display button if confirmation date is not expired" name="&lt;BookingDetailsCancelButton /&gt; should display button if confirmation date is not expired" time="0.011">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should not display button if confirmation date is expired" name="&lt;BookingDetailsCancelButton /&gt; should not display button if confirmation date is expired" time="0.005">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should call onCancel" name="&lt;BookingDetailsCancelButton /&gt; should call onCancel" time="0.015">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should call onTerminate" name="&lt;BookingDetailsCancelButton /&gt; should call onTerminate" time="0.013">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should block user if cancellation date is over" name="&lt;BookingDetailsCancelButton /&gt; should block user if cancellation date is over" time="0.004">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should block user if cancellation date is over and user is ex beneficiary" name="&lt;BookingDetailsCancelButton /&gt; should block user if cancellation date is over and user is ex beneficiary" time="0.005">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should display cancel button and expiration date message when confirmation date is null and that&apos;s it a digital booking" name="&lt;BookingDetailsCancelButton /&gt; should display cancel button and expiration date message when confirmation date is null and that&apos;s it a digital booking" time="0.008">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should display only an expiration date message when the booking is digital and is not still cancellable" name="&lt;BookingDetailsCancelButton /&gt; should display only an expiration date message when the booking is digital and is not still cancellable" time="0.014">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; should not display any message if there is no confirmation date" name="&lt;BookingDetailsCancelButton /&gt; should not display any message if there is no confirmation date" time="0.007">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; When it&apos;s an offer category to archive and it&apos;s not free should not display expiration date message" name="&lt;BookingDetailsCancelButton /&gt; When it&apos;s an offer category to archive and it&apos;s not free should not display expiration date message" time="0.007">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; When it&apos;s an offer category to archive and it&apos;s not free should display cancel button" name="&lt;BookingDetailsCancelButton /&gt; When it&apos;s an offer category to archive and it&apos;s not free should display cancel button" time="0.007">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; When it&apos;s a free offer category to archieve should display expiration date message when current price and price at booking time is 0" name="&lt;BookingDetailsCancelButton /&gt; When it&apos;s a free offer category to archieve should display expiration date message when current price and price at booking time is 0" time="0.005">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; When it&apos;s a free offer category to archieve should not display cancel button when current price and price at booking time is 0" name="&lt;BookingDetailsCancelButton /&gt; When it&apos;s a free offer category to archieve should not display cancel button when current price and price at booking time is 0" time="0.003">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; When it&apos;s a free offer category to archieve should display expiration date message when current price &gt; 0 and price at booking is 0" name="&lt;BookingDetailsCancelButton /&gt; When it&apos;s a free offer category to archieve should display expiration date message when current price &gt; 0 and price at booking is 0" time="0.005">
    </testcase>
    <testcase classname="&lt;BookingDetailsCancelButton /&gt; When it&apos;s a free offer category to archieve should not display cancel button when current price &gt; 0 and price at booking is 0" name="&lt;BookingDetailsCancelButton /&gt; When it&apos;s a free offer category to archieve should not display cancel button when current price &gt; 0 and price at booking is 0" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="&lt;EmptyCredit /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:00" time="2.549" tests="5">
    <testcase classname="&lt;EmptyCredit /&gt; should render correctly for 15 yo" name="&lt;EmptyCredit /&gt; should render correctly for 15 yo" time="0.055">
    </testcase>
    <testcase classname="&lt;EmptyCredit /&gt; should render correctly for 16 yo" name="&lt;EmptyCredit /&gt; should render correctly for 16 yo" time="0.038">
    </testcase>
    <testcase classname="&lt;EmptyCredit /&gt; should render correctly for 17 yo" name="&lt;EmptyCredit /&gt; should render correctly for 17 yo" time="0.018">
    </testcase>
    <testcase classname="&lt;EmptyCredit /&gt; should render correctly for 18 yo" name="&lt;EmptyCredit /&gt; should render correctly for 18 yo" time="0.005">
    </testcase>
    <testcase classname="&lt;EmptyCredit /&gt; should navigate to thematic home with remote config homeId on button press" name="&lt;EmptyCredit /&gt; should navigate to thematic home with remote config homeId on button press" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="useGetStepperInfo" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:00" time="2.297" tests="4">
    <testcase classname="useGetStepperInfo should get stepsToDisplay from the back" name="useGetStepperInfo should get stepsToDisplay from the back" time="0.341">
    </testcase>
    <testcase classname="useGetStepperInfo should return an errorMessage" name="useGetStepperInfo should return an errorMessage" time="0.014">
    </testcase>
    <testcase classname="useGetStepperInfo should return empty stepsToDisplay list and titles if the data is undefined" name="useGetStepperInfo should return empty stepsToDisplay list and titles if the data is undefined" time="0.009">
    </testcase>
    <testcase classname="useGetStepperInfo should return empty stepsToDisplay list and titles if the response is a 403" name="useGetStepperInfo should return empty stepsToDisplay list and titles if the response is a 403" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="&lt;StepCard /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:01" time="2.039" tests="10">
    <testcase classname="&lt;StepCard /&gt; should render title and icon" name="&lt;StepCard /&gt; should render title and icon" time="0.322">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should render subtitle" name="&lt;StepCard /&gt; should render subtitle" time="0.013">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should return the wrapper greyMedium when type is StepButtonState.DISABLED" name="&lt;StepCard /&gt; should return the wrapper greyMedium when type is StepButtonState.DISABLED" time="0.009">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should return the wrapper greyDark when type is StepButtonState.COMPLETED" name="&lt;StepCard /&gt; should return the wrapper greyDark when type is StepButtonState.COMPLETED" time="0.008">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should return the title greyDark when type is StepButtonState.DISABLED" name="&lt;StepCard /&gt; should return the title greyDark when type is StepButtonState.DISABLED" time="0.003">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should return the title black when type is StepButtonState.CURRENT" name="&lt;StepCard /&gt; should return the title black when type is StepButtonState.CURRENT" time="0.003">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should return the title greyDark when type is StepButtonState.COMPLETED" name="&lt;StepCard /&gt; should return the title greyDark when type is StepButtonState.COMPLETED" time="0.007">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should return the subtitle greyDark when type is StepButtonState.CURRENT" name="&lt;StepCard /&gt; should return the subtitle greyDark when type is StepButtonState.CURRENT" time="0.01">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should not return the subtitle when type is StepButtonState.COMPLETED" name="&lt;StepCard /&gt; should not return the subtitle when type is StepButtonState.COMPLETED" time="0.008">
    </testcase>
    <testcase classname="&lt;StepCard /&gt; should not return the subtitle when type is StepButtonState.DISABLED" name="&lt;StepCard /&gt; should not return the subtitle when type is StepButtonState.DISABLED" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="CulturalSurveyCheckbox" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:01" time="2.248" tests="2">
    <testcase classname="CulturalSurveyCheckbox should render correctly" name="CulturalSurveyCheckbox should render correctly" time="0.041">
    </testcase>
    <testcase classname="CulturalSurveyCheckbox should render correctly when pressed" name="CulturalSurveyCheckbox should render correctly when pressed" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="&lt;InternalTouchableLink /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:02" time="2.608" tests="5">
    <testcase classname="&lt;InternalTouchableLink /&gt; should navigate to right screen with expected params (nominal case)" name="&lt;InternalTouchableLink /&gt; should navigate to right screen with expected params (nominal case)" time="0.319">
    </testcase>
    <testcase classname="&lt;InternalTouchableLink /&gt; should push right screen with expected params if withPush={true}" name="&lt;InternalTouchableLink /&gt; should push right screen with expected params if withPush={true}" time="0.016">
    </testcase>
    <testcase classname="&lt;InternalTouchableLink /&gt; should navigate using navigateFromRef if fromRef={true}" name="&lt;InternalTouchableLink /&gt; should navigate using navigateFromRef if fromRef={true}" time="0.032">
    </testcase>
    <testcase classname="&lt;InternalTouchableLink /&gt; should push using pushFromRef if withPush={true} and fromRef={true}" name="&lt;InternalTouchableLink /&gt; should push using pushFromRef if withPush={true} and fromRef={true}" time="0.037">
    </testcase>
    <testcase classname="&lt;InternalTouchableLink /&gt; should not navigate to right screen with expected params when enableNavigate is false" name="&lt;InternalTouchableLink /&gt; should not navigate to right screen with expected params when enableNavigate is false" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MovieCalendar/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:58:59" time="5.802" tests="7">
    <testcase classname="&lt;MovieCalendar/&gt; should render MovieCalendar" name="&lt;MovieCalendar/&gt; should render MovieCalendar" time="0.14">
    </testcase>
    <testcase classname="&lt;MovieCalendar/&gt; Dates format should display the short days of weeks on a mobile screen" name="&lt;MovieCalendar/&gt; Dates format should display the short days of weeks on a mobile screen" time="0.28">
    </testcase>
    <testcase classname="&lt;MovieCalendar/&gt; Dates format should display the full days of weeks on a desktop screen" name="&lt;MovieCalendar/&gt; Dates format should display the full days of weeks on a desktop screen" time="0.242">
    </testcase>
    <testcase classname="&lt;MovieCalendar/&gt; Right arrow button should appear when the component renders before any user interaction" name="&lt;MovieCalendar/&gt; Right arrow button should appear when the component renders before any user interaction" time="0.31">
    </testcase>
    <testcase classname="&lt;MovieCalendar/&gt; Right arrow button should not appear when the content reached the end" name="&lt;MovieCalendar/&gt; Right arrow button should not appear when the content reached the end" time="0.21">
    </testcase>
    <testcase classname="&lt;MovieCalendar/&gt; Left arrow button should not appear when the component renders before any user interaction" name="&lt;MovieCalendar/&gt; Left arrow button should not appear when the component renders before any user interaction" time="0.336">
    </testcase>
    <testcase classname="&lt;MovieCalendar/&gt; Left arrow button should appear when the content is scrolled" name="&lt;MovieCalendar/&gt; Left arrow button should appear when the content is scrolled" time="0.119">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MapPinWithCounter /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:03" time="2.804" tests="2">
    <testcase classname="&lt;MapPinWithCounter /&gt; should display the number of venues in the cluster" name="&lt;MapPinWithCounter /&gt; should display the number of venues in the cluster" time="0.133">
    </testcase>
    <testcase classname="&lt;MapPinWithCounter /&gt; should display the number of venues in the cluster with 99+ when count informed and is greater than 99" name="&lt;MapPinWithCounter /&gt; should display the number of venues in the cluster with 99+ when count informed and is greater than 99" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="getDisplayPrice" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:03" time="2.167" tests="60">
    <testcase classname="getDisplayPrice getDisplayPrice(undefined) 	=  without format price options" name="getDisplayPrice getDisplayPrice(undefined) 	=  without format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([]) 	=  without format price options" name="getDisplayPrice getDisplayPrice([]) 	=  without format price options" time="0.001">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([0]) 	= Gratuit without format price options" name="getDisplayPrice getDisplayPrice([0]) 	= Gratuit without format price options" time="0.006">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([0, 700]) 	= Gratuit without format price options" name="getDisplayPrice getDisplayPrice([0, 700]) 	= Gratuit without format price options" time="0.003">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([100]) 	= 1 € without format price options" name="getDisplayPrice getDisplayPrice([100]) 	= 1 € without format price options" time="0.004">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([200]) 	= 2 € without format price options" name="getDisplayPrice getDisplayPrice([200]) 	= 2 € without format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([345]) 	= 3,45 € without format price options" name="getDisplayPrice getDisplayPrice([345]) 	= 3,45 € without format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([350]) 	= 3,50 € without format price options" name="getDisplayPrice getDisplayPrice([350]) 	= 3,50 € without format price options" time="0.003">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([560, 300]) 	= Dès 3 € without format price options" name="getDisplayPrice getDisplayPrice([560, 300]) 	= Dès 3 € without format price options" time="0.003">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([200, 1000, 3000]) 	= Dès 2 € without format price options" name="getDisplayPrice getDisplayPrice([200, 1000, 3000]) 	= Dès 2 € without format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([-300, 560]) 	= 5,60 € without format price options" name="getDisplayPrice getDisplayPrice([-300, 560]) 	= 5,60 € without format price options" time="0">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([800, 800]) 	= 8 € without format price options" name="getDisplayPrice getDisplayPrice([800, 800]) 	= 8 € without format price options" time="0.001">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice(undefined) 	=  with format price options" name="getDisplayPrice getDisplayPrice(undefined) 	=  with format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([]) 	=  with format price options" name="getDisplayPrice getDisplayPrice([]) 	=  with format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([0]) 	= Gratuit with format price options" name="getDisplayPrice getDisplayPrice([0]) 	= Gratuit with format price options" time="0.001">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([0, 700]) 	= Gratuit with format price options" name="getDisplayPrice getDisplayPrice([0, 700]) 	= Gratuit with format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([100]) 	= 1,00 € with format price options" name="getDisplayPrice getDisplayPrice([100]) 	= 1,00 € with format price options" time="0.001">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([200]) 	= 2,00 € with format price options" name="getDisplayPrice getDisplayPrice([200]) 	= 2,00 € with format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([345]) 	= 3,45 € with format price options" name="getDisplayPrice getDisplayPrice([345]) 	= 3,45 € with format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([350]) 	= 3,50 € with format price options" name="getDisplayPrice getDisplayPrice([350]) 	= 3,50 € with format price options" time="0.002">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([560, 300]) 	= Dès 3,00 € with format price options" name="getDisplayPrice getDisplayPrice([560, 300]) 	= Dès 3,00 € with format price options" time="0.006">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([200, 1000, 3000]) 	= Dès 2,00 € with format price options" name="getDisplayPrice getDisplayPrice([200, 1000, 3000]) 	= Dès 2,00 € with format price options" time="0.001">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([-300, 560]) 	= 5,60 € with format price options" name="getDisplayPrice getDisplayPrice([-300, 560]) 	= 5,60 € with format price options" time="0.001">
    </testcase>
    <testcase classname="getDisplayPrice getDisplayPrice([800, 800]) 	= 8,00 € with format price options" name="getDisplayPrice getDisplayPrice([800, 800]) 	= 8,00 € with format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(0) 	= 0 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(0) 	= 0 € without format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(500) 	= 5 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(500) 	= 5 € without format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-500) 	= -5 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-500) 	= -5 € without format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1050) 	= 10,50 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1050) 	= 10,50 € without format price options" time="0.006">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1050) 	= -10,50 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1050) 	= -10,50 € without format price options" time="0.005">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1110) 	= 11,10 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1110) 	= 11,10 € without format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1110) 	= -11,10 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1110) 	= -11,10 € without format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1190) 	= 11,90 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1190) 	= 11,90 € without format price options" time="0">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1190) 	= -11,90 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1190) 	= -11,90 € without format price options" time="0.012">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1199) 	= 11,99 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1199) 	= 11,99 € without format price options" time="0.008">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1199) 	= -11,99 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1199) 	= -11,99 € without format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1199.6) 	= 12,00 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1199.6) 	= 12,00 € without format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1199.6) 	= -12,00 € without format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1199.6) 	= -12,00 € without format price options" time="0.005">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(0) 	= 0,00 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(0) 	= 0,00 € with format price options" time="0.005">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(500) 	= 5,00 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(500) 	= 5,00 € with format price options" time="0.009">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-500) 	= -5,00 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-500) 	= -5,00 € with format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1050) 	= 10,50 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1050) 	= 10,50 € with format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1050) 	= -10,50 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1050) 	= -10,50 € with format price options" time="0.006">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1110) 	= 11,10 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1110) 	= 11,10 € with format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1110) 	= -11,10 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1110) 	= -11,10 € with format price options" time="0">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1190) 	= 11,90 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1190) 	= 11,90 € with format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1190) 	= -11,90 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1190) 	= -11,90 € with format price options" time="0.006">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1199) 	= 11,99 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1199) 	= 11,99 € with format price options" time="0.003">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1199) 	= -11,99 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1199) 	= -11,99 € with format price options" time="0.001">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(1199.6) 	= 12,00 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(1199.6) 	= 12,00 € with format price options" time="0">
    </testcase>
    <testcase classname="formatToFrenchDecimal() formatToFrenchDecimal(-1199.6) 	= -12,00 € with format price options" name="formatToFrenchDecimal() formatToFrenchDecimal(-1199.6) 	= -12,00 € with format price options" time="0.001">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(0) 	= 0 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(0) 	= 0 €" time="0">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(50) 	= 50 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(50) 	= 50 €" time="0">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(-50) 	= -50 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(-50) 	= -50 €" time="0">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(10.5) 	= 10,50 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(10.5) 	= 10,50 €" time="0.001">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(-10.5) 	= -10,50 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(-10.5) 	= -10,50 €" time="0.001">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(17.9) 	= 17,90 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(17.9) 	= 17,90 €" time="0.003">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(19.99) 	= 19,99 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(19.99) 	= 19,99 €" time="0.002">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(-19.99) 	= -19,99 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(-19.99) 	= -19,99 €" time="0.002">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(20.999) 	= 20,99 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(20.999) 	= 20,99 €" time="0.001">
    </testcase>
    <testcase classname="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(-20.999) 	= -21 €" name="formatPriceInEuroToDisplayPrice() formatPriceInEuroToDisplayPrice(-20.999) 	= -21 €" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="useCategoryIdMapping" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:04" time="2.293" tests="5">
    <testcase classname="useCategoryIdMapping should match category id mapping" name="useCategoryIdMapping should match category id mapping" time="0.008">
    </testcase>
    <testcase classname="useSubcategoriesMapping should match subcategories mapping" name="useSubcategoriesMapping should match subcategories mapping" time="0.01">
    </testcase>
    <testcase classname="useSearchGroupLabelMapping should match search group label mapping" name="useSearchGroupLabelMapping should match search group label mapping" time="0.002">
    </testcase>
    <testcase classname="useCategoryHomeLabelMapping should match category Home label mapping" name="useCategoryHomeLabelMapping should match category Home label mapping" time="0.003">
    </testcase>
    <testcase classname="useGenreTypeMapping should match category Home label mapping" name="useGenreTypeMapping should match category Home label mapping" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="useOfferSummaryInfoList" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:03" time="3.007" tests="6">
    <testcase classname="useOfferSummaryInfoList should return summaryInfoItems when offer has atleast one in stock" name="useOfferSummaryInfoList should return summaryInfoItems when offer has atleast one in stock" time="0.011">
    </testcase>
    <testcase classname="useOfferSummaryInfoList should return summaryInfoItems dates when offer stock has date in future" name="useOfferSummaryInfoList should return summaryInfoItems dates when offer stock has date in future" time="0.01">
    </testcase>
    <testcase classname="useOfferSummaryInfoList should return summaryInfoItems online when offer is digital" name="useOfferSummaryInfoList should return summaryInfoItems online when offer is digital" time="0.003">
    </testcase>
    <testcase classname="useOfferSummaryInfoList should return summaryInfoItems duration when offer has duration" name="useOfferSummaryInfoList should return summaryInfoItems duration when offer has duration" time="0.003">
    </testcase>
    <testcase classname="useOfferSummaryInfoList should return many summaryInfoItems when offer has various details like duration, duo offer, digital offer" name="useOfferSummaryInfoList should return many summaryInfoItems when offer has various details like duration, duo offer, digital offer" time="0.004">
    </testcase>
    <testcase classname="useOfferSummaryInfoList should not return summaryInfoItems when none are in offer stock" name="useOfferSummaryInfoList should not return summaryInfoItems when none are in offer stock" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="useNavigateToSearchWithVenueOffers" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:05" time="2.331" tests="1">
    <testcase classname="useNavigateToSearchWithVenueOffers should give the config according to the venue" name="useNavigateToSearchWithVenueOffers should give the config according to the venue" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="useFilterCount" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:05" time="2.043" tests="12">
    <testcase classname="useFilterCount should return the correct number of activated filters | initial state" name="useFilterCount should return the correct number of activated filters | initial state" time="0.006">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | offerIsDuo" name="useFilterCount should return the correct number of activated filters | offerIsDuo" time="0">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | date" name="useFilterCount should return the correct number of activated filters | date" time="0.002">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | timeRange" name="useFilterCount should return the correct number of activated filters | timeRange" time="0.002">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | offerCategories - 0" name="useFilterCount should return the correct number of activated filters | offerCategories - 0" time="0.002">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | offerCategories - 1" name="useFilterCount should return the correct number of activated filters | offerCategories - 1" time="0.002">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | minPrice" name="useFilterCount should return the correct number of activated filters | minPrice" time="0.003">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | maxPrice" name="useFilterCount should return the correct number of activated filters | maxPrice" time="0.001">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | minPrice - maxPrice" name="useFilterCount should return the correct number of activated filters | minPrice - maxPrice" time="0.003">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | offerIsFree - minPrice - maxPrice" name="useFilterCount should return the correct number of activated filters | offerIsFree - minPrice - maxPrice" time="0.002">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | venue" name="useFilterCount should return the correct number of activated filters | venue" time="0.002">
    </testcase>
    <testcase classname="useFilterCount should return the correct number of activated filters | fourFilters" name="useFilterCount should return the correct number of activated filters | fourFilters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CopyToClipboardButton" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:06" time="1.754" tests="2">
    <testcase classname="CopyToClipboardButton should show right text" name="CopyToClipboardButton should show right text" time="0.03">
    </testcase>
    <testcase classname="CopyToClipboardButton should copy to clipboard when pressing the button" name="CopyToClipboardButton should copy to clipboard when pressing the button" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DateChoice /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:06" time="1.205" tests="1">
    <testcase classname="&lt;DateChoice /&gt; should render null in native" name="&lt;DateChoice /&gt; should render null in native" time="0.137">
    </testcase>
  </testsuite>
  <testsuite name="OfferTile component" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:06" time="2.254" tests="8">
    <testcase classname="OfferTile component should render correctly" name="OfferTile component should render correctly" time="0.036">
    </testcase>
    <testcase classname="OfferTile component should navigate to the offer when clicking on the image" name="OfferTile component should navigate to the offer when clicking on the image" time="0.019">
    </testcase>
    <testcase classname="OfferTile component Analytics - should log ConsultOffer that user opened the offer" name="OfferTile component Analytics - should log ConsultOffer that user opened the offer" time="0.014">
    </testcase>
    <testcase classname="OfferTile component Analytics - should log ConsultOffer that user opened the offer from the list of similar offers" name="OfferTile component Analytics - should log ConsultOffer that user opened the offer from the list of similar offers" time="0.012">
    </testcase>
    <testcase classname="OfferTile component Analytics - should log ConsultOffer with homeEntryId if provide" name="OfferTile component Analytics - should log ConsultOffer with homeEntryId if provide" time="0.012">
    </testcase>
    <testcase classname="OfferTile component Analytics - should log ConsultOffer from venue offers playlist and from search venues playlist" name="OfferTile component Analytics - should log ConsultOffer from venue offers playlist and from search venues playlist" time="0.038">
    </testcase>
    <testcase classname="OfferTile component Analytics - should log ConsultOffer that user opened the offer from the list of same artist" name="OfferTile component Analytics - should log ConsultOffer that user opened the offer from the list of same artist" time="0.011">
    </testcase>
    <testcase classname="OfferTile component should prepopulate react-query cache when clicking on offer" name="OfferTile component should prepopulate react-query cache when clicking on offer" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="PushNotificationsModal" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:06" time="2.065" tests="2">
    <testcase classname="PushNotificationsModal should render properly" name="PushNotificationsModal should render properly" time="0.039">
    </testcase>
    <testcase classname="PushNotificationsModal should open settings and log event logOpenNotificationSettings" name="PushNotificationsModal should open settings and log event logOpenNotificationSettings" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="ExclusivityBanner component" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:07" time="1.59" tests="1">
    <testcase classname="ExclusivityBanner component should trigger logEvent &quot;ModuleDisplayedOnHomepage&quot; on render" name="ExclusivityBanner component should trigger logEvent &quot;ModuleDisplayedOnHomepage&quot; on render" time="0.136">
    </testcase>
  </testsuite>
  <testsuite name="newEmailSelectionSchema" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:08" time="1.169" tests="2">
    <testcase classname="newEmailSelectionSchema should reject when no email" name="newEmailSelectionSchema should reject when no email" time="0.005">
    </testcase>
    <testcase classname="newEmailSelectionSchema should resolve when email is valid" name="newEmailSelectionSchema should resolve when email is valid" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="useOfferPlaylist" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:07" time="1.792" tests="8">
    <testcase classname="useOfferPlaylist When offer is defined should return same artist playlist" name="useOfferPlaylist When offer is defined should return same artist playlist" time="0.008">
    </testcase>
    <testcase classname="useOfferPlaylist When offer is defined should return same category similar offers playlist" name="useOfferPlaylist When offer is defined should return same category similar offers playlist" time="0.009">
    </testcase>
    <testcase classname="useOfferPlaylist When offer is defined should return api reco params of same category similar offers query" name="useOfferPlaylist When offer is defined should return api reco params of same category similar offers query" time="0.001">
    </testcase>
    <testcase classname="useOfferPlaylist When offer is defined should return other categories similar offers playlist" name="useOfferPlaylist When offer is defined should return other categories similar offers playlist" time="0.002">
    </testcase>
    <testcase classname="useOfferPlaylist When offer is defined should return api reco params of other categories similar offers query" name="useOfferPlaylist When offer is defined should return api reco params of other categories similar offers query" time="0.002">
    </testcase>
    <testcase classname="useOfferPlaylist When offer is defined should call api reco with user position" name="useOfferPlaylist When offer is defined should call api reco with user position" time="0.004">
    </testcase>
    <testcase classname="useOfferPlaylist When offer is defined should handle provided artist and EAN" name="useOfferPlaylist When offer is defined should handle provided artist and EAN" time="0.004">
    </testcase>
    <testcase classname="useOfferPlaylist When offer is defined should handle missing artist and EAN" name="useOfferPlaylist When offer is defined should handle missing artist and EAN" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="removeGeneratedStorageKey" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:08" time="1.012" tests="3">
    <testcase classname="removeGeneratedStorageKey should clear optional key" name="removeGeneratedStorageKey should clear optional key" time="0.003">
    </testcase>
    <testcase classname="removeGeneratedStorageKey should clear optional key with prefix" name="removeGeneratedStorageKey should clear optional key with prefix" time="0.005">
    </testcase>
    <testcase classname="removeGeneratedStorageKey should not clear optional key with partial prefix" name="removeGeneratedStorageKey should not clear optional key with partial prefix" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="FAQVebview page" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:08" time="1.65" tests="1">
    <testcase classname="FAQVebview page should render the page with correct layout" name="FAQVebview page should render the page with correct layout" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="TabLayout" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:08" time="1.578" tests="2">
    <testcase classname="TabLayout should render first tab content by default" name="TabLayout should render first tab content by default" time="0.039">
    </testcase>
    <testcase classname="TabLayout should render second tab content when clicking on the second tab title" name="TabLayout should render second tab content when clicking on the second tab title" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="useOfferBatchTracking" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:09" time="1.402" tests="13">
    <testcase classname="useOfferBatchTracking should return trackEventHasSeenOfferOnce" name="useOfferBatchTracking should return trackEventHasSeenOfferOnce" time="0.006">
    </testcase>
    <testcase classname="useOfferBatchTracking should return trackBatchEvent" name="useOfferBatchTracking should return trackBatchEvent" time="0.006">
    </testcase>
    <testcase classname="useOfferBatchTracking should return true for shouldTriggerBatchSurveyEvent when native category is not eligible for survey" name="useOfferBatchTracking should return true for shouldTriggerBatchSurveyEvent when native category is not eligible for survey" time="0.001">
    </testcase>
    <testcase classname="useOfferBatchTracking should call trackEventHasSeenOfferForSurveyOnce" name="useOfferBatchTracking should call trackEventHasSeenOfferForSurveyOnce" time="0.004">
    </testcase>
    <testcase classname="useOfferBatchTracking shoyld call trackEventHasSeenOfferForSurveyOnce only once" name="useOfferBatchTracking shoyld call trackEventHasSeenOfferForSurveyOnce only once" time="0.002">
    </testcase>
    <testcase classname="useOfferBatchTracking should call trackBookOfferForSurveyOnce when native category is LIVRES_PAPIER" name="useOfferBatchTracking should call trackBookOfferForSurveyOnce when native category is LIVRES_PAPIER" time="0.003">
    </testcase>
    <testcase classname="useOfferBatchTracking shoyld call trackBookOfferForSurveyOnce only once" name="useOfferBatchTracking shoyld call trackBookOfferForSurveyOnce only once" time="0.003">
    </testcase>
    <testcase classname="useOfferBatchTracking should call trackCulturalVisitOfferForSurveyOnce when native category is VISITES_CULTURELLES" name="useOfferBatchTracking should call trackCulturalVisitOfferForSurveyOnce when native category is VISITES_CULTURELLES" time="0.002">
    </testcase>
    <testcase classname="useOfferBatchTracking shoyld call trackCulturalVisitOfferForSurveyOnce only once" name="useOfferBatchTracking shoyld call trackCulturalVisitOfferForSurveyOnce only once" time="0.007">
    </testcase>
    <testcase classname="useOfferBatchTracking should call trackConcertOfferForSurveyOnce when native category is CONCERTS_EVENEMENTS" name="useOfferBatchTracking should call trackConcertOfferForSurveyOnce when native category is CONCERTS_EVENEMENTS" time="0.001">
    </testcase>
    <testcase classname="useOfferBatchTracking shoyld call trackConcertOfferForSurveyOnce only once" name="useOfferBatchTracking shoyld call trackConcertOfferForSurveyOnce only once" time="0.002">
    </testcase>
    <testcase classname="useOfferBatchTracking should call trackCinemaOfferForSurveyOnce when native category is SEANCES_DE_CINEMA" name="useOfferBatchTracking should call trackCinemaOfferForSurveyOnce when native category is SEANCES_DE_CINEMA" time="0.002">
    </testcase>
    <testcase classname="useOfferBatchTracking shoyld call trackCinemaOfferForSurveyOnce only once" name="useOfferBatchTracking shoyld call trackCinemaOfferForSurveyOnce only once" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VenueSelectionListItem /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:09" time="1.433" tests="3">
    <testcase classname="&lt;VenueSelectionListItem /&gt; should apply different styles when selected" name="&lt;VenueSelectionListItem /&gt; should apply different styles when selected" time="0.033">
    </testcase>
    <testcase classname="&lt;VenueSelectionListItem /&gt; should set `isSelected` to `false` by default" name="&lt;VenueSelectionListItem /&gt; should set `isSelected` to `false` by default" time="0.005">
    </testcase>
    <testcase classname="&lt;VenueSelectionListItem /&gt; should call `onSelect` when selecting" name="&lt;VenueSelectionListItem /&gt; should call `onSelect` when selecting" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="adaptVideoModule" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:10" time="0.941" tests="1">
    <testcase classname="adaptVideoModule should adapt from Contentful data" name="adaptVideoModule should adapt from Contentful data" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="createInitialQuestionsList" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:10" time="1.186" tests="2">
    <testcase classname="createInitialQuestionsList should return list of questions id" name="createInitialQuestionsList should return list of questions id" time="0.002">
    </testcase>
    <testcase classname="createInitialQuestionsList should return empty list if no data provided" name="createInitialQuestionsList should return empty list if no data provided" time="0">
    </testcase>
  </testsuite>
  <testsuite name="fetchOffersByIds" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:09" time="1.518" tests="2">
    <testcase classname="fetchOffersByIds should fetch with default search params" name="fetchOffersByIds should fetch with default search params" time="0.003">
    </testcase>
    <testcase classname="fetchOffersByIds should fetch with underage search params" name="fetchOffersByIds should fetch with underage search params" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="useDepositActivationAge" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:10" time="1.661" tests="4">
    <testcase classname="useDepositActivationAge should be undefined when user is logged out" name="useDepositActivationAge should be undefined when user is logged out" time="0.007">
    </testcase>
    <testcase classname="useDepositActivationAge should be undefined when user is loading" name="useDepositActivationAge should be undefined when user is loading" time="0.001">
    </testcase>
    <testcase classname="useDepositActivationAge should be null when user is not beneficiary" name="useDepositActivationAge should be null when user is not beneficiary" time="0.004">
    </testcase>
    <testcase classname="useDepositActivationAge should return deposit activation age for beneficiary user" name="useDepositActivationAge should return deposit activation age for beneficiary user" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="[hook] useCancelBookingMutation" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:10" time="1.763" tests="2">
    <testcase classname="[hook] useCancelBookingMutation invalidates me and bookings after successfully cancel a booking" name="[hook] useCancelBookingMutation invalidates me and bookings after successfully cancel a booking" time="0.094">
    </testcase>
    <testcase classname="[hook] useCancelBookingMutation call onError input after cancel a booking on error" name="[hook] useCancelBookingMutation call onError input after cancel a booking on error" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="useStepperInfo" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:11" time="1.856" tests="6">
    <testcase classname="useStepperInfo should return title and subtitle" name="useStepperInfo should return title and subtitle" time="0.002">
    </testcase>
    <testcase classname="useStepperInfo should return 3 steps if there is no phone validation step" name="useStepperInfo should return 3 steps if there is no phone validation step" time="0.001">
    </testcase>
    <testcase classname="useStepperInfo should return 4 steps when useGetStepperInfo returns 4 steps" name="useStepperInfo should return 4 steps when useGetStepperInfo returns 4 steps" time="0.001">
    </testcase>
    <testcase classname="useStepperInfo should return PhoneValidationTooManySMSSent if no remaining attempts left" name="useStepperInfo should return PhoneValidationTooManySMSSent if no remaining attempts left" time="0.001">
    </testcase>
    <testcase classname="useStepperInfo should not include only PhoneValidationTooManySMSSent if remaining attempts left" name="useStepperInfo should not include only PhoneValidationTooManySMSSent if remaining attempts left" time="0.001">
    </testcase>
    <testcase classname="useStepperInfo should return &apos;SelectIDOrigin&apos; identity screen" name="useStepperInfo should return &apos;SelectIDOrigin&apos; identity screen" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="usePersistQuery" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:11" time="1.604" tests="5">
    <testcase classname="usePersistQuery without initial local data should save distant data locally" name="usePersistQuery without initial local data should save distant data locally" time="0.051">
    </testcase>
    <testcase classname="usePersistQuery without initial local data should fail to save distant data locally and log to sentry" name="usePersistQuery without initial local data should fail to save distant data locally and log to sentry" time="0.004">
    </testcase>
    <testcase classname="usePersistQuery with initial local data should show offline data first, then online data" name="usePersistQuery with initial local data should show offline data first, then online data" time="0.031">
    </testcase>
    <testcase classname="usePersistQuery with initial local data should fail to read local data and log to sentry" name="usePersistQuery with initial local data should fail to read local data and log to sentry" time="0.004">
    </testcase>
    <testcase classname="usePersistQuery with initial local data react-query option.select support should return defined when select find the entity" name="usePersistQuery with initial local data react-query option.select support should return defined when select find the entity" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="YoungerBadge" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:11" time="1.55" tests="1">
    <testcase classname="YoungerBadge should display correct message with eligibility date" name="YoungerBadge should display correct message with eligibility date" time="0.178">
    </testcase>
  </testsuite>
  <testsuite name="loginSchema" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:12" time="1.245" tests="4">
    <testcase classname="loginSchema validate a form with all required values" name="loginSchema validate a form with all required values" time="0.003">
    </testcase>
    <testcase classname="loginSchema should invalidate due to an invalid email" name="loginSchema should invalidate due to an invalid email" time="0.003">
    </testcase>
    <testcase classname="loginSchema should invalidate due to an empty email" name="loginSchema should invalidate due to an empty email" time="0.005">
    </testcase>
    <testcase classname="loginSchema should invalidate due to an empty password" name="loginSchema should invalidate due to an empty password" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PageWithHeader/&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:11" time="2.03" tests="2">
    <testcase classname="&lt;PageWithHeader/&gt; should render correctly" name="&lt;PageWithHeader/&gt; should render correctly" time="0.067">
    </testcase>
    <testcase classname="&lt;PageWithHeader/&gt; should render correctly on Android, with white header" name="&lt;PageWithHeader/&gt; should render correctly on Android, with white header" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="getLocalizationCompliance" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:12" time="1.429" tests="6">
    <testcase classname="getLocalizationCompliance should replace {email} by $email in $url when necessary" name="getLocalizationCompliance should replace {email} by $email in $url when necessary" time="0.002">
    </testcase>
    <testcase classname="getLocalizationCompliance should replace {email} by $email in $url when necessary" name="getLocalizationCompliance should replace {email} by $email in $url when necessary" time="0">
    </testcase>
    <testcase classname="getLocalizationCompliance should replace {email} by $email in $url when necessary" name="getLocalizationCompliance should replace {email} by $email in $url when necessary" time="0.003">
    </testcase>
    <testcase classname="getLocalizationCompliance should replace {email} by $email in $url when necessary" name="getLocalizationCompliance should replace {email} by $email in $url when necessary" time="0.003">
    </testcase>
    <testcase classname="getLocalizationCompliance should replace {email} by $email in $url when necessary" name="getLocalizationCompliance should replace {email} by $email in $url when necessary" time="0.001">
    </testcase>
    <testcase classname="getLocalizationCompliance should replace {email} by $email in $url when necessary" name="getLocalizationCompliance should replace {email} by $email in $url when necessary" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useReviewInAppInformation" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:13" time="1.392" tests="4">
    <testcase classname="useReviewInAppInformation should return shouldReviewBeRequested = true if review Modal has not been seen" name="useReviewInAppInformation should return shouldReviewBeRequested = true if review Modal has not been seen" time="0.014">
    </testcase>
    <testcase classname="useReviewInAppInformation should return shouldReviewBeRequested = true if review Modal has been seen three times" name="useReviewInAppInformation should return shouldReviewBeRequested = true if review Modal has been seen three times" time="0.005">
    </testcase>
    <testcase classname="useReviewInAppInformation should return shouldReviewBeRequested = false if review Modal has been seen more than three times" name="useReviewInAppInformation should return shouldReviewBeRequested = false if review Modal has been seen more than three times" time="0.012">
    </testcase>
    <testcase classname="useReviewInAppInformation should return shouldReviewBeRequested = true if review Modal has been seen more than three times but one year ago" name="useReviewInAppInformation should return shouldReviewBeRequested = true if review Modal has been seen more than three times but one year ago" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RemoteConfigProvider /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:13" time="1.311" tests="1">
    <testcase classname="&lt;RemoteConfigProvider /&gt; should configure() then refresh() remote config values then call getValues() to update config" name="&lt;RemoteConfigProvider /&gt; should configure() then refresh() remote config values then call getValues() to update config" time="0.1">
    </testcase>
  </testsuite>
  <testsuite name="getFeatureFlag" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:13" time="1.704" tests="17">
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.008">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.001">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.001">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.002">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.002">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.004">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.007">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.001">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.002">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.004">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.002">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.002">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.003">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.003">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.006">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.01">
    </testcase>
    <testcase classname="getFeatureFlag should call the right firestore collection: featureFlags" name="getFeatureFlag should call the right firestore collection: featureFlags" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="formatDateTimezone()" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:13" time="1.458" tests="13">
    <testcase classname="formatDateTimezone() should format Date 2021-02-23T13:45:00 to string &quot;23 février 2021, 13h45&quot;" name="formatDateTimezone() should format Date 2021-02-23T13:45:00 to string &quot;23 février 2021, 13h45&quot;" time="0.001">
    </testcase>
    <testcase classname="formatDateTimezone() should format Date 2021-05-03T09:30:00.000Z to string &quot;3 mai 2021, 09h30&quot;" name="formatDateTimezone() should format Date 2021-05-03T09:30:00.000Z to string &quot;3 mai 2021, 09h30&quot;" time="0.006">
    </testcase>
    <testcase classname="formatDateTimezone() should format Date 2021-12-16T15:00:00.000Z to string &quot;16 décembre 2021, 15h00&quot;" name="formatDateTimezone() should format Date 2021-12-16T15:00:00.000Z to string &quot;16 décembre 2021, 15h00&quot;" time="0.002">
    </testcase>
    <testcase classname="formatDateTimezone() should format Date 2021-12-16T09:03:00.000Z to string &quot;16 décembre 2021, 09h03&quot;" name="formatDateTimezone() should format Date 2021-12-16T09:03:00.000Z to string &quot;16 décembre 2021, 09h03&quot;" time="0.001">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true activationCode with expiration date should not be cancellable when cancellation limit date=null" name="&lt;CancellationDetails /&gt; when isDigital = true activationCode with expiration date should not be cancellable when cancellation limit date=null" time="0.171">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true activationCode with expiration date should not be cancellable when cancellation limit date=2021-01-02T00:00:00" name="&lt;CancellationDetails /&gt; when isDigital = true activationCode with expiration date should not be cancellable when cancellation limit date=2021-01-02T00:00:00" time="0.004">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true activationCode with expiration date should not be cancellable when cancellation limit date=2021-01-06T00:00:00" name="&lt;CancellationDetails /&gt; when isDigital = true activationCode with expiration date should not be cancellable when cancellation limit date=2021-01-06T00:00:00" time="0.024">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true activationCode with no expiration date should not be cancellable when cancellation limit date=null" name="&lt;CancellationDetails /&gt; when isDigital = true activationCode with no expiration date should not be cancellable when cancellation limit date=null" time="0.009">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true activationCode with no expiration date should not be cancellable when cancellation limit date=2021-01-02T00:00:00" name="&lt;CancellationDetails /&gt; when isDigital = true activationCode with no expiration date should not be cancellable when cancellation limit date=2021-01-02T00:00:00" time="0.008">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true activationCode with no expiration date should not be cancellable when cancellation limit date=2021-01-06T00:00:00" name="&lt;CancellationDetails /&gt; when isDigital = true activationCode with no expiration date should not be cancellable when cancellation limit date=2021-01-06T00:00:00" time="0.008">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true no activationCode should be cancellable if no cancellation limit date" name="&lt;CancellationDetails /&gt; when isDigital = true no activationCode should be cancellable if no cancellation limit date" time="0.002">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true no activationCode should not be cancellable if limitDate is past" name="&lt;CancellationDetails /&gt; when isDigital = true no activationCode should not be cancellable if limitDate is past" time="0.003">
    </testcase>
    <testcase classname="&lt;CancellationDetails /&gt; when isDigital = true no activationCode should be cancellable before limitDate if future" name="&lt;CancellationDetails /&gt; when isDigital = true no activationCode should be cancellable before limitDate if future" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="useVenueSearchParameters" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:14" time="1.285" tests="4">
    <testcase classname="useVenueSearchParameters should retrieve the default search parameters" name="useVenueSearchParameters should retrieve the default search parameters" time="0.006">
    </testcase>
    <testcase classname="useVenueSearchParameters should retrieve the the venue if available" name="useVenueSearchParameters should retrieve the the venue if available" time="0.041">
    </testcase>
    <testcase classname="useVenueSearchParameters should retrieve the locationFilter filtered around me if no venue - position available" name="useVenueSearchParameters should retrieve the locationFilter filtered around me if no venue - position available" time="0.005">
    </testcase>
    <testcase classname="useVenueSearchParameters should retrieve the locationFilter filtered everywhere if no venue - position unavailable" name="useVenueSearchParameters should retrieve the locationFilter filtered everywhere if no venue - position unavailable" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="fetchOffer" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:13" time="2.068" tests="62">
    <testcase classname="fetchOffer should fetch with provided query and default page number" name="fetchOffer should fetch with provided query and default page number" time="0.004">
    </testcase>
    <testcase classname="fetchOffer should store Algolia query ID after fetching an offer" name="fetchOffer should store Algolia query ID after fetching an offer" time="0.008">
    </testcase>
    <testcase classname="fetchOffer underage should fetch with provided query and default underage filter" name="fetchOffer underage should fetch with provided query and default underage filter" time="0.001">
    </testcase>
    <testcase classname="fetchOffer underage should fetch with facetFilters parameter when one category is provided and when underage" name="fetchOffer underage should fetch with facetFilters parameter when one category is provided and when underage" time="0.002">
    </testcase>
    <testcase classname="fetchOffer query should fetch with provided query" name="fetchOffer query should fetch with provided query" time="0.003">
    </testcase>
    <testcase classname="fetchOffer query should fetch without query parameter when no keyword is provided" name="fetchOffer query should fetch without query parameter when no keyword is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer geolocation should fetch with geolocation coordinates when latitude and longitude are provided" name="fetchOffer geolocation should fetch with geolocation coordinates when latitude and longitude are provided" time="0.002">
    </testcase>
    <testcase classname="fetchOffer geolocation should not fetch with geolocation coordinates when latitude and longitude are not valid" name="fetchOffer geolocation should not fetch with geolocation coordinates when latitude and longitude are not valid" time="0.001">
    </testcase>
    <testcase classname="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude and radius are provided and search is around me" name="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude and radius are provided and search is around me" time="0.001">
    </testcase>
    <testcase classname="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude are provided and search is everywhere without radius" name="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude are provided and search is everywhere without radius" time="0.002">
    </testcase>
    <testcase classname="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude are provided and search is everywhere" name="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude are provided and search is everywhere" time="0.005">
    </testcase>
    <testcase classname="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude, search is around me, and radius equals zero" name="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude, search is around me, and radius equals zero" time="0.002">
    </testcase>
    <testcase classname="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude, search is around me, and radius is null" name="fetchOffer geolocation should fetch offers with geolocation coordinates, when latitude, longitude, search is around me, and radius is null" time="0.002">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with no facetFilters parameter when no category is provided" name="fetchOffer categories and subcategories should fetch with no facetFilters parameter when no category is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when one category is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when one category is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when multiple categories are provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when multiple categories are provided" time="0.002">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when one subcategory is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when one subcategory is provided" time="0.002">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when multiple subcategory is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when multiple subcategory is provided" time="0.006">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when one native category is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when one native category is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when multiple native category is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when multiple native category is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when one movieGenre is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when one movieGenre is provided" time="0.002">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when one bookMacroSection is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when one bookMacroSection is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when one showType is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when one showType is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when one musicType is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when one musicType is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer categories and subcategories should fetch with facetFilters parameter when unknown genre type is provided" name="fetchOffer categories and subcategories should fetch with facetFilters parameter when unknown genre type is provided" time="0.004">
    </testcase>
    <testcase classname="fetchOffer offer types should fetch with no facetFilters when no offer type is provided" name="fetchOffer offer types should fetch with no facetFilters when no offer type is provided" time="0.003">
    </testcase>
    <testcase classname="fetchOffer offer types should fetch with facetFilters when offer is digital" name="fetchOffer offer types should fetch with facetFilters when offer is digital" time="0.002">
    </testcase>
    <testcase classname="fetchOffer offer types should fetch with no facetFilters when offer is not digital" name="fetchOffer offer types should fetch with no facetFilters when offer is not digital" time="0.001">
    </testcase>
    <testcase classname="fetchOffer offer duo should fetch with no facetFilters when offer duo is false" name="fetchOffer offer duo should fetch with no facetFilters when offer duo is false" time="0.014">
    </testcase>
    <testcase classname="fetchOffer offer duo should fetch with facetFilters when offer duo is true" name="fetchOffer offer duo should fetch with facetFilters when offer duo is true" time="0.003">
    </testcase>
    <testcase classname="fetchOffer offer price should fetch with no numericFilters when no price range is specified and offer is not free" name="fetchOffer offer price should fetch with no numericFilters when no price range is specified and offer is not free" time="0.001">
    </testcase>
    <testcase classname="fetchOffer offer price should fetch with numericFilters when offer is free even when priceRange is provided" name="fetchOffer offer price should fetch with numericFilters when offer is free even when priceRange is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer offer price should fetch with numericFilters range when price range is provided and offer is not free" name="fetchOffer offer price should fetch with numericFilters range when price range is provided and offer is not free" time="0.001">
    </testcase>
    <testcase classname="fetchOffer offer price should fetch with minimum price when it is provided" name="fetchOffer offer price should fetch with minimum price when it is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer offer price should fetch with 0 when minimum price is not provided" name="fetchOffer offer price should fetch with 0 when minimum price is not provided" time="0">
    </testcase>
    <testcase classname="fetchOffer offer price should fetch with maximum price when it is provided" name="fetchOffer offer price should fetch with maximum price when it is provided" time="0">
    </testcase>
    <testcase classname="fetchOffer offer price should fetch with 300 when maximum price is not provided" name="fetchOffer offer price should fetch with 300 when maximum price is not provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer date by date only should fetch with date filter when date and today option are provided" name="fetchOffer date by date only should fetch with date filter when date and today option are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer date by date only should fetch with date filter when date and currentWeek option are provided" name="fetchOffer date by date only should fetch with date filter when date and currentWeek option are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer date by date only should fetch with date filter when date and currentWeekEnd option are provided" name="fetchOffer date by date only should fetch with date filter when date and currentWeekEnd option are provided" time="0.006">
    </testcase>
    <testcase classname="fetchOffer date by date only should fetch with date filter when date and picked option are provided" name="fetchOffer date by date only should fetch with date filter when date and picked option are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer date by time only should fetch with time filter when timeRange is provided" name="fetchOffer date by time only should fetch with time filter when timeRange is provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer date by date and time should fetch with date filter when timeRange, date and today option are provided" name="fetchOffer date by date and time should fetch with date filter when timeRange, date and today option are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer date by date and time should fetch with date filter when timeRange, date and currentWeek option are provided" name="fetchOffer date by date and time should fetch with date filter when timeRange, date and currentWeek option are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer date by date and time should fetch with date filter when timeRange, date and currentWeekEnd option are provided" name="fetchOffer date by date and time should fetch with date filter when timeRange, date and currentWeekEnd option are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer date by date and time should fetch with date filter when timeRange, date and picked option are provided" name="fetchOffer date by date and time should fetch with date filter when timeRange, date and picked option are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer multiple parameters should fetch with price and date numericFilters" name="fetchOffer multiple parameters should fetch with price and date numericFilters" time="0.001">
    </testcase>
    <testcase classname="fetchOffer multiple parameters should fetch with price and time numericFilters" name="fetchOffer multiple parameters should fetch with price and time numericFilters" time="0.001">
    </testcase>
    <testcase classname="fetchOffer multiple parameters should fetch with price, date and time numericFilters" name="fetchOffer multiple parameters should fetch with price, date and time numericFilters" time="0">
    </testcase>
    <testcase classname="fetchOffer multiple parameters should fetch with all given search parameters" name="fetchOffer multiple parameters should fetch with all given search parameters" time="0.001">
    </testcase>
    <testcase classname="fetchOffer multiple parameters should fetch duo offers for categories pratique &amp; spectacle around me" name="fetchOffer multiple parameters should fetch duo offers for categories pratique &amp; spectacle around me" time="0">
    </testcase>
    <testcase classname="fetchOffer tags should fetch with no facetFilters parameter when no tags are provided" name="fetchOffer tags should fetch with no facetFilters parameter when no tags are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer tags should fetch with facetFilters parameter when tags are provided" name="fetchOffer tags should fetch with facetFilters parameter when tags are provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer hitsPerPage should fetch with no hitsPerPage parameter when not provided" name="fetchOffer hitsPerPage should fetch with no hitsPerPage parameter when not provided" time="0">
    </testcase>
    <testcase classname="fetchOffer hitsPerPage should fetch with hitsPerPage when provided" name="fetchOffer hitsPerPage should fetch with hitsPerPage when provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer beginningDatetime &amp; endingDatetime should fetch from the beginning datetime" name="fetchOffer beginningDatetime &amp; endingDatetime should fetch from the beginning datetime" time="0.001">
    </testcase>
    <testcase classname="fetchOffer beginningDatetime &amp; endingDatetime should fetch until the ending datetime" name="fetchOffer beginningDatetime &amp; endingDatetime should fetch until the ending datetime" time="0.001">
    </testcase>
    <testcase classname="fetchOffer beginningDatetime &amp; endingDatetime should fetch from the beginning datetime to the ending datetime" name="fetchOffer beginningDatetime &amp; endingDatetime should fetch from the beginning datetime to the ending datetime" time="0.001">
    </testcase>
    <testcase classname="fetchOffer Index name param should fetch Algolia offers index when param not provided" name="fetchOffer Index name param should fetch Algolia offers index when param not provided" time="0.001">
    </testcase>
    <testcase classname="fetchOffer Index name param should fetch a specific Algolia index when param provided" name="fetchOffer Index name param should fetch a specific Algolia index when param provided" time="0">
    </testcase>
    <testcase classname="fetchOffer isFromOffer param should fetch with typoTolerance and distinct when isFromOffer param is true" name="fetchOffer isFromOffer param should fetch with typoTolerance and distinct when isFromOffer param is true" time="0.001">
    </testcase>
    <testcase classname="fetchOffer isFromOffer param should not fetch with typoTolerance and distinct when isFromOffer is false" name="fetchOffer isFromOffer param should not fetch with typoTolerance and distinct when isFromOffer is false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="selectArgTypeFromObject" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:15" time="1.222" tests="1">
    <testcase classname="selectArgTypeFromObject returns the select arg type when options object is provided" name="selectArgTypeFromObject returns the select arg type when options object is provided" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="useLogScrollHandler" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:15" time="1.225" tests="2">
    <testcase classname="useLogScrollHandler should call the log function when element is visible" name="useLogScrollHandler should call the log function when element is visible" time="0.02">
    </testcase>
    <testcase classname="useLogScrollHandler should not call the log function when element is not visible" name="useLogScrollHandler should not call the log function when element is not visible" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="getSimilarOffersInOrder" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:15" time="1.485" tests="2">
    <testcase classname="getSimilarOffersInOrder should return offers in ids array order" name="getSimilarOffersInOrder should return offers in ids array order" time="0.025">
    </testcase>
    <testcase classname="getSimilarOffersInOrder should not return offers in offers array order" name="getSimilarOffersInOrder should not return offers in offers array order" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getAcceptedCookieConsent" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:14" time="1.834" tests="3">
    <testcase classname="getAcceptedCookieConsent should return false if no cookies consent" name="getAcceptedCookieConsent should return false if no cookies consent" time="0.047">
    </testcase>
    <testcase classname="getAcceptedCookieConsent should return false if user accept specific cookie but not the cookie in function parameter" name="getAcceptedCookieConsent should return false if user accept specific cookie but not the cookie in function parameter" time="0.001">
    </testcase>
    <testcase classname="getAcceptedCookieConsent should return true if user accept specific cookie" name="getAcceptedCookieConsent should return true if user accept specific cookie" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Favorites sorts" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:15" time="1.372" tests="6">
    <testcase classname="Favorites sorts should sort by RECENTLY_ADDED (API default sort)" name="Favorites sorts should sort by RECENTLY_ADDED (API default sort)" time="0.001">
    </testcase>
    <testcase classname="Favorites sorts should sort by ASCENDING_PRICE" name="Favorites sorts should sort by ASCENDING_PRICE" time="0">
    </testcase>
    <testcase classname="Favorites sorts should sort by ASCENDING_PRICE and place expired offer last" name="Favorites sorts should sort by ASCENDING_PRICE and place expired offer last" time="0.001">
    </testcase>
    <testcase classname="Favorites sorts should sort by ASCENDING_PRICE and place offer with no price last" name="Favorites sorts should sort by ASCENDING_PRICE and place offer with no price last" time="0.001">
    </testcase>
    <testcase classname="Favorites sorts should sort by AROUND_ME" name="Favorites sorts should sort by AROUND_ME" time="0.001">
    </testcase>
    <testcase classname="Favorites sorts should sort by AROUND_ME and place offer with no coordinates last" name="Favorites sorts should sort by AROUND_ME and place offer with no coordinates last" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getEmailUpdateStep" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:16" time="1.412" tests="4">
    <testcase classname="getEmailUpdateStep should return 0 by default" name="getEmailUpdateStep should return 0 by default" time="0.001">
    </testcase>
    <testcase classname="getEmailUpdateStep should return 1 when user sent an email change request" name="getEmailUpdateStep should return 1 when user sent an email change request" time="0">
    </testcase>
    <testcase classname="getEmailUpdateStep should return 2 when user confirmed his request for change of e-mail on his old e-mail" name="getEmailUpdateStep should return 2 when user confirmed his request for change of e-mail on his old e-mail" time="0.001">
    </testcase>
    <testcase classname="getEmailUpdateStep should return 3 when user validated his request for change of e-mail on his new e-mail" name="getEmailUpdateStep should return 3 when user validated his request for change of e-mail on his new e-mail" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getTagColor" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:16" time="1.026" tests="7">
    <testcase classname="getTagColor should return gold color code" name="getTagColor should return gold color code" time="0.001">
    </testcase>
    <testcase classname="getTagColor should return aquamarine color code" name="getTagColor should return aquamarine color code" time="0.001">
    </testcase>
    <testcase classname="getTagColor should return skyBlue color code" name="getTagColor should return skyBlue color code" time="0.002">
    </testcase>
    <testcase classname="getTagColor should return deepPink color code" name="getTagColor should return deepPink color code" time="0.003">
    </testcase>
    <testcase classname="getTagColor should return coral color code" name="getTagColor should return coral color code" time="0.005">
    </testcase>
    <testcase classname="getTagColor should return lilac color code" name="getTagColor should return lilac color code" time="0.002">
    </testcase>
    <testcase classname="getTagColor should return black color code by default" name="getTagColor should return black color code by default" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="openGoogleMapsItinerary()" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:16" time="1.039" tests="2">
    <testcase classname="openGoogleMapsItinerary() should open the correct encoded url with address" name="openGoogleMapsItinerary() should open the correct encoded url with address" time="0.034">
    </testcase>
    <testcase classname="openGoogleMapsItinerary() should open the correct encoded url with lat,long string" name="openGoogleMapsItinerary() should open the correct encoded url with lat,long string" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Contentful fetchHomepageNatifContent" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:16" time="1.679" tests="1">
    <testcase classname="Contentful fetchHomepageNatifContent should retrieve a list of adapted homepages" name="Contentful fetchHomepageNatifContent should retrieve a list of adapted homepages" time="0.095">
    </testcase>
  </testsuite>
  <testsuite name="buildLocationParameter" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:16" time="1.54" tests="6">
    <testcase classname="buildLocationParameter buildLocationParameter should return undefined when there is no userPosition" name="buildLocationParameter buildLocationParameter should return undefined when there is no userPosition" time="0.003">
    </testcase>
    <testcase classname="buildLocationParameter buildLocationParameter should return a position with a &quot;all&quot; radius when selectedLocationMode is &quot;EVERYWHERE&quot; and there is a userPosition" name="buildLocationParameter buildLocationParameter should return a position with a &quot;all&quot; radius when selectedLocationMode is &quot;EVERYWHERE&quot; and there is a userPosition" time="0.003">
    </testcase>
    <testcase classname="buildLocationParameter buildLocationParameter should return a position with a specified radius when selectedLocationMode is &quot;AROUND_ME&quot; and there is a userPosition" name="buildLocationParameter buildLocationParameter should return a position with a specified radius when selectedLocationMode is &quot;AROUND_ME&quot; and there is a userPosition" time="0.003">
    </testcase>
    <testcase classname="buildLocationParameter buildLocationParameter should return a position with a specified radius when selectedLocationMode is &quot;AROUND_PLACE&quot; and there is a userPosition" name="buildLocationParameter buildLocationParameter should return a position with a specified radius when selectedLocationMode is &quot;AROUND_PLACE&quot; and there is a userPosition" time="0.002">
    </testcase>
    <testcase classname="buildLocationParameter buildLocationParameter should return a position with a minimum radius when selectedLocationMode is &quot;AROUND_ME&quot;, the radius is 0 and there is a userPosition" name="buildLocationParameter buildLocationParameter should return a position with a minimum radius when selectedLocationMode is &quot;AROUND_ME&quot;, the radius is 0 and there is a userPosition" time="0.001">
    </testcase>
    <testcase classname="buildLocationParameter buildLocationParameter should return a position with a minimum radius when selectedLocationMode is &quot;AROUND_PLACE&quot;, the radius is 0 and there is a userPosition" name="buildLocationParameter buildLocationParameter should return a position with a minimum radius when selectedLocationMode is &quot;AROUND_PLACE&quot;, the radius is 0 and there is a userPosition" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CopyToClipboardButton" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:17" time="1.225" tests="4">
    <testcase classname="CopyToClipboardButton should copy to clipboard when pressing the button" name="CopyToClipboardButton should copy to clipboard when pressing the button" time="0.01">
    </testcase>
    <testcase classname="CopyToClipboardButton should call onCopy when text is copied" name="CopyToClipboardButton should call onCopy when text is copied" time="0.009">
    </testcase>
    <testcase classname="CopyToClipboardButton should show success snack bar when text is copied" name="CopyToClipboardButton should show success snack bar when text is copied" time="0.004">
    </testcase>
    <testcase classname="CopyToClipboardButton should show error snack bar if text has not been copied" name="CopyToClipboardButton should show error snack bar if text has not been copied" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="requestGeolocPermission android" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:17" time="1.152" tests="3">
    <testcase classname="requestGeolocPermission android should ask for android permission and return right state if granted" name="requestGeolocPermission android should ask for android permission and return right state if granted" time="0.02">
    </testcase>
    <testcase classname="requestGeolocPermission android should return right state if permission not granted" name="requestGeolocPermission android should return right state if permission not granted" time="0.001">
    </testcase>
    <testcase classname="requestGeolocPermission android should return right state if permission not granted and ask for never_ask_again" name="requestGeolocPermission android should return right state if permission not granted and ask for never_ask_again" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getClusterImage" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:17" time="1.266" tests="4">
    <testcase classname="getClusterImage should show nothing when points are less than 2" name="getClusterImage should show nothing when points are less than 2" time="0.002">
    </testcase>
    <testcase classname="getClusterImage should show cluster of 2 when points are 2" name="getClusterImage should show cluster of 2 when points are 2" time="0">
    </testcase>
    <testcase classname="getClusterImage should show cluster of 9 when points are 9" name="getClusterImage should show cluster of 9 when points are 9" time="0.002">
    </testcase>
    <testcase classname="getClusterImage should show cluster 9+ when points are more than 9" name="getClusterImage should show cluster 9+ when points are more than 9" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="isAddressValid function" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:18" time="1.326" tests="13">
    <testcase classname="isAddressValid function should accept a well-formatted address: 1 " name="isAddressValid function should accept a well-formatted address: 1 " time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should accept a well-formatted address: 1" name="isAddressValid function should accept a well-formatted address: 1" time="0">
    </testcase>
    <testcase classname="isAddressValid function should accept a well-formatted address: 1 rue" name="isAddressValid function should accept a well-formatted address: 1 rue" time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should accept a well-formatted address: 1, rue de Loïc-Raison" name="isAddressValid function should accept a well-formatted address: 1, rue de Loïc-Raison" time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should accept a well-formatted address: àâçéèêîôœùûÀÂÇÉÈÊÎÔŒÙÛ" name="isAddressValid function should accept a well-formatted address: àâçéèêîôœùûÀÂÇÉÈÊÎÔŒÙÛ" time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should accept a well-formatted address: 1 rue de l’artillerie" name="isAddressValid function should accept a well-formatted address: 1 rue de l’artillerie" time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should accept a well-formatted address: 1 rue de l&apos;artillerie" name="isAddressValid function should accept a well-formatted address: 1 rue de l&apos;artillerie" time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should reject a unwell-formatted address: J@hn" name="isAddressValid function should reject a unwell-formatted address: J@hn" time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should reject a unwell-formatted address: ჯონ" name="isAddressValid function should reject a unwell-formatted address: ჯონ" time="0.002">
    </testcase>
    <testcase classname="isAddressValid function should reject a unwell-formatted address: 𝘑𝘦𝘢𝘯 𝘩𝘦𝘯𝘳𝘺" name="isAddressValid function should reject a unwell-formatted address: 𝘑𝘦𝘢𝘯 𝘩𝘦𝘯𝘳𝘺" time="0.002">
    </testcase>
    <testcase classname="isAddressValid function should reject a unwell-formatted address:  " name="isAddressValid function should reject a unwell-formatted address:  " time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should reject a unwell-formatted address:   " name="isAddressValid function should reject a unwell-formatted address:   " time="0.001">
    </testcase>
    <testcase classname="isAddressValid function should reject a unwell-formatted address: 1() rue de Loïc-Raison" name="isAddressValid function should reject a unwell-formatted address: 1() rue de Loïc-Raison" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getOfferLocationName" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:18" time="1.305" tests="3">
    <testcase classname="getOfferLocationName should return offerer name when is digital offer" name="getOfferLocationName should return offerer name when is digital offer" time="0.002">
    </testcase>
    <testcase classname="getOfferLocationName not digital offer should return venue publicName when venue.publicName is defined" name="getOfferLocationName not digital offer should return venue publicName when venue.publicName is defined" time="0">
    </testcase>
    <testcase classname="getOfferLocationName not digital offer should return venue name when venue.publicName is undefined" name="getOfferLocationName not digital offer should return venue name when venue.publicName is undefined" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="getCookiesChoiceFromCategories" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:18" time="1.305" tests="3">
    <testcase classname="getCookiesChoiceFromCategories should refuse all cookies if all categories are disabled" name="getCookiesChoiceFromCategories should refuse all cookies if all categories are disabled" time="0.002">
    </testcase>
    <testcase classname="getCookiesChoiceFromCategories should accept all cookies if all categories are enabled" name="getCookiesChoiceFromCategories should accept all cookies if all categories are enabled" time="0">
    </testcase>
    <testcase classname="getCookiesChoiceFromCategories should accept or refuse certain cookies depending on category choice" name="getCookiesChoiceFromCategories should accept or refuse certain cookies depending on category choice" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="formatFullAddress" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:18" time="1.144" tests="37">
    <testcase classname="formatFullAddress should format correctly full address = " name="formatFullAddress should format correctly full address = " time="0.002">
    </testcase>
    <testcase classname="formatFullAddress should format correctly full address = 2 rue des champs, 75015 Paris" name="formatFullAddress should format correctly full address = 2 rue des champs, 75015 Paris" time="0.001">
    </testcase>
    <testcase classname="formatFullAddress should format correctly full address = 2 rue des champs, Paris" name="formatFullAddress should format correctly full address = 2 rue des champs, Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddress should format correctly full address = 2 rue des champs, Paris" name="formatFullAddress should format correctly full address = 2 rue des champs, Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddress should format correctly full address = 2 rue des champs, 75015" name="formatFullAddress should format correctly full address = 2 rue des champs, 75015" time="0">
    </testcase>
    <testcase classname="formatFullAddress should format correctly full address = 2 rue des champs, 75015" name="formatFullAddress should format correctly full address = 2 rue des champs, 75015" time="0.001">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = " name="formatFullAddressWithVenueName should format correctly full address with venue name = " time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, 2 rue des champs, 75015 Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, 2 rue des champs, 75015 Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, 75015 Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, 75015 Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, Paris" time="0.001">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé" name="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 75015 Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 75015 Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 75015" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 75015" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, Paris" time="0.001">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, 75015" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, 75015" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, 2 rue des champs, 75015 Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, 2 rue des champs, 75015 Paris" time="0.001">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, 75015 Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, 75015 Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé, Paris" time="0.001">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé" name="formatFullAddressWithVenueName should format correctly full address with venue name = Ciné Pathé" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 75015 Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 75015 Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 75015" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 75015" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs" time="0.001">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, 75015" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, 75015" time="0">
    </testcase>
    <testcase classname="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, Paris" name="formatFullAddressWithVenueName should format correctly full address with venue name = Pathé beaugrenelle, 2 rue des champs, Paris" time="0">
    </testcase>
    <testcase classname="formatFullAddressStartsWithPostalCode should return an empty string when postal code, city and address not defined" name="formatFullAddressStartsWithPostalCode should return an empty string when postal code, city and address not defined" time="0">
    </testcase>
    <testcase classname="formatFullAddressStartsWithPostalCode should return formatted address with only postal code" name="formatFullAddressStartsWithPostalCode should return formatted address with only postal code" time="0">
    </testcase>
    <testcase classname="formatFullAddressStartsWithPostalCode should return formatted address with only city" name="formatFullAddressStartsWithPostalCode should return formatted address with only city" time="0.001">
    </testcase>
    <testcase classname="formatFullAddressStartsWithPostalCode should return formatted address with only address" name="formatFullAddressStartsWithPostalCode should return formatted address with only address" time="0">
    </testcase>
    <testcase classname="formatFullAddressStartsWithPostalCode should return formatted address with postal code and city" name="formatFullAddressStartsWithPostalCode should return formatted address with postal code and city" time="0.002">
    </testcase>
    <testcase classname="formatFullAddressStartsWithPostalCode should return formatted address with postal code and address" name="formatFullAddressStartsWithPostalCode should return formatted address with postal code and address" time="0.001">
    </testcase>
    <testcase classname="formatFullAddressStartsWithPostalCode should return formatted address with city and address" name="formatFullAddressStartsWithPostalCode should return formatted address with city and address" time="0">
    </testcase>
    <testcase classname="formatFullAddressStartsWithPostalCode should return formatted address with postal code, city and address" name="formatFullAddressStartsWithPostalCode should return formatted address with postal code, city and address" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OfferMetadataItem /&gt;" errors="0" failures="0" skipped="0" timestamp="2024-03-27T08:59:19" time="0.779" tests="2">
    <testcase classname="&lt;OfferMetadataItem /&gt; should display metadata label" name="&lt;OfferMetadataItem /&gt; should display metadata label" time="0.07">
    </testcase>
    <testcase classname="&lt;OfferMetadataItem /&gt; should display metadata value" name="&lt;OfferMetadataItem /&gt; should display metadata value" time="0.002">
    </testcase>
  </testsuite>
</testsuites>