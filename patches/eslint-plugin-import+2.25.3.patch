diff --git a/node_modules/eslint-plugin-import/lib/rules/no-extraneous-dependencies.js b/node_modules/eslint-plugin-import/lib/rules/no-extraneous-dependencies.js
index 6a14031..ec2e1a7 100644
--- a/node_modules/eslint-plugin-import/lib/rules/no-extraneous-dependencies.js
+++ b/node_modules/eslint-plugin-import/lib/rules/no-extraneous-dependencies.js
@@ -179,6 +179,7 @@ function reportIfMissing(context, deps, depsOptions, node, name) {
 
   if (
   declarationStatus.isInDeps ||
+  depsOptions.allowIgnoreImports ||
   depsOptions.allowDevDeps && declarationStatus.isInDevDeps ||
   depsOptions.allowPeerDeps && declarationStatus.isInPeerDeps ||
   depsOptions.allowOptDeps && declarationStatus.isInOptDeps ||
@@ -195,6 +196,7 @@ function reportIfMissing(context, deps, depsOptions, node, name) {
 
     if (
     declarationStatus.isInDeps ||
+    depsOptions.allowIgnoreImports ||
     depsOptions.allowDevDeps && declarationStatus.isInDevDeps ||
     depsOptions.allowPeerDeps && declarationStatus.isInPeerDeps ||
     depsOptions.allowOptDeps && declarationStatus.isInOptDeps ||
@@ -229,6 +231,14 @@ function testConfig(config, filename) {
 
 }
 
+function testIgnoreImports(config, filename) {
+  if (typeof config === 'undefined') {
+    return false
+  }
+  return config.some(function (c) {return (
+      filename.includes(c.substr(0, 2) === './' ? c.replace('.', process.cwd()) : c));});
+}
+
 module.exports = {
   meta: {
     type: 'problem',
@@ -244,6 +254,7 @@ module.exports = {
         'optionalDependencies': { 'type': ['boolean', 'array'] },
         'peerDependencies': { 'type': ['boolean', 'array'] },
         'bundledDependencies': { 'type': ['boolean', 'array'] },
+        'ignoreImports': { 'type': ['array'] },
         'packageDir': { 'type': ['string', 'array'] } },
 
       'additionalProperties': false }] },
@@ -257,6 +268,7 @@ module.exports = {
       var deps = getDependencies(context, options.packageDir) || extractDepFields({});
 
       var depsOptions = {
+        allowIgnoreImports: testIgnoreImports(options.ignoreImports, filename) !== false,
         allowDevDeps: testConfig(options.devDependencies, filename) !== false,
         allowOptDeps: testConfig(options.optionalDependencies, filename) !== false,
         allowPeerDeps: testConfig(options.peerDependencies, filename) !== false,
