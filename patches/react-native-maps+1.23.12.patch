diff --git a/node_modules/react-native-maps/src/AnimatedRegion.ts b/node_modules/react-native-maps/src/AnimatedRegion.ts
index 03b995c..a7af504 100644
--- a/node_modules/react-native-maps/src/AnimatedRegion.ts
+++ b/node_modules/react-native-maps/src/AnimatedRegion.ts
@@ -136,7 +136,7 @@ export default class AnimatedMapRegion extends AnimatedWithChildren {
   }
 
   spring(config: Animated.SpringAnimationConfig & Region) {
-    const animations = [];
+    const animations: Animated.CompositeAnimation[] = [];
     for (const type of configTypes) {
       if (config.hasOwnProperty(type)) {
         animations.push(
@@ -153,7 +153,7 @@ export default class AnimatedMapRegion extends AnimatedWithChildren {
   }
 
   timing(config: Animated.TimingAnimationConfig & Region) {
-    const animations = [];
+    const animations: Animated.CompositeAnimation[] = [];
     for (const type of configTypes) {
       if (config.hasOwnProperty(type)) {
         animations.push(
diff --git a/node_modules/react-native-maps/src/Geojson.tsx b/node_modules/react-native-maps/src/Geojson.tsx
index 549c0d6..9e1b7bb 100644
--- a/node_modules/react-native-maps/src/Geojson.tsx
+++ b/node_modules/react-native-maps/src/Geojson.tsx
@@ -385,14 +385,14 @@ const makeOverlayForAnyPolygon = (
 ): Omit<AnyPolygonOverlay, 'type'> => {
   return {
     feature,
-    coordinates: coordinates[0],
+    coordinates: coordinates[0] || [],
     holes: coordinates.length > 1 ? coordinates.slice(1) : undefined,
   };
 };
 
 const makePoint = (c: Position): LatLng => ({
-  latitude: c[1],
-  longitude: c[0],
+  latitude: c[1] ?? 0,
+  longitude: c[0] ?? 0,
 });
 
 const makeLine = (l: Position[]) => l.map(makePoint);
diff --git a/node_modules/react-native-maps/src/MapOverlay.tsx b/node_modules/react-native-maps/src/MapOverlay.tsx
index 9c2cd2a..26f8a06 100644
--- a/node_modules/react-native-maps/src/MapOverlay.tsx
+++ b/node_modules/react-native-maps/src/MapOverlay.tsx
@@ -79,8 +79,8 @@ type NativeProps = Modify<MapOverlayProps, {image?: string}>;
 
 function normalizeBounds(bounds: [number, number][]): any {
   return {
-    northEast: {latitude: bounds[0][0], longitude: bounds[0][1]},
-    southWest: {latitude: bounds[1][0], longitude: bounds[1][1]},
+    northEast: {latitude: bounds[0]?.[0] ?? 0, longitude: bounds[0]?.[1] ?? 0},
+    southWest: {latitude: bounds[1]?.[0] ?? 0, longitude: bounds[1]?.[1] ?? 0},
   };
 }
 
diff --git a/node_modules/react-native-maps/src/decorateMapComponent.ts b/node_modules/react-native-maps/src/decorateMapComponent.ts
index 3b52d77..df610fe 100644
--- a/node_modules/react-native-maps/src/decorateMapComponent.ts
+++ b/node_modules/react-native-maps/src/decorateMapComponent.ts
@@ -119,12 +119,12 @@ export default function decorateMapComponent<Type extends Component>(
       }
       const key = provider || 'default';
       if (components[key]) {
-        return components[key];
+        return components[key] as NativeComponent<unknown>;
       }
 
       if (provider === PROVIDER_DEFAULT) {
         components[key] = getDefaultComponent();
-        return components[key];
+        return components[key] as NativeComponent<unknown>;
       }
 
       if (!provider) {
@@ -163,7 +163,7 @@ export default function decorateMapComponent<Type extends Component>(
         components[key] = components.default;
       }
 
-      return components[key];
+      return components[key] as NativeComponent<unknown>;
     };
 
   Component.prototype.getUIManagerCommand = function getUIManagerCommand(
@@ -173,7 +173,7 @@ export default function decorateMapComponent<Type extends Component>(
       this.context,
       componentName,
     );
-    return UIManager.getViewManagerConfig(nativeComponentName).Commands[name];
+    return UIManager.getViewManagerConfig(nativeComponentName)?.Commands?.[name] ?? 0;
   };
 
   Component.prototype.getMapManagerCommand = function getMapManagerCommand(
