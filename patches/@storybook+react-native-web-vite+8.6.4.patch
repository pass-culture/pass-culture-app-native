diff --git a/node_modules/@storybook/react-native-web-vite/dist/preset.js b/node_modules/@storybook/react-native-web-vite/dist/preset.js
index 474ccf6..f8ee6e4 100644
--- a/node_modules/@storybook/react-native-web-vite/dist/preset.js
+++ b/node_modules/@storybook/react-native-web-vite/dist/preset.js
@@ -1 +1 @@
-"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var preset_exports={};__export(preset_exports,{core:()=>core,reactNativeWeb:()=>reactNativeWeb,viteFinal:()=>viteFinal});module.exports=__toCommonJS(preset_exports);var import_preset=require("@storybook/react-vite/preset"),import_vite_plugin_flow=require("@bunchtogether/vite-plugin-flow"),import_plugin_react=__toESM(require("@vitejs/plugin-react")),import_vite_plugin_babel=__toESM(require("vite-plugin-babel")),import_vite_plugin_commonjs=__toESM(require("vite-plugin-commonjs")),import_vite_tsconfig_paths=__toESM(require("vite-tsconfig-paths"));function reactNativeWeb(){return{name:"vite:react-native-web",config(_userConfig,env){return{define:{"global.__x":{},_frameTimestamp:void 0,_WORKLET:!1,__DEV__:`${env.mode==="development"}`,"process.env.NODE_ENV":JSON.stringify(process.env.NODE_ENV||env.mode)},optimizeDeps:{include:[],esbuildOptions:{jsx:"automatic",resolveExtensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],loader:{".js":"jsx"}}},resolve:{extensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],alias:{"react-native":"react-native-web"}}}}}}var viteFinal=async(config,options)=>{let{mergeConfig}=await import("vite"),{pluginReactOptions={},pluginBabelOptions={}}=await options.presets.apply("frameworkOptions"),isDevelopment=options.configType!=="PRODUCTION",{plugins=[],...reactConfigWithoutPlugins}=await(0,import_preset.viteFinal)(config,options);return mergeConfig(reactConfigWithoutPlugins,{plugins:[(0,import_vite_tsconfig_paths.default)(),(0,import_vite_plugin_flow.flowPlugin)({exclude:[/node_modules\/(?!react-native|@react-native)/]}),(0,import_plugin_react.default)({...pluginReactOptions,jsxRuntime:pluginReactOptions.jsxRuntime||"automatic",babel:{babelrc:!1,configFile:!1,...pluginReactOptions.babel}}),(0,import_vite_plugin_babel.default)({...pluginBabelOptions,include:pluginBabelOptions.include||[/node_modules\/(react-native|@react-native)/],exclude:pluginBabelOptions.exclude,babelConfig:{...pluginBabelOptions.babelConfig,babelrc:!1,configFile:!1,presets:[["@babel/preset-react",{development:isDevelopment,runtime:"automatic",...pluginBabelOptions.presetReact||{}}],...pluginBabelOptions.babelConfig?.presets||[]],plugins:[["@babel/plugin-transform-modules-commonjs",{strict:!1,strictMode:!1,allowTopLevelThis:!0}],...pluginBabelOptions.babelConfig?.plugins||[]]}}),...plugins,reactNativeWeb(),(0,import_vite_plugin_commonjs.default)()],optimizeDeps:{esbuildOptions:{plugins:[(0,import_vite_plugin_flow.esbuildFlowPlugin)(new RegExp(/\.(flow|jsx?)$/),_path=>"jsx")]}}})},core={builder:"@storybook/builder-vite",renderer:"@storybook/react"};0&&(module.exports={core,reactNativeWeb,viteFinal});
+"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var preset_exports={};__export(preset_exports,{core:()=>core,reactNativeWeb:()=>reactNativeWeb,viteFinal:()=>viteFinal});module.exports=__toCommonJS(preset_exports);var import_preset=require("@storybook/react-vite/preset"),import_vite_plugin_flow=require("@bunchtogether/vite-plugin-flow"),import_plugin_react=__toESM(require("@vitejs/plugin-react")),import_vite_plugin_babel=__toESM(require("vite-plugin-babel")),import_vite_plugin_commonjs=__toESM(require("vite-plugin-commonjs")),import_vite_tsconfig_paths=__toESM(require("vite-tsconfig-paths"));function reactNativeWeb(){return{name:"vite:react-native-web",config(_userConfig,env){return{define:{"global.__x":{},_frameTimestamp:void 0,_WORKLET:!1,__DEV__:`${env.mode==="development"}`,"process.env.NODE_ENV":JSON.stringify(process.env.NODE_ENV||env.mode)},optimizeDeps:{include:[],esbuildOptions:{jsx:"transform",resolveExtensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],loader:{".js":"jsx"}}},resolve:{extensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],alias:{"react-native":"react-native-web"}}}}}}var viteFinal=async(config,options)=>{let{mergeConfig}=await import("vite"),{pluginReactOptions={},pluginBabelOptions={}}=await options.presets.apply("frameworkOptions"),isDevelopment=options.configType!=="PRODUCTION",{plugins=[],...reactConfigWithoutPlugins}=await(0,import_preset.viteFinal)(config,options);return mergeConfig(reactConfigWithoutPlugins,{plugins:[(0,import_vite_tsconfig_paths.default)(),(0,import_vite_plugin_flow.flowPlugin)({exclude:[/node_modules\/(?!react-native|@react-native)/]}),(0,import_plugin_react.default)({...pluginReactOptions,jsxRuntime:pluginReactOptions.jsxRuntime||"automatic",babel:{babelrc:!1,configFile:!1,...pluginReactOptions.babel}}),(0,import_vite_plugin_babel.default)({...pluginBabelOptions,include:pluginBabelOptions.include||[/node_modules\/(react-native|@react-native)/],exclude:pluginBabelOptions.exclude,babelConfig:{...pluginBabelOptions.babelConfig,babelrc:!1,configFile:true,presets:[["@babel/preset-react",{development:isDevelopment,runtime:"automatic",...pluginBabelOptions.presetReact||{}}],...pluginBabelOptions.babelConfig?.presets||[]],plugins:[["@babel/plugin-transform-modules-commonjs",{strict:!1,strictMode:!1,allowTopLevelThis:!0}],...pluginBabelOptions.babelConfig?.plugins||[]]}}),...plugins,reactNativeWeb(),(0,import_vite_plugin_commonjs.default)()],optimizeDeps:{esbuildOptions:{plugins:[(0,import_vite_plugin_flow.esbuildFlowPlugin)(new RegExp(/\.(flow|jsx?)$/),_path=>"jsx")]}}})},core={builder:"@storybook/builder-vite",renderer:"@storybook/react"};0&&(module.exports={core,reactNativeWeb,viteFinal});
diff --git a/node_modules/@storybook/react-native-web-vite/dist/vite-plugin.js b/node_modules/@storybook/react-native-web-vite/dist/vite-plugin.js
index 3065c75..a16d0d3 100644
--- a/node_modules/@storybook/react-native-web-vite/dist/vite-plugin.js
+++ b/node_modules/@storybook/react-native-web-vite/dist/vite-plugin.js
@@ -1 +1 @@
-"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var vite_plugin_exports={};__export(vite_plugin_exports,{storybookReactNativeWeb:()=>storybookReactNativeWeb});module.exports=__toCommonJS(vite_plugin_exports);var import_plugin_react2=__toESM(require("@vitejs/plugin-react")),import_vite_tsconfig_paths2=__toESM(require("vite-tsconfig-paths"));var import_preset=require("@storybook/react-vite/preset"),import_vite_plugin_flow=require("@bunchtogether/vite-plugin-flow"),import_plugin_react=__toESM(require("@vitejs/plugin-react")),import_vite_plugin_babel=__toESM(require("vite-plugin-babel")),import_vite_plugin_commonjs=__toESM(require("vite-plugin-commonjs")),import_vite_tsconfig_paths=__toESM(require("vite-tsconfig-paths"));function reactNativeWeb(){return{name:"vite:react-native-web",config(_userConfig,env){return{define:{"global.__x":{},_frameTimestamp:void 0,_WORKLET:!1,__DEV__:`${env.mode==="development"}`,"process.env.NODE_ENV":JSON.stringify(process.env.NODE_ENV||env.mode)},optimizeDeps:{include:[],esbuildOptions:{jsx:"automatic",resolveExtensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],loader:{".js":"jsx"}}},resolve:{extensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],alias:{"react-native":"react-native-web"}}}}}}var storybookReactNativeWeb=()=>[(0,import_vite_tsconfig_paths2.default)(),(0,import_plugin_react2.default)({babel:{babelrc:!1,configFile:!1},jsxRuntime:"automatic"}),reactNativeWeb()];0&&(module.exports={storybookReactNativeWeb});
+"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var vite_plugin_exports={};__export(vite_plugin_exports,{storybookReactNativeWeb:()=>storybookReactNativeWeb});module.exports=__toCommonJS(vite_plugin_exports);var import_plugin_react2=__toESM(require("@vitejs/plugin-react")),import_vite_tsconfig_paths2=__toESM(require("vite-tsconfig-paths"));var import_preset=require("@storybook/react-vite/preset"),import_vite_plugin_flow=require("@bunchtogether/vite-plugin-flow"),import_plugin_react=__toESM(require("@vitejs/plugin-react")),import_vite_plugin_babel=__toESM(require("vite-plugin-babel")),import_vite_plugin_commonjs=__toESM(require("vite-plugin-commonjs")),import_vite_tsconfig_paths=__toESM(require("vite-tsconfig-paths"));function reactNativeWeb(){return{name:"vite:react-native-web",config(_userConfig,env){return{define:{"global.__x":{},_frameTimestamp:void 0,_WORKLET:!1,__DEV__:`${env.mode==="development"}`,"process.env.NODE_ENV":JSON.stringify(process.env.NODE_ENV||env.mode)},optimizeDeps:{include:[],esbuildOptions:{jsx:"transform",resolveExtensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],loader:{".js":"jsx"}}},resolve:{extensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],alias:{"react-native":"react-native-web"}}}}}}var storybookReactNativeWeb=()=>[(0,import_vite_tsconfig_paths2.default)(),(0,import_plugin_react2.default)({babel:{babelrc:!1,configFile:!1},jsxRuntime:"automatic"}),reactNativeWeb()];0&&(module.exports={storybookReactNativeWeb});
diff --git a/node_modules/@storybook/react-native-web-vite/dist/vite-plugin.mjs b/node_modules/@storybook/react-native-web-vite/dist/vite-plugin.mjs
index a16e489..81bab17 100644
--- a/node_modules/@storybook/react-native-web-vite/dist/vite-plugin.mjs
+++ b/node_modules/@storybook/react-native-web-vite/dist/vite-plugin.mjs
@@ -5,6 +5,6 @@ import '@bunchtogether/vite-plugin-flow';
 import 'vite-plugin-babel';
 import 'vite-plugin-commonjs';
 
-function reactNativeWeb(){return {name:"vite:react-native-web",config(_userConfig,env){return {define:{"global.__x":{},_frameTimestamp:void 0,_WORKLET:!1,__DEV__:`${env.mode==="development"}`,"process.env.NODE_ENV":JSON.stringify(process.env.NODE_ENV||env.mode)},optimizeDeps:{include:[],esbuildOptions:{jsx:"automatic",resolveExtensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],loader:{".js":"jsx"}}},resolve:{extensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],alias:{"react-native":"react-native-web"}}}}}}var storybookReactNativeWeb=()=>[tsconfigPaths2(),react2({babel:{babelrc:!1,configFile:!1},jsxRuntime:"automatic"}),reactNativeWeb()];
+function reactNativeWeb(){return {name:"vite:react-native-web",config(_userConfig,env){return {define:{"global.__x":{},_frameTimestamp:void 0,_WORKLET:!1,__DEV__:`${env.mode==="development"}`,"process.env.NODE_ENV":JSON.stringify(process.env.NODE_ENV||env.mode)},optimizeDeps:{include:[],esbuildOptions:{jsx:"transform",resolveExtensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],loader:{".js":"jsx"}}},resolve:{extensions:[".web.js",".web.ts",".web.tsx",".js",".jsx",".json",".ts",".tsx",".mjs"],alias:{"react-native":"react-native-web"}}}}}}var storybookReactNativeWeb=()=>[tsconfigPaths2(),react2({babel:{babelrc:!1,configFile:!1},jsxRuntime:"automatic"}),reactNativeWeb()];
 
 export { storybookReactNativeWeb };
diff --git a/node_modules/@storybook/react-native-web-vite/template/cli/js/Header.jsx b/node_modules/@storybook/react-native-web-vite/template/cli/js/Header.jsx
index 1a376b9..ebc34b8 100644
--- a/node_modules/@storybook/react-native-web-vite/template/cli/js/Header.jsx
+++ b/node_modules/@storybook/react-native-web-vite/template/cli/js/Header.jsx
@@ -13,9 +13,10 @@ export const Header = ({ user, onLogin, onLogout, onCreateAccount }) => (
       <View style={styles.buttonContainer}>
         {user ? (
           <>
-            <Text>Welcome, </Text>
-            <Text style={styles.userName}>{user.name}!</Text>
-
+            <>
+              <Text>Welcome, </Text>
+              <Text style={styles.userName}>{user.name}!</Text>
+            </>
             <Button style={styles.button} size="small" onPress={onLogout} label="Log out" />
           </>
         ) : (
diff --git a/node_modules/@storybook/react-native-web-vite/template/cli/js/Page.jsx b/node_modules/@storybook/react-native-web-vite/template/cli/js/Page.jsx
index 19c4b4c..81aa45a 100644
--- a/node_modules/@storybook/react-native-web-vite/template/cli/js/Page.jsx
+++ b/node_modules/@storybook/react-native-web-vite/template/cli/js/Page.jsx
@@ -42,15 +42,15 @@ export const Page = () => {
         </Text>
 
         <View>
-          <Text>
+          <View>
             Use a higher-level connected component. Storybook helps you compose such data from the
             "args" of child component stories
-          </Text>
+          </View>
 
-          <Text>
+          <View>
             Assemble data in the page component from your services. You can mock these services out
             using Storybook.
-          </Text>
+          </View>
         </View>
 
         <Text style={styles.p}>
diff --git a/node_modules/@storybook/react-native-web-vite/template/cli/ts-4-9/Header.tsx b/node_modules/@storybook/react-native-web-vite/template/cli/ts-4-9/Header.tsx
index da77b39..4f8fcf7 100644
--- a/node_modules/@storybook/react-native-web-vite/template/cli/ts-4-9/Header.tsx
+++ b/node_modules/@storybook/react-native-web-vite/template/cli/ts-4-9/Header.tsx
@@ -3,7 +3,7 @@ import { StyleSheet, Text, View } from 'react-native';
 import { Button } from './Button';
 
 export type HeaderProps = {
-  user?: { name: string };
+  user?: {};
   onLogin: () => void;
   onLogout: () => void;
   onCreateAccount: () => void;
@@ -18,9 +18,10 @@ export const Header = ({ user, onLogin, onLogout, onCreateAccount }: HeaderProps
       <View style={styles.buttonContainer}>
         {user ? (
           <>
-            <Text>Welcome, </Text>
-            <Text style={styles.userName}>{user.name}!</Text>
-
+            <>
+              <Text>Welcome, </Text>
+              <Text style={styles.userName}>{user.name}!</Text>
+            </>
             <Button style={styles.button} size="small" onPress={onLogout} label="Log out" />
           </>
         ) : (
diff --git a/node_modules/@storybook/react-native-web-vite/template/cli/ts-4-9/Page.tsx b/node_modules/@storybook/react-native-web-vite/template/cli/ts-4-9/Page.tsx
index 1c9a719..44ca010 100644
--- a/node_modules/@storybook/react-native-web-vite/template/cli/ts-4-9/Page.tsx
+++ b/node_modules/@storybook/react-native-web-vite/template/cli/ts-4-9/Page.tsx
@@ -5,7 +5,7 @@ import { Linking, StyleSheet, Text, View } from 'react-native';
 import { Header } from './Header';
 
 export const Page = () => {
-  const [user, setUser] = useState<{ name: string } | undefined>();
+  const [user, setUser] = useState();
 
   return (
     <View>
@@ -39,14 +39,14 @@ export const Page = () => {
           data in Storybook:
         </Text>
         <View>
-          <Text>
+          <View>
             Use a higher-level connected component. Storybook helps you compose such data from the
             "args" of child component stories
-          </Text>
-          <Text>
+          </View>
+          <View>
             Assemble data in the page component from your services. You can mock these services out
             using Storybook.
-          </Text>
+          </View>
         </View>
         <Text style={styles.p}>
           Get a guided tutorial on component-driven development at{' '}
