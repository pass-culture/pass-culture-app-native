version: 2.1
commands:
  install_node_modules:
    description: Install Node Dependencies
    steps:
      - restore_cache:
          name: Restore Node Modules
          keys:
            - node-modules-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - save_cache:
          name: Save Node Modules
          key: node-modules-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  install_ruby_modules:
    description: Install Ruby Dependencies
    steps:
      - restore_cache:
          name: Restore Gem dependencies
          key: bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Gem dependencies
          command: |
            bundle install --path=vendor/bundle
      - save_cache:
          name: Save Gem dependencies
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.bundle/
            - vendor/bundle

jobs:
  run-tests:
    working_directory: ~/pass-culture-app-native
    docker:
      - image: cimg/node:12.16
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - install_node_modules
      - run:
          name: Linter
          command: |
            yarn test:lint
      - run:
          name: Typescript Type Check
          command: |
            yarn test:types
      - run:
          name: Unit Tests
          command: |
            yarn test:unit

  deploy-android-testing-soft:
    working_directory: ~/pass-culture-app-native
    docker:
      - image: circleci/android:api-28-node
    steps:
      - checkout
      - install_node_modules
      - install_ruby_modules
      - run:
          name: Deploy Android App for testing environment
          command: |
            export APPCENTER_API_TOKEN=$APPCENTER_API_TOKEN_TESTING
            export CODEPUSH_KEY_ANDROID=$CODEPUSH_KEY_ANDROID_TESTING
            ./scripts/deploy.sh -o android -t soft -e testing

  deploy-android-testing-hard:
    docker:
      - image: circleci/android:api-28-node
    steps:
      - checkout
      - install_node_modules
      - install_ruby_modules
      - run:
          name: Setup android keystore for testing environment
          command: |
            mkdir -p android/keystores
            echo $ANDROID_KEYSTORE_TESTING | base64 -di > android/keystores/testing.keystore
            echo "keyAlias=passculture" >> android/keystores/testing.keystore.properties
            echo "storeFile=testing.keystore" >> android/keystores/testing.keystore.properties
            echo "storePassword=$ANDROID_KEYSTORE_STORE_PASSWORD_TESTING" >> android/keystores/testing.keystore.properties
            echo "keyPassword=$ANDROID_KEYSTORE_KEY_PASSWORD_TESTING" >>  android/keystores/testing.keystore.properties
      - run:
          name: Deploy Android App for testing environment
          command: |
            export APPCENTER_API_TOKEN=$APPCENTER_API_TOKEN_TESTING
            export CODEPUSH_KEY_ANDROID=$CODEPUSH_KEY_ANDROID_TESTING
            ./scripts/deploy.sh -o android -t hard -e testing

  deploy-android-staging:
    docker:
      - image: circleci/android:api-28-node
    steps:
      - checkout
      - install_node_modules
      - install_ruby_modules
      - run:
          name: Setup android keystore for staging environment
          command: |
            mkdir -p android/keystores
            echo $ANDROID_KEYSTORE_STAGING | base64 -di > android/keystores/staging.keystore
            echo "keyAlias=passculture" >> android/keystores/staging.keystore.properties
            echo "storeFile=staging.keystore" >> android/keystores/staging.keystore.properties
            echo "storePassword=$ANDROID_KEYSTORE_STORE_PASSWORD_STAGING" >> android/keystores/staging.keystore.properties
            echo "keyPassword=$ANDROID_KEYSTORE_KEY_PASSWORD_STAGING" >>  android/keystores/staging.keystore.properties
      - run:
          name: Deploy Android App for staging environment
          command: |
            export APPCENTER_API_TOKEN=$APPCENTER_API_TOKEN_STAGING
            export CODEPUSH_KEY_ANDROID=$CODEPUSH_KEY_ANDROID_STAGING
            ./scripts/deploy.sh -o android -t hard -e staging

workflows:
  version: 2.1
  commit:
    jobs:
      - run-tests
      - deploy-android-testing-soft:
          filters:
            branches:
              only:
                - master
          requires:
            - run-tests
      - deploy-android-testing-hard:
          filters:
            branches:
              only:
                - fake-master
            tags:
              only:
                - /^testing_v[0-9]+(\.[0-9]+){2}$/
          # requires:
          #   - run-tests
      - deploy-android-staging:
          filters:
            branches:
              only:
                - staging
          requires:
            - run-tests
