{
    "E2E feature template": {
      "prefix": "e2e-feature",
      "scope": "javascript, typescript",
      "description": "Template for e2e feature that will be used for e2e tests",
      "body": [
          "import AppScreen from '../../screenobjects/AppScreen'",
          "import { \\$\\$\\$ } from '../../helpers/utils/selector'",
          "",
          "class PageName extends AppScreen {",
          "  constructor() {",
          "\tsuper('Accessibility id of the element to wait for in the screen', true)",
          "  }",
          "",
          "  get element() {",
          "\treturn \\$\\$\\$('Accessibility id of the element')",
          "  }",
          "",
          "  async action() {",
          "\tawait this.waitForIsShown(true)",
          "\tawait this.element.click()",
          "\tawait this.waitForIsShown(false)",
          "  }",
          "}",
          "",
          "export default new PageName()",
          ""
      ]
    },
    "E2E test template": {
      "prefix": "e2e-test",
      "scope": "javascript, typescript",
      "description": "Template for e2e test",
      "body": [
        "import FirstLaunch from '../helpers/FirstLaunch'",
        "import { TabBar } from '../features/navigation/TabBar'",
        "import { didFirstLaunch } from '../helpers/utils/error'",
        "import { DefaultTheme, getTheme } from '../helpers/utils/theme'",
        "",
        "describe('Test suite name', () => {",
        "  let ok = false",
        "  let tabBar: TabBar",
        "  let theme: DefaultTheme",
        "",
        "  before(async () => {",
        "\ttheme = getTheme(await browser.getWindowSize())",
        "\ttabBar = new TabBar(theme)",
        "  })",
        "",
        "  it('should first launch app', async () => {",
        "\tok = await FirstLaunch.init(tabBar)",
        "  })",
        "",
        "  it('should ...', async () => {",
        "\tdidFirstLaunch(ok)",
        "\tawait PageName.action()",
        "  })",
        "})",
        ""
      ]
    },
  }