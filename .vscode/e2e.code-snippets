{
  "E2E feature template": {
    "prefix": "e2e-feature",
    "scope": "javascript, typescript",
    "description": "Template for e2e feature that will be used for e2e tests",
    "body": [
      "import AppScreen from '../../screenobjects/AppScreen'",
      "import { \\$\\$\\$ } from '../../helpers/utils/selector'",
      "",
      "class ${1:PageName} extends AppScreen {",
      "  constructor() {",
      "\tsuper('${2:Accessibility id of the element to wait for in the screen}', true)",
      "  }",
      "",
      "  get ${3:element}() {",
      "\treturn \\$\\$\\$('${4:Accessibility id of the element}')",
      "  }",
      "",
      "  async action() {",
      "\tawait this.waitForIsShown()",
      "\tawait this.${3:element}.click()",
      "\tawait this.waitForIsHidden()",
      "  }",
      "}",
      "",
      "export default new ${1:PageName}()",
      ""
    ]
  },
  "E2E test template": {
    "prefix": "e2e-test",
    "scope": "javascript, typescript",
    "description": "Template for e2e test",
    "body": [
      "import FirstLaunch from '../helpers/FirstLaunch'",
      "import { TabBar } from '../features/navigation/TabBar'",
      "import { didFirstLaunch } from '../helpers/utils/error'",
      "import { DefaultTheme, getTheme } from '../helpers/utils/theme'",
      "",
      "describe('${1:Test suite name}', () => {",
      "  let ok = false",
      "  let tabBar: TabBar",
      "  let theme: DefaultTheme",
      "",
      "  before(async () => {",
      "\ttheme = getTheme(await browser.getWindowSize())",
      "\ttabBar = new TabBar(theme)",
      "  })",
      "",
      "  it('should first launch app', async () => {",
      "\tok = await FirstLaunch.init(tabBar)",
      "  })",
      "",
      "  it('should ${2:...}', async () => {",
      "\tdidFirstLaunch(ok)",
      "\tawait ${3:PageName.action()}",
      "  })",
      "})",
      ""
    ]
  }
}
