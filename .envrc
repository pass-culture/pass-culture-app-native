#!/usr/bin/env bash
if ! has nix_direnv_version || ! nix_direnv_version 2.2.0; then
	source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.2.0/direnvrc" "sha256-5EwyKnkJNQeXrRkYbwwRBcXbibosCJqyIUuz9Xq+LRc="
fi

strict_env

source_up_if_exists

dotenv_if_exists .env.local

source_env ./scripts/load_certificate.sh

export NIX_CONFIG="extra-experimental-features = flakes nix-command"
use flake

export DEVBOX_COREPACK_ENABLED=true
eval "$(devbox generate direnv --print-envrc)"

# recent Nix set variables
# then DevBox set variables again
# with this variables, XCode build don't find what he is looking for
# https://github.com/NixOS/nixpkgs/issues/355486#issuecomment-2746182772
unset DEVELOPER_DIR

# avoid the following error when building iOS from CLI
# Error: Command failed with exit code 255: xcrun xcdevice list
# error: unable to find sdk: 'macosx'
export PATH="$(echo "$PATH" | sed -E 's@/nix/store/[a-zA-Z0-9.-]+-xcrun/bin:@@')"

# the following script use `-X` option of `cp`
# node_modules/react-native/scripts/react_native_pods_utils/script_phases.sh
# coreutils include `cp` where the `-X` option doesn't exists and is replaced by `--preserve`
# remove coreutils from the `PATH` to use globally installed `cp`
# avoid the following error when building iOS from CLI
# cp: invalid option -- 'X'
# Try 'cp --help' for more information.
export PATH="$(echo "$PATH" | sed -E 's@/nix/store/[a-zA-Z0-9.-]+-coreutils[0-9.-]+/bin:@@')"

layout node

source_env ./scripts/install_node_modules_when_not_installed.sh

ANDROID_HOME="${ANDROID_HOME:-"$HOME/Library/Android/sdk"}"
if [ -d "$ANDROID_HOME" ]; then
	export ANDROID_HOME
	PATH_add "$ANDROID_HOME/platform-tools"
	PATH_add "$ANDROID_HOME/emulator"
fi

if [ "$(uname)" == "Darwin" ]; then
	if [ ! -d ./ios/Pods/ ]; then
		pushd ./ios/
		bundle install
		LANG='en_US.UTF-8' bundle exec pod install --repo-update
		popd
	fi
fi
