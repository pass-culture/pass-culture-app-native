// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`<SecondaryPageWithBlurHeader /> should render correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#ffffff",
      "flexBasis": 0,
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <View
    accessibilityRole="header"
    style={
      {
        "backgroundColor": "rgba(255,255,255,0)",
        "borderBottomColor": "#cbcdd2",
        "borderBottomWidth": 1,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 1,
      }
    }
  >
    <View
      customHeight={16}
      enable={true}
      style={
        {
          "height": 16,
        }
      }
    />
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "minHeight": 48,
          "width": "100%",
        }
      }
    >
      <View
        positionInHeader="left"
        style={
          {
            "alignItems": "center",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "flex-start",
            "maxWidth": 40,
            "paddingHorizontal": 24,
          }
        }
        testID="back-button-container"
      >
        <View
          accessibilityLabel="Revenir en arrière"
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              [
                {
                  "userSelect": "auto",
                },
                {
                  "alignItems": "center",
                  "flexGrow": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "maxWidth": 40,
                },
              ],
              {
                "opacity": 1,
              },
            ]
          }
          testID="Revenir en arrière"
        >
          <View
            height={24}
            testID="icon-back"
            width={24}
          >
            <Text>
              icon-back-SVG-Mock
            </Text>
          </View>
          <Text
            style={
              {
                "display": "none",
              }
            }
          >
            Retour
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "flexShrink": 1,
          }
        }
      >
        <Text
          accessibilityRole="header"
          numberOfLines={2}
          style={
            {
              "color": "#161617",
              "fontFamily": "Montserrat-Bold",
              "fontSize": 17,
              "lineHeight": 27.2,
              "textAlign": "center",
            }
          }
        >
          SecondaryPageWithBlurHeader
        </Text>
      </View>
      <View
        positionInHeader="right"
        style={
          {
            "alignItems": "center",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "flex-end",
            "maxWidth": 40,
            "paddingHorizontal": 24,
          }
        }
        testID="close-button-container"
      />
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      {
        "alignSelf": "center",
        "maxWidth": 500,
        "paddingHorizontal": 24,
        "paddingVertical": 24,
        "width": "100%",
      }
    }
    enableMaxWidth={true}
    scrollEnabled={true}
    style={{}}
  >
    <View>
      <View
        height={65}
        style={
          {
            "height": 65,
          }
        }
      />
      <Text
        accessibilityRole="header"
        style={
          {
            "color": "#161617",
            "fontFamily": "Montserrat-Bold",
            "fontSize": 21,
            "lineHeight": 33.6,
          }
        }
      >
        Children
      </Text>
    </View>
  </RCTScrollView>
  <View
    height={65}
    style={
      {
        "backdropFilter": "blur(20px)",
        "height": 65,
        "left": 0,
        "overflow": "hidden",
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BlurView
      blurAmount={8}
      blurType="light"
      style={
        [
          {
            "backgroundColor": "transparent",
          },
          {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    />
  </View>
</View>
`;
