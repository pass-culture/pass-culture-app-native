// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ScrollButtonForNotTouchDevice /> should render correctly on left direction 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  position: absolute;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto;
  height: 40px;
  width: 40px;
  right: auto;
  left: 8px;
  top: 35px;
  bottom: auto;
  border-width: 0;
  border-radius: 20px;
  border-color: #CBCDD2;
  background-color: #ffffff;
  z-index: 1;
  cursor: pointer;
  outline: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.c0:active {
  opacity: 0.7;
}

.c0:disabled {
  cursor: initial;
  background: none;
}

<body>
    <div>
      <button
        aria-hidden="true"
        class="c0"
        tabindex="-1"
        type="button"
      />
    </div>
  </body>,
  "container": .c0 {
  position: absolute;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto;
  height: 40px;
  width: 40px;
  right: auto;
  left: 8px;
  top: 35px;
  bottom: auto;
  border-width: 0;
  border-radius: 20px;
  border-color: #CBCDD2;
  background-color: #ffffff;
  z-index: 1;
  cursor: pointer;
  outline: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.c0:active {
  opacity: 0.7;
}

.c0:disabled {
  cursor: initial;
  background: none;
}

<div>
    <button
      aria-hidden="true"
      class="c0"
      tabindex="-1"
      type="button"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<ScrollButtonForNotTouchDevice /> should render correctly on right direction 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  position: absolute;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto;
  height: 40px;
  width: 40px;
  right: 8px;
  left: auto;
  top: 35px;
  bottom: auto;
  border-width: 0;
  border-radius: 20px;
  border-color: #CBCDD2;
  background-color: #ffffff;
  z-index: 1;
  cursor: pointer;
  outline: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.c0:active {
  opacity: 0.7;
}

.c0:disabled {
  cursor: initial;
  background: none;
}

<body>
    <div>
      <button
        aria-hidden="true"
        class="c0"
        tabindex="-1"
        type="button"
      />
    </div>
  </body>,
  "container": .c0 {
  position: absolute;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto;
  height: 40px;
  width: 40px;
  right: 8px;
  left: auto;
  top: 35px;
  bottom: auto;
  border-width: 0;
  border-radius: 20px;
  border-color: #CBCDD2;
  background-color: #ffffff;
  z-index: 1;
  cursor: pointer;
  outline: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.c0:active {
  opacity: 0.7;
}

.c0:disabled {
  cursor: initial;
  background: none;
}

<div>
    <button
      aria-hidden="true"
      class="c0"
      tabindex="-1"
      type="button"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<ScrollButtonForNotTouchDevice /> should render correctly when no top given 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  position: absolute;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto;
  height: 40px;
  width: 40px;
  right: 8px;
  left: auto;
  top: 0;
  bottom: 0;
  border-width: 0;
  border-radius: 20px;
  border-color: #CBCDD2;
  background-color: #ffffff;
  z-index: 1;
  cursor: pointer;
  outline: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.c0:active {
  opacity: 0.7;
}

.c0:disabled {
  cursor: initial;
  background: none;
}

<body>
    <div>
      <button
        aria-hidden="true"
        class="c0"
        tabindex="-1"
        type="button"
      />
    </div>
  </body>,
  "container": .c0 {
  position: absolute;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto;
  height: 40px;
  width: 40px;
  right: 8px;
  left: auto;
  top: 0;
  bottom: 0;
  border-width: 0;
  border-radius: 20px;
  border-color: #CBCDD2;
  background-color: #ffffff;
  z-index: 1;
  cursor: pointer;
  outline: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.c0:active {
  opacity: 0.7;
}

.c0:disabled {
  cursor: initial;
  background: none;
}

<div>
    <button
      aria-hidden="true"
      class="c0"
      tabindex="-1"
      type="button"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
