// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<IdentityCheckEnd/> should render correctly if modal not visible 1`] = `
<Modal
  animationType="none"
  deviceHeight={1334}
  deviceWidth={750}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={true}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  testID="modal"
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    forwardedRef={[Function]}
    nativeID="animatedComponent"
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    collapsable={false}
    deviceHeight={1334}
    deviceWidth={750}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    nativeID="animatedComponent"
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    style={
      Object {
        "alignItems": "center",
        "bottom": 0,
        "flex": 1,
        "justifyContent": "center",
        "left": 0,
        "margin": "auto",
        "position": "absolute",
        "right": 0,
        "top": "auto",
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      aria-describedby="testUuidV4"
      height={428}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomEndRadius": 0,
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomStartRadius": 0,
            "borderTopEndRadius": 16,
            "borderTopLeftRadius": 20,
            "borderTopRightRadius": 20,
            "borderTopStartRadius": 16,
            "flexDirection": "column",
            "height": 428,
            "justifyContent": "center",
            "maxHeight": 650,
            "maxWidth": 960,
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
            "width": "100%",
          },
        ]
      }
      testID="modalContainer"
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        testID="modalHeader"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 0.1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexBasis": 0,
                "flexGrow": 0.8,
                "flexShrink": 1,
                "justifyContent": "center",
                "paddingLeft": 12,
                "paddingRight": 12,
                "zIndex": 1,
              },
            ]
          }
        >
          <Text
            nativeID="testUuidV4"
            numberOfLines={2}
            style={
              Array [
                Object {
                  "color": "#161617",
                  "fontFamily": "Montserrat-Medium",
                  "fontSize": 18,
                  "lineHeight": 22,
                  "textAlign": "center",
                },
              ]
            }
          >
            Identifie-toi en 2 minutes
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 0.1,
                "flexShrink": 1,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            accessibilityLabel="Fermer la modale de propositions d'identifications avec ÉduConnect ou Démarches Simplifiées"
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              }
            }
            testID="Fermer la modale de propositions d'identifications avec ÉduConnect ou Démarches Simplifiées"
          >
            <View
              height={20}
              testID="rightIcon"
              width={20}
            >
              <Text>
                rightIcon-SVG-Mock
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 20,
            },
          ]
        }
      />
      <View
        backdropColor="#00000080"
        paddingBottom={8}
        style={
          Array [
            Object {
              "maxWidth": 480,
              "paddingBottom": 8,
              "width": "100%",
            },
          ]
        }
      >
        <RCTScrollView
          onContentSizeChange={[Function]}
          scrollEnabled={true}
          testID="modalScrollView"
        >
          <View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#696A6F",
                    "fontFamily": "Montserrat-Regular",
                    "fontSize": 15,
                    "lineHeight": 20,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Tu peux vérifier ton identité en moins de 2 minutes en utilisant ton compte ÉduConnect. Si tu n'as pas d'identifiants ÉduConnect rapproche toi de ton établissement.
            </Text>
            <View
              accessibilityLabel="C’est quoi ÉduConnect ?"
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 24,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "maxWidth": 500,
                  "minHeight": 40,
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                  "width": "100%",
                }
              }
              testID="C’est quoi ÉduConnect ?"
            >
              <View
                fill="#161617"
                height={16}
                testID="button-icon"
                width={16}
              >
                <Text>
                  button-icon-SVG-Mock
                </Text>
              </View>
              <Text
                adjustsFontSizeToFit={false}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#161617",
                      "fontFamily": "Montserrat-Bold",
                      "fontSize": 12,
                      "lineHeight": 20,
                      "marginLeft": 4,
                      "maxWidth": "100%",
                    },
                  ]
                }
              >
                C’est quoi ÉduConnect ?
              </Text>
            </View>
            <View
              numberOfSpaces={4}
              style={
                Array [
                  Object {
                    "height": 16,
                  },
                ]
              }
            />
            <View
              accessibilityLabel="Identification avec ÉduConnect"
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#eb0055",
                  "borderRadius": 24,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "maxWidth": 500,
                  "minHeight": 40,
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                  "width": "100%",
                }
              }
              testID="Identification avec ÉduConnect"
            >
              <Text
                adjustsFontSizeToFit={false}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "Montserrat-Bold",
                      "fontSize": 15,
                      "lineHeight": 20,
                      "marginLeft": 0,
                      "maxWidth": "100%",
                    },
                  ]
                }
              >
                Identification avec ÉduConnect
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "stretch",
                    "justifyContent": "center",
                    "marginVertical": 24,
                    "position": "relative",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#CBCDD2",
                      "height": 1,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#ffffff",
                      "paddingHorizontal": 10,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#161617",
                        "fontFamily": "Montserrat-Regular",
                        "fontSize": 15,
                        "lineHeight": 20,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  ou
                </Text>
              </View>
            </View>
            <View
              accessibilityLabel="Identification manuelle"
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 24,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "maxWidth": 500,
                  "minHeight": 40,
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                  "width": "100%",
                }
              }
              testID="Identification manuelle"
            >
              <View
                fill="#161617"
                height={20}
                testID="button-icon"
                width={20}
              >
                <Text>
                  button-icon-SVG-Mock
                </Text>
              </View>
              <Text
                adjustsFontSizeToFit={false}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#161617",
                      "fontFamily": "Montserrat-Bold",
                      "fontSize": 15,
                      "lineHeight": 20,
                      "marginLeft": 8,
                      "maxWidth": "100%",
                    },
                  ]
                }
              >
                Identification manuelle
              </Text>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#696A6F",
                    "fontFamily": "Montserrat-Regular",
                    "fontSize": 15,
                    "lineHeight": 20,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Environ 3 heures
            </Text>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`<IdentityCheckEnd/> should render correctly if modal visible 1`] = `
<Modal
  animationType="none"
  deviceHeight={1334}
  deviceWidth={750}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={true}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  testID="modal"
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    deviceHeight={1334}
    deviceWidth={750}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    style={
      Object {
        "alignItems": "center",
        "bottom": 0,
        "flex": 1,
        "justifyContent": "center",
        "left": 0,
        "margin": "auto",
        "position": "absolute",
        "right": 0,
        "top": "auto",
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      aria-describedby="testUuidV4"
      height={428}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomEndRadius": 0,
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomStartRadius": 0,
            "borderTopEndRadius": 16,
            "borderTopLeftRadius": 20,
            "borderTopRightRadius": 20,
            "borderTopStartRadius": 16,
            "flexDirection": "column",
            "height": 428,
            "justifyContent": "center",
            "maxHeight": 650,
            "maxWidth": 960,
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
            "width": "100%",
          },
        ]
      }
      testID="modalContainer"
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        testID="modalHeader"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 0.1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexBasis": 0,
                "flexGrow": 0.8,
                "flexShrink": 1,
                "justifyContent": "center",
                "paddingLeft": 12,
                "paddingRight": 12,
                "zIndex": 1,
              },
            ]
          }
        >
          <Text
            nativeID="testUuidV4"
            numberOfLines={2}
            style={
              Array [
                Object {
                  "color": "#161617",
                  "fontFamily": "Montserrat-Medium",
                  "fontSize": 18,
                  "lineHeight": 22,
                  "textAlign": "center",
                },
              ]
            }
          >
            Identifie-toi en 2 minutes
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 0.1,
                "flexShrink": 1,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            accessibilityLabel="Fermer la modale de propositions d'identifications avec ÉduConnect ou Démarches Simplifiées"
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              }
            }
            testID="Fermer la modale de propositions d'identifications avec ÉduConnect ou Démarches Simplifiées"
          >
            <View
              height={20}
              testID="rightIcon"
              width={20}
            >
              <Text>
                rightIcon-SVG-Mock
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 20,
            },
          ]
        }
      />
      <View
        backdropColor="#00000080"
        paddingBottom={8}
        style={
          Array [
            Object {
              "maxWidth": 480,
              "paddingBottom": 8,
              "width": "100%",
            },
          ]
        }
      >
        <RCTScrollView
          onContentSizeChange={[Function]}
          scrollEnabled={true}
          testID="modalScrollView"
        >
          <View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#696A6F",
                    "fontFamily": "Montserrat-Regular",
                    "fontSize": 15,
                    "lineHeight": 20,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Tu peux vérifier ton identité en moins de 2 minutes en utilisant ton compte ÉduConnect. Si tu n'as pas d'identifiants ÉduConnect rapproche toi de ton établissement.
            </Text>
            <View
              accessibilityLabel="C’est quoi ÉduConnect ?"
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 24,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "maxWidth": 500,
                  "minHeight": 40,
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                  "width": "100%",
                }
              }
              testID="C’est quoi ÉduConnect ?"
            >
              <View
                fill="#161617"
                height={16}
                testID="button-icon"
                width={16}
              >
                <Text>
                  button-icon-SVG-Mock
                </Text>
              </View>
              <Text
                adjustsFontSizeToFit={false}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#161617",
                      "fontFamily": "Montserrat-Bold",
                      "fontSize": 12,
                      "lineHeight": 20,
                      "marginLeft": 4,
                      "maxWidth": "100%",
                    },
                  ]
                }
              >
                C’est quoi ÉduConnect ?
              </Text>
            </View>
            <View
              numberOfSpaces={4}
              style={
                Array [
                  Object {
                    "height": 16,
                  },
                ]
              }
            />
            <View
              accessibilityLabel="Identification avec ÉduConnect"
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#eb0055",
                  "borderRadius": 24,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "maxWidth": 500,
                  "minHeight": 40,
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                  "width": "100%",
                }
              }
              testID="Identification avec ÉduConnect"
            >
              <Text
                adjustsFontSizeToFit={false}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "Montserrat-Bold",
                      "fontSize": 15,
                      "lineHeight": 20,
                      "marginLeft": 0,
                      "maxWidth": "100%",
                    },
                  ]
                }
              >
                Identification avec ÉduConnect
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "stretch",
                    "justifyContent": "center",
                    "marginVertical": 24,
                    "position": "relative",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#CBCDD2",
                      "height": 1,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#ffffff",
                      "paddingHorizontal": 10,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#161617",
                        "fontFamily": "Montserrat-Regular",
                        "fontSize": 15,
                        "lineHeight": 20,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  ou
                </Text>
              </View>
            </View>
            <View
              accessibilityLabel="Identification manuelle"
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 24,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "maxWidth": 500,
                  "minHeight": 40,
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                  "width": "100%",
                }
              }
              testID="Identification manuelle"
            >
              <View
                fill="#161617"
                height={20}
                testID="button-icon"
                width={20}
              >
                <Text>
                  button-icon-SVG-Mock
                </Text>
              </View>
              <Text
                adjustsFontSizeToFit={false}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#161617",
                      "fontFamily": "Montserrat-Bold",
                      "fontSize": 15,
                      "lineHeight": 20,
                      "marginLeft": 8,
                      "maxWidth": "100%",
                    },
                  ]
                }
              >
                Identification manuelle
              </Text>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#696A6F",
                    "fontFamily": "Montserrat-Regular",
                    "fontSize": 15,
                    "lineHeight": 20,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Environ 3 heures
            </Text>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>
</Modal>
`;
