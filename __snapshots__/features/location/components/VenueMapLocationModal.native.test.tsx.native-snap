// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`VenueMapLocationModal should render correctly if modal visible 1`] = `
[
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        undefined,
        {
          "opacity": 1,
        },
      ]
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Open modal
      </Text>
    </View>
  </View>,
  <Modal
    accessibilityLabelledBy="testUuidV4"
    accessibilityModal={true}
    animationType="none"
    deviceHeight={1334}
    deviceWidth={750}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    supportedOrientations={
      [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    testID="modal"
    transparent={true}
    visible={true}
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          [
            {
              "backgroundColor": "black",
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            [
              {
                "backgroundColor": "black",
                "height": 1334,
                "width": 750,
              },
            ],
          ],
          {},
          {
            "opacity": 0.7,
          },
        ]
      }
    />
    <View
      accessibilityLabelledBy="testUuidV4"
      accessibilityModal={true}
      deviceHeight={1334}
      deviceWidth={750}
      hideModalContentWhileAnimating={false}
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      panResponderThreshold={4}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={true}
      style={
        [
          [
            {},
            [
              {
                "margin": 37.5,
                "transform": [
                  {
                    "translateY": 0,
                  },
                ],
              },
              {
                "flex": 1,
                "justifyContent": "center",
              },
              [
                {
                  "alignItems": "center",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": "auto",
                },
                {
                  "margin": "auto",
                },
              ],
            ],
          ],
          {
            "transform": [
              {
                "translateY": 0,
              },
            ],
          },
          {},
        ]
      }
      supportedOrientations={
        [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        height={1318}
        maxHeight={1334}
        noPadding={true}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomEndRadius": 0,
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomStartRadius": 0,
            "borderTopEndRadius": 16,
            "borderTopLeftRadius": 20,
            "borderTopRightRadius": 20,
            "borderTopStartRadius": 16,
            "flexDirection": "column",
            "height": 1318,
            "justifyContent": "center",
            "maxHeight": 1334,
            "maxWidth": 960,
            "paddingBottom": 32,
            "width": "100%",
          }
        }
        testID="modalContainer"
      >
        <View
          nativeID="testUuidV4"
          style={
            {
              "flexDirection": "row",
              "width": "100%",
            }
          }
          testID="customModalHeader"
        >
          <View
            style={
              {
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
                "width": "100%",
              }
            }
          >
            <View
              style={
                {
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "width": "100%",
                }
              }
              testID="modalHeader"
            >
              <View
                justifyContent="left"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexDirection": "row",
                    "height": 28,
                    "justifyContent": "flex-start",
                    "width": 28,
                  }
                }
              />
              <View
                style={
                  {
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "justifyContent": "center",
                    "paddingHorizontal": 12,
                    "zIndex": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  numberOfLines={2}
                  style={
                    {
                      "color": "#161617",
                      "fontFamily": "Montserrat-Bold",
                      "fontSize": 17,
                      "lineHeight": 27.2,
                      "textAlign": "center",
                    }
                  }
                  testID="modalHeaderTitle"
                >
                  Localisation
                </Text>
              </View>
              <View
                justifyContent="right"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexDirection": "row",
                    "height": 28,
                    "justifyContent": "flex-end",
                    "width": 28,
                  }
                }
              >
                <View
                  accessibilityLabel="Fermer la modale"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      [
                        {
                          "userSelect": "auto",
                        },
                        {
                          "paddingBottom": 4,
                          "paddingLeft": 4,
                          "paddingRight": 4,
                          "paddingTop": 4,
                        },
                      ],
                      {
                        "opacity": 1,
                      },
                    ]
                  }
                  testID="Fermer la modale"
                >
                  <View
                    height={20}
                    testID="rightIcon"
                    width={20}
                  >
                    <Text>
                      rightIcon-SVG-Mock
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "width": "100%",
            }
          }
          testID="fullscreenModalView"
        >
          <View
            style={
              {
                "marginTop": 24,
                "paddingHorizontal": 24,
              }
            }
          >
            <RCTScrollView
              collapsable={false}
              data={
                [
                  {
                    "accessibilityLabel": "Utiliser ma position actuelle",
                    "component": <LocationModalButton
                      color="default"
                      icon={
                        {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": [
                            [Function],
                          ],
                          "inlineStyle": e {
                            "rules": [],
                          },
                          "render": [Function],
                          "shouldForwardProp": undefined,
                          "styledComponentId": true,
                          "target": [Function],
                        }
                      }
                      onPress={[Function]}
                      title="Utiliser ma position actuelle"
                    />,
                    "id": "aroundMeButton",
                    "wrapInLi": true,
                  },
                  {
                    "component": <Styled(Styled(View)) />,
                    "id": "separator1",
                    "wrapInLi": false,
                  },
                  {
                    "accessibilityLabel": "Choisir une localisation, Ville, code postal, adresse",
                    "component": <LocationModalButton
                      color="default"
                      icon={
                        {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": [
                            [Function],
                          ],
                          "inlineStyle": e {
                            "rules": [],
                          },
                          "render": [Function],
                          "shouldForwardProp": undefined,
                          "styledComponentId": true,
                          "target": [Function],
                        }
                      }
                      onPress={[Function]}
                      subtitle="Ville, code postal, adresse"
                      title="Choisir une localisation"
                    />,
                    "id": "aroundPlaceButton",
                    "wrapInLi": true,
                  },
                ]
              }
              getItem={[Function]}
              getItemCount={[Function]}
              handlerTag={1}
              handlerType="NativeViewGestureHandler"
              keyExtractor={[Function]}
              listAs="ul"
              onContentSizeChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              renderScrollComponent={[Function]}
              scrollEventThrottle={0.0001}
              showsVerticalScrollIndicator={false}
              stickyHeaderIndices={[]}
              viewabilityConfigCallbackPairs={[]}
            >
              <View>
                <View
                  onFocusCapture={[Function]}
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessibilityLabel="Utiliser ma position actuelle"
                    accessibilityRole="none"
                    style={
                      {
                        "display": "flex",
                      }
                    }
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": undefined,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        [
                          {
                            "userSelect": "auto",
                          },
                          {
                            "opacity": 1,
                          },
                        ]
                      }
                    >
                      <View
                        gap={2}
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "gap": 8,
                          }
                        }
                      >
                        <View
                          fill="none"
                          height={24}
                          width={24}
                        >
                          <Text>
                            undefined-SVG-Mock
                          </Text>
                        </View>
                        <Text
                          color="default"
                          style={
                            {
                              "color": "#161617",
                              "fontFamily": "Montserrat-Bold",
                              "fontSize": 16,
                              "lineHeight": 25.6,
                            }
                          }
                        >
                          Utiliser ma position actuelle
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onFocusCapture={[Function]}
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      {
                        "backgroundColor": "#f1f1f4",
                        "height": 1,
                        "marginVertical": 24,
                        "width": "100%",
                      }
                    }
                  />
                </View>
                <View
                  onFocusCapture={[Function]}
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessibilityLabel="Choisir une localisation, Ville, code postal, adresse"
                    accessibilityRole="none"
                    style={
                      {
                        "display": "flex",
                      }
                    }
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": undefined,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        [
                          {
                            "userSelect": "auto",
                          },
                          {
                            "opacity": 1,
                          },
                        ]
                      }
                    >
                      <View
                        gap={2}
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "gap": 8,
                          }
                        }
                      >
                        <View
                          fill="none"
                          height={24}
                          width={24}
                        >
                          <Text>
                            undefined-SVG-Mock
                          </Text>
                        </View>
                        <Text
                          color="default"
                          style={
                            {
                              "color": "#161617",
                              "fontFamily": "Montserrat-Bold",
                              "fontSize": 16,
                              "lineHeight": 25.6,
                            }
                          }
                        >
                          Choisir une localisation
                        </Text>
                      </View>
                      <Text
                        style={
                          {
                            "color": "#696a6f",
                            "fontFamily": "Montserrat-SemiBold",
                            "fontSize": 12,
                            "lineHeight": 19.2,
                            "marginTop": 4,
                          }
                        }
                      >
                        Ville, code postal, adresse
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
        <View
          style={
            {
              "width": "100%",
            }
          }
          testID="fixedModalBottom"
        >
          <View
            paddingBottom={0}
            style={
              {
                "alignItems": "center",
                "paddingHorizontal": 24,
              }
            }
          >
            <View
              accessibilityLabel="Valider et voir sur la carte"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  [
                    {
                      "userSelect": "auto",
                    },
                    {
                      "alignItems": "center",
                      "backgroundColor": "#f1f1f4",
                      "borderBottomLeftRadius": 24,
                      "borderBottomRightRadius": 24,
                      "borderTopLeftRadius": 24,
                      "borderTopRightRadius": 24,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "maxWidth": 500,
                      "minHeight": 40,
                      "paddingBottom": 2,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 2,
                      "width": "100%",
                    },
                    {},
                  ],
                  {
                    "opacity": 1,
                  },
                ]
              }
              testID="Valider et voir sur la carte"
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  adjustsFontSizeToFit={false}
                  numberOfLines={1}
                  style={
                    {
                      "color": "#696a6f",
                      "fontFamily": "Montserrat-Bold",
                      "fontSize": 16,
                      "lineHeight": 25.6,
                      "maxWidth": "100%",
                    }
                  }
                >
                  Valider et voir sur la carte
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          customHeight={8}
          enable={true}
          style={
            {
              "height": 8,
            }
          }
        />
      </View>
    </View>
  </Modal>,
]
`;
