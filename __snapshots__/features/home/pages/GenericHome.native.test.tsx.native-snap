// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenericHome should display real content 1`] = `
<View
  style={
    Array [
      Object {
        "flexBasis": 1,
        "flexGrow": 1,
        "flexShrink": 0,
      },
    ]
  }
>
  <View
    hide={false}
    style={
      Array [
        Object {
          "height": "100%",
          "overflow": "hidden",
        },
      ]
    }
  >
    <RCTScrollView
      ListFooterComponent={
        <FooterComponent
          hasShownAll={true}
        />
      }
      ListHeaderComponent={
        <Styled(Text)>
          Header
        </Styled(Text)>
      }
      bounces={true}
      data={
        Array [
          Object {
            "data": undefined,
            "displayParameters": Object {
              "layout": "one-item-medium",
              "minOffers": 1,
              "subtitle": "Ceci n’est pas une playlist de lieux",
              "title": "Exemple de playlist de lieux",
            },
            "id": "105MMz59tftcxXJICXt7ja",
            "type": "VenuesModule",
            "venuesParameters": Object {
              "hitsPerPage": 15,
              "isGeolocated": false,
              "title": "Exemple de playlist de lieux",
              "venueTypes": Array [
                "Bibliothèque ou médiathèque",
                "Arts visuels, arts plastiques et galeries",
                "Centre culturel",
                "Cinéma - Salle de projections",
                "Cours et pratique artistiques",
                "Culture scientifique",
                "Festival",
                "Jeux / Jeux vidéos",
                "Librairie",
                "Magasin arts créatifs",
                "Musique - Disquaire",
                "Musique - Magasin d’instruments",
                "Musique - Salle de concerts",
                "Musée",
                "Offre numérique",
                "Patrimoine et tourisme",
                "Spectacle vivant",
                "Cinéma itinérant",
                "Autre type de lieu",
              ],
            },
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      initialNumToRender={10}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="homeBodyScrollView"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#161617",
                  "fontFamily": "Montserrat-Black",
                  "fontSize": 26,
                  "lineHeight": 34,
                },
              ]
            }
          >
            Header
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          onLayout={[Function]}
        >
          <View
            customHeight={72}
            enable={true}
            style={
              Array [
                Object {
                  "height": 72,
                },
              ]
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    numberOfSpaces={6}
    style={
      Array [
        Object {
          "height": 24,
        },
      ]
    }
  />
  <View
    height={16}
    style={
      Array [
        Object {
          "backdropFilter": "blur(20px)",
          "height": 16,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
        },
      ]
    }
  >
    <BlurView
      blurAmount={8}
      blurType="light"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ],
        ]
      }
    />
  </View>
</View>
`;

exports[`GenericHome should display skeleton 1`] = `
<View
  style={
    Array [
      Object {
        "flexBasis": 1,
        "flexGrow": 1,
        "flexShrink": 0,
      },
    ]
  }
>
  <View
    hide={false}
    style={
      Array [
        Object {
          "height": "100%",
          "overflow": "hidden",
        },
      ]
    }
  >
    <RCTScrollView
      ListFooterComponent={
        <FooterComponent
          hasShownAll={true}
        />
      }
      ListHeaderComponent={
        <Styled(Text)>
          Header
        </Styled(Text)>
      }
      bounces={true}
      data={
        Array [
          Object {
            "data": undefined,
            "displayParameters": Object {
              "layout": "one-item-medium",
              "minOffers": 1,
              "subtitle": "Ceci n’est pas une playlist de lieux",
              "title": "Exemple de playlist de lieux",
            },
            "id": "105MMz59tftcxXJICXt7ja",
            "type": "VenuesModule",
            "venuesParameters": Object {
              "hitsPerPage": 15,
              "isGeolocated": false,
              "title": "Exemple de playlist de lieux",
              "venueTypes": Array [
                "Bibliothèque ou médiathèque",
                "Arts visuels, arts plastiques et galeries",
                "Centre culturel",
                "Cinéma - Salle de projections",
                "Cours et pratique artistiques",
                "Culture scientifique",
                "Festival",
                "Jeux / Jeux vidéos",
                "Librairie",
                "Magasin arts créatifs",
                "Musique - Disquaire",
                "Musique - Magasin d’instruments",
                "Musique - Salle de concerts",
                "Musée",
                "Offre numérique",
                "Patrimoine et tourisme",
                "Spectacle vivant",
                "Cinéma itinérant",
                "Autre type de lieu",
              ],
            },
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      initialNumToRender={10}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="homeBodyScrollView"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#161617",
                  "fontFamily": "Montserrat-Black",
                  "fontSize": 26,
                  "lineHeight": 34,
                },
              ]
            }
          >
            Header
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          onLayout={[Function]}
        >
          <View
            customHeight={72}
            enable={true}
            style={
              Array [
                Object {
                  "height": 72,
                },
              ]
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    numberOfSpaces={6}
    style={
      Array [
        Object {
          "height": 24,
        },
      ]
    }
  />
  <View
    height={16}
    style={
      Array [
        Object {
          "backdropFilter": "blur(20px)",
          "height": 16,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
        },
      ]
    }
  >
    <BlurView
      blurAmount={8}
      blurType="light"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ],
        ]
      }
    />
  </View>
</View>
`;
