// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VideoModal should render correctly if modal visible 1`] = `
<Modal
  accessibilityLabelledBy="testUuidV4"
  accessibilityModal={true}
  accessibilityRole="none"
  animationType="none"
  deviceHeight={1334}
  deviceWidth={750}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={true}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  testID="modal"
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    accessibilityLabelledBy="testUuidV4"
    accessibilityModal={true}
    accessibilityRole="none"
    collapsable={false}
    deviceHeight={1334}
    deviceWidth={750}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    style={
      Object {
        "alignItems": "center",
        "bottom": 0,
        "flex": 1,
        "justifyContent": "center",
        "left": 0,
        "margin": "auto",
        "position": "absolute",
        "right": 0,
        "top": "auto",
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      desktopMaxHeight={1000.5}
      height={1318}
      maxHeight={1334}
      noPadding={true}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomEndRadius": 0,
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomStartRadius": 0,
            "borderTopEndRadius": 16,
            "borderTopLeftRadius": 20,
            "borderTopRightRadius": 20,
            "borderTopStartRadius": 16,
            "flexDirection": "column",
            "height": 1318,
            "justifyContent": "center",
            "maxHeight": 1334,
            "maxWidth": 960,
            "paddingBottom": 32,
            "width": "100%",
          },
        ]
      }
      testID="modalContainer"
    >
      <View
        nativeID="testUuidV4"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "width": "100%",
            },
          ]
        }
        testID="customModalHeader"
      />
      <View
        style={
          Array [
            Object {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "width": "100%",
            },
          ]
        }
        testID="fullscreenModalView"
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#161617",
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "height": 421,
                "width": 750,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  undefined,
                ]
              }
            >
              <RNCWebView
                allowsFullscreenVideo={true}
                allowsInlineMediaPlayback={true}
                bounces={false}
                cacheEnabled={true}
                injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                injectedJavaScriptForMainFrameOnly={true}
                javaScriptEnabled={true}
                mediaPlaybackRequiresUserAction={false}
                messagingEnabled={true}
                onContentProcessDidTerminate={[Function]}
                onHttpError={[Function]}
                onLoadingError={[Function]}
                onLoadingFinish={[Function]}
                onLoadingProgress={[Function]}
                onLoadingStart={[Function]}
                onMessage={[Function]}
                onShouldStartLoadWithRequest={[Function]}
                source={
                  Object {
                    "uri": "https://lonelycpp.github.io/react-native-youtube-iframe/iframe.html?data=%7B%22rel_s%22:0,%22loop_s%22:0,%22videoId_s%22:%22qE7xwEZnFP0%22,%22controls_s%22:1,%22contentScale_s%22:1,%22cc_lang_pref_s%22:%22%22,%22allowWebViewZoom%22:false,%22modestbranding_s%22:1,%22preventFullScreen_s%22:1,%22showClosedCaptions_s%22:0%7D",
                  }
                }
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                    },
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      undefined,
                    ],
                  ]
                }
                textInteractionEnabled={true}
                useSharedProcessPool={true}
                userAgent=""
              />
            </View>
          </View>
        </View>
        <RCTScrollView
          style={
            Array [
              Object {
                "paddingHorizontal": 24,
              },
            ]
          }
        >
          <View>
            <View
              numberOfSpaces={4}
              style={
                Array [
                  Object {
                    "height": 16,
                  },
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                  },
                ]
              }
            >
              <View
                color="Aquamarine"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#0E8474",
                      "borderRadius": 4,
                      "paddingBottom": 4,
                      "paddingLeft": 4,
                      "paddingRight": 4,
                      "paddingTop": 4,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontFamily": "Montserrat-SemiBold",
                        "fontSize": 12,
                        "lineHeight": 16,
                      },
                    ]
                  }
                >
                  FAQ
                </Text>
              </View>
            </View>
            <View
              numberOfSpaces={2}
              style={
                Array [
                  Object {
                    "height": 8,
                  },
                ]
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#161617",
                    "fontFamily": "Montserrat-Bold",
                    "fontSize": 20,
                    "lineHeight": 24,
                  },
                ]
              }
            >
              Découvre Lujipeka
            </Text>
            <View
              numberOfSpaces={2}
              style={
                Array [
                  Object {
                    "height": 8,
                  },
                ]
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#90949D",
                    "fontFamily": "Montserrat-SemiBold",
                    "fontSize": 12,
                    "lineHeight": 16,
                  },
                ]
              }
            >
              Publiée le 02/05/23
            </Text>
            <View
              numberOfSpaces={2}
              style={
                Array [
                  Object {
                    "height": 8,
                  },
                ]
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#696A6F",
                    "fontFamily": "Montserrat-Regular",
                    "fontSize": 15,
                    "lineHeight": 20,
                  },
                ]
              }
            >
              Laissons ici la place pour mettre du contexte sur la vidéo si besoin cela permet à l’utilisateur de savoir sans voir de quoi le vidéo parle. Pas plus de 130 caractères.
            </Text>
            <View
              numberOfSpaces={6}
              style={
                Array [
                  Object {
                    "height": 24,
                  },
                ]
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#161617",
                    "fontFamily": "Montserrat-Medium",
                    "fontSize": 18,
                    "lineHeight": 22,
                  },
                ]
              }
            >
              Pour aller plus loin…
            </Text>
          </View>
        </RCTScrollView>
        <View
          accessibilityLabel="Fermer la modale vidéo"
          accessibilityRole="button"
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#ffffff",
              "borderRadius": 40,
              "opacity": 1,
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
              "position": "absolute",
              "right": 16,
              "top": 16,
              "userSelect": "auto",
            }
          }
          testID="Fermer la modale vidéo"
        >
          <View
            height={20}
            width={20}
          >
            <Text>
              undefined-SVG-Mock
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
