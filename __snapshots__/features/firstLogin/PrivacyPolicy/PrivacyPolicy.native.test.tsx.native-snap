// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PrivacyPolicy /> should render privacy policy 1`] = `
<Modal
  animationType="none"
  deviceHeight={1334}
  deviceWidth={750}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={true}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  testID="modal"
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#00000080",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0.7,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    deviceHeight={1334}
    deviceWidth={750}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "#ffffff",
        "borderTopEndRadius": 16,
        "borderTopLeftRadius": 20,
        "borderTopRightRadius": 20,
        "borderTopStartRadius": 16,
        "bottom": 0,
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "margin": 0,
        "marginBottom": 0,
        "marginTop": "auto",
        "maxWidth": 750,
        "paddingBottom": 24,
        "paddingLeft": 24,
        "paddingRight": 24,
        "paddingTop": 24,
        "position": "absolute",
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
        "width": "100%",
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "100%",
            "zIndex": 1,
          },
        ]
      }
    >
      <View
        accessibilityLabel="leftIconButton"
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-start",
            "flexBasis": 0,
            "flexGrow": 0.1,
            "flexShrink": 1,
            "marginLeft": -4,
            "opacity": 1,
          }
        }
        testID="leftIconButton"
      />
      <Text
        numberOfLines={2}
        style={
          Array [
            Object {
              "color": "#151515",
              "flexBasis": 0,
              "flexGrow": 0.8,
              "flexShrink": 1,
              "fontFamily": "Montserrat-Medium",
              "fontSize": 18,
              "lineHeight": 22,
              "textAlign": "center",
            },
          ]
        }
      >
        Respect de ta vie privée
      </Text>
      <View
        accessibilityLabel="Fermer la modale et refuser la collecte des données"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexBasis": 0,
            "flexGrow": 0.1,
            "flexShrink": 1,
            "marginRight": -4,
            "opacity": 1,
          }
        }
        testID="Fermer la modale et refuser la collecte des données"
      >
        <View
          height={32}
          testID="rightIcon"
          width={32}
        >
          <Text>
            rightIcon-SVG-Mock
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "maxWidth": 500,
            "paddingTop": 20,
            "width": "100%",
          },
          Object {
            "paddingBottom": 8,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "center",
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#151515",
                "fontFamily": "Montserrat-Regular",
                "fontSize": 15,
                "lineHeight": 20,
              },
            ]
          }
        >
          Nous utilisons des outils pour réaliser des statistiques de navigation et offrir une experience plus sûre. En cliquant sur Continuer, tu acceptes l'utilisation de ces services détaillés dans notre
        </Text>
      </Text>
      <View
        accessibilityLabel="Politique des cookies"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 24,
            "borderWidth": 0,
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
            "maxWidth": 500,
            "opacity": 1,
            "paddingBottom": 2,
            "paddingLeft": 2,
            "paddingRight": 2,
            "paddingTop": 2,
            "width": "100%",
          }
        }
        testID="Politique des cookies"
      >
        <View
          height={16}
          testID="button-icon"
          width={15}
        >
          <Text>
            button-icon-SVG-Mock
          </Text>
        </View>
        <Text
          adjustsFontSizeToFit={false}
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#eb0055",
                "fontFamily": "Montserrat-Bold",
                "fontSize": 12,
                "lineHeight": 20,
                "marginLeft": 5,
                "maxWidth": "100%",
              },
            ]
          }
          textColor="#eb0055"
          textSize={12}
        >
          Politique des cookies
        </Text>
      </View>
      <Text
        style={
          Array [
            Object {
              "paddingHorizontal": "10%",
              "paddingVertical": 20,
              "textAlign": "center",
            },
          ]
        }
      >
        <Text
          color="#626262"
          style={
            Array [
              Object {
                "color": "#626262",
                "fontFamily": "Montserrat-SemiBold",
                "fontSize": 12,
                "lineHeight": 16,
              },
            ]
          }
        >
          Tu peux modifier tes paramètres de confidentialité ici ou dans la page profil.
        </Text>
      </Text>
      <View
        accessibilityLabel="Continuer"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#eb0055",
            "borderRadius": 24,
            "borderWidth": 0,
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
            "maxWidth": 500,
            "opacity": 1,
            "paddingBottom": 2,
            "paddingLeft": 2,
            "paddingRight": 2,
            "paddingTop": 2,
            "width": "100%",
          }
        }
        testID="Continuer"
      >
        <Text
          adjustsFontSizeToFit={false}
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "Montserrat-Bold",
                "fontSize": 15,
                "lineHeight": 20,
                "marginLeft": 5,
                "maxWidth": "100%",
              },
            ]
          }
          textColor="#ffffff"
        >
          Continuer
        </Text>
      </View>
      <View
        numberOfSpaces={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        accessibilityLabel="Paramètres de confidentialité"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderRadius": 24,
            "borderWidth": 0,
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
            "maxWidth": 500,
            "opacity": 1,
            "paddingBottom": 2,
            "paddingLeft": 2,
            "paddingRight": 2,
            "paddingTop": 2,
            "width": "100%",
          }
        }
        testID="Paramètres de confidentialité"
      >
        <Text
          adjustsFontSizeToFit={false}
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#eb0055",
                "fontFamily": "Montserrat-Bold",
                "fontSize": 15,
                "lineHeight": 20,
                "marginLeft": 5,
                "maxWidth": "100%",
              },
            ]
          }
          textColor="#eb0055"
        >
          Paramètres de confidentialité
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
