// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LocationPicker /> should render correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#ffffff",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
    ]
  }
>
  <View
    accessibilityRole="header"
    style={
      Array [
        Object {
          "width": "100%",
        },
      ]
    }
  >
    <View
      height={64}
      style={
        Array [
          Object {
            "height": 64,
          },
        ]
      }
    />
    <View
      backgroundColor="#eb0055"
      isAbsolutePosition={true}
      style={
        Array [
          Object {
            "backgroundColor": "#eb0055",
            "position": "absolute",
            "top": 0,
            "width": "100%",
            "zIndex": 1,
          },
        ]
      }
    >
      <View
        customHeight={16}
        enable={true}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        size="small"
        style={
          Array [
            Object {
              "alignItems": "center",
              "height": 48,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": "100%",
              },
            ]
          }
        >
          <View
            positionInHeader="left"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                  "paddingLeft": 12,
                  "paddingRight": 12,
                },
              ]
            }
            testID="Revenir en arrière"
          >
            <View
              accessibilityLabel="Revenir en arrière"
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "maxWidth": 40,
                  "opacity": 1,
                  "userSelect": "auto",
                }
              }
              testID="backButton"
            >
              <View
                height={24}
                testID="icon-back"
                width={24}
              >
                <Text>
                  icon-back-SVG-Mock
                </Text>
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "display": "none",
                    },
                  ]
                }
              >
                Retour
              </Text>
            </View>
          </View>
          <Text
            color="#ffffff"
            nativeID="testUuidV4"
            numberOfLines={1}
            size="small"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "Montserrat-Regular",
                  "fontSize": 15,
                  "lineHeight": 20,
                  "textAlign": "center",
                },
              ]
            }
          >
            Choisir un lieu
          </Text>
          <View
            positionInHeader="right"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-end",
                  "paddingLeft": 12,
                  "paddingRight": 12,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <View
    numberOfSpaces={6}
    style={
      Array [
        Object {
          "height": 24,
        },
      ]
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "marginHorizontal": 24,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "display": "none",
          },
        ]
      }
    >
      Recherche une adresse, un lieu...
    </Text>
    <View
      height="regular"
      isDisabled={false}
      isError={false}
      isFocus={false}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderColor": "#90949D",
            "borderRadius": 22,
            "borderStyle": "solid",
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 48,
            "paddingBottom": 0,
            "paddingLeft": 17,
            "paddingRight": 17,
            "paddingTop": 0,
            "width": "100%",
          },
          Object {
            "borderRadius": 24,
            "outlineOffset": 0,
          },
        ]
      }
      testID="styled-input-container"
    >
      <View
        numberOfSpaces={1}
        style={
          Array [
            Object {
              "width": 4,
            },
          ]
        }
      />
      <TextInput
        accessibilityLabel="Recherche un lieu, une adresse"
        accessible={true}
        aria-describedby="testUuidV4"
        autoCorrect={false}
        editable={true}
        enablesReturnKeyAutomatically={true}
        isEmpty={true}
        nativeID="testUuidV4"
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="Saisis une adresse ou le nom d'un lieu"
        placeholderTextColor="#696A6F"
        returnKeyType="search"
        selectionColor="#696A6F"
        style={
          Array [
            Object {
              "color": "#696A6F",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontFamily": "Montserrat-Italic",
              "fontSize": 15,
              "height": "100%",
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
            Object {},
          ]
        }
        testID="searchInput"
        value=""
      />
    </View>
  </View>
  <Text
    nativeID="testUuidV4"
    style={
      Array [
        Object {
          "display": "none",
        },
      ]
    }
  >
    Indique un lieu pour découvrir toutes les offres de ce lieu puis clique sur le lieu pour valider ton choix
  </Text>
  <View
    numberOfSpaces={4}
    style={
      Array [
        Object {
          "height": 16,
        },
      ]
    }
  />
  <Text
    accessibilityRole="none"
    style={
      Array [
        Object {
          "display": "none",
        },
      ]
    }
  >
    
  </Text>
  <View
    accessibilityRole="none"
  />
  <RCTScrollView
    ItemSeparatorComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "inlineStyle": InlineStyle {
          "rules": Array [
            [Function],
          ],
        },
        "render": [Function],
        "shouldForwardProp": undefined,
        "styledComponentId": "StyledNativeComponent",
        "target": [Function],
        "withComponent": [Function],
      }
    }
    accessibilityRole="radiogroup"
    aria-labelledby="testUuidV4"
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="handled"
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View />
  </RCTScrollView>
</View>
`;
