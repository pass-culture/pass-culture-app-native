// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CreditExplanation/> should render correctly for exhausted credit 1`] = `
<View
  accessibilityLabel="J’ai dépensé tout mon crédit, que faire ?"
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 24,
      "flexDirection": "row",
      "justifyContent": "flex-start",
      "maxWidth": 500,
      "minHeight": 40,
      "opacity": 1,
      "paddingBottom": 2,
      "paddingLeft": 2,
      "paddingRight": 2,
      "paddingTop": 2,
      "userSelect": "auto",
      "width": "100%",
    }
  }
  testID="explanationButton"
>
  <View
    style={
      Array [
        Object {
          "flexShrink": 0,
        },
      ]
    }
  >
    <View
      fill="#eb0055"
      height={16}
      testID="button-icon"
      width={16}
    >
      <Text>
        button-icon-SVG-Mock
      </Text>
    </View>
  </View>
  <Text
    adjustsFontSizeToFit={false}
    numberOfLines={1}
    style={
      Array [
        Object {
          "color": "#eb0055",
          "fontFamily": "Montserrat-Bold",
          "fontSize": 12,
          "lineHeight": 20,
          "marginLeft": 4,
          "maxWidth": "100%",
        },
      ]
    }
  >
    J’ai dépensé tout mon crédit, que faire ?
  </Text>
</View>
`;

exports[`<CreditExplanation/> should render correctly for expired deposit 1`] = `
<View
  accessibilityLabel="Mon crédit est expiré, que faire ?"
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 24,
      "flexDirection": "row",
      "justifyContent": "flex-start",
      "maxWidth": 500,
      "minHeight": 40,
      "opacity": 1,
      "paddingBottom": 2,
      "paddingLeft": 2,
      "paddingRight": 2,
      "paddingTop": 2,
      "userSelect": "auto",
      "width": "100%",
    }
  }
  testID="explanationButton"
>
  <View
    style={
      Array [
        Object {
          "flexShrink": 0,
        },
      ]
    }
  >
    <View
      fill="#eb0055"
      height={16}
      testID="button-icon"
      width={16}
    >
      <Text>
        button-icon-SVG-Mock
      </Text>
    </View>
  </View>
  <Text
    adjustsFontSizeToFit={false}
    numberOfLines={1}
    style={
      Array [
        Object {
          "color": "#eb0055",
          "fontFamily": "Montserrat-Bold",
          "fontSize": 12,
          "lineHeight": 20,
          "marginLeft": 4,
          "maxWidth": "100%",
        },
      ]
    }
  >
    Mon crédit est expiré, que faire ?
  </Text>
</View>
`;

exports[`<CreditExplanation/> should render correctly for valid credit 1`] = `
<View
  accessibilityLabel="Pourquoi cette limite ?"
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 24,
      "flexDirection": "row",
      "justifyContent": "flex-start",
      "maxWidth": 500,
      "minHeight": 40,
      "opacity": 1,
      "paddingBottom": 2,
      "paddingLeft": 2,
      "paddingRight": 2,
      "paddingTop": 2,
      "userSelect": "auto",
      "width": "100%",
    }
  }
  testID="explanationButton"
>
  <View
    style={
      Array [
        Object {
          "flexShrink": 0,
        },
      ]
    }
  >
    <View
      fill="#eb0055"
      height={16}
      testID="button-icon"
      width={16}
    >
      <Text>
        button-icon-SVG-Mock
      </Text>
    </View>
  </View>
  <Text
    adjustsFontSizeToFit={false}
    numberOfLines={1}
    style={
      Array [
        Object {
          "color": "#eb0055",
          "fontFamily": "Montserrat-Bold",
          "fontSize": 12,
          "lineHeight": 20,
          "marginLeft": 4,
          "maxWidth": "100%",
        },
      ]
    }
  >
    Pourquoi cette limite ?
  </Text>
</View>
`;
