name: Tests e2e Browser Firefox

on:
  schedule:
    - cron: '5 4 * * *'

  workflow_dispatch:
    inputs:
      wdio-demo:
        type: boolean
        description: WebdriverIO demo - All other params will be ignored
        required: true
        default: false
      environment:
        type: environment
        description: Select the environment
        required: true
        default: staging
      build-local:
        type: boolean
        description: if true it will run the webapp locally
        default: false
      specs:
        type: string
        description: |
          Define specs for test execution. You can either specify a glob
          pattern to match multiple files at once or wrap a glob or set of
          paths into an array using "," delimiter to run them within a single worker process.
          [Default: run all tests]
        required: false

jobs:
  e2e-browser-firefox:
    env:
      CI: true
      DEV_TEST_SERVER_HOST: localhost
      DEV_TEST_SERVER_PORT: 3000
      DEV_TEST_SERVER_STARTUP_TIMEOUT_SEC: 60
      _FORCE_LOGS: 1
      # if inputs.* are not defined, it is because it is scheduled, and fallback here are for scheduled task
      WDIO_DEMO: ${{ inputs.wdio-demo || 'false' }}
      BUILD_LOCAL: ${{ inputs.build-local || 'true' }}
      ENVIRONMENT: ${{ inputs.environment || 'staging' }}
      SPECS: ${{ inputs.specs }}
      GITHUB_EVENT_NAME: ${{ github.event_name }}
      SLACK_WEB_HOOK_URL: ${{ secrets.E2E_SLACK_WEB_HOOK_URL }}
      # useful for Slack reports
      GITHUB_SERVER_URL: ${{ github.server_url }}
      GITHUB_RUN_ID: ${{ github.run_id }}
    runs-on: macos-latest
    environment: ${{ inputs.environment || 'staging' }}
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set LOCAL_IP environment variable
        run: echo LOCAL_IP=$(ifconfig | grep 'inet' | grep 'broadcast' | awk -F ' ' '{print $2}') >> $GITHUB_ENV

      - name: Show LOCAL_IP
        run: |
          ifconfig
          echo ${{ env.LOCAL_IP }}

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: yarn install

      - name: Download WebdriverIO demo
        if: ${{ env.WDIO_DEMO == 'true' }}
        run: ./scripts/install-e2e-wdio-demo.sh e2e/tests/wdio-demo

      - uses: browser-actions/setup-firefox@latest

      - name: Sets WDIO_BASE_URL for local or distributed Web app
        if: ${{ env.WDIO_DEMO == 'false' }}
        run: |
          if [[ "${{ env.BUILD_LOCAL }}" = "true" ]]; then
            echo "WDIO_BASE_URL=http://${{ env.DEV_TEST_SERVER_HOST }}:${{ env.DEV_TEST_SERVER_PORT }}" >> $GITHUB_ENV
          elif [[ "${{ env.ENVIRONMENT }}" = "testing" ]]; then
            echo "WDIO_BASE_URL=https://app.testing.passculture.team" >> $GITHUB_ENV
          elif [[ "${{ env.ENVIRONMENT }}" = "staging" ]]; then
            echo "WDIO_BASE_URL=https://app.staging.passculture.team" >> $GITHUB_ENV
          fi

      - name: Start Local dev server
        if: ${{ (env.WDIO_DEMO == 'false') && (env.BUILD_LOCAL == 'true') }}
        env:
          NODE_OPTIONS: '--openssl-legacy-provider --max-old-space-size=4096'
        run: |
          cwd=$(pwd)
          pushd "$cwd"
          nohup yarn start:web:${{ env.ENVIRONMENT }} \
            2>&1 > "$cwd/webpack-dev-server.log" &
          popd

      - name: Wait for local dev server
        if: ${{ (env.WDIO_DEMO == 'false') && (env.BUILD_LOCAL == 'true') }}
        timeout-minutes: 15
        run: |
          until curl --output /dev/null --silent --head --fail http://${{ env.LOCAL_IP }}:3000; do
            printf '.'
            sleep 5
          done

      - run: ENVIRONMENT="${{ env.ENVIRONMENT }}" yarn e2e:browser.firefox

      - name: Save geckodriver output
        if: ${{ always() }}
        uses: actions/upload-artifact@master
        with:
          name: logs-wdio-geckodriver
          path: logs/wdio-geckodriver.log

      - name: Show geckodriver server output
        if: ${{ always() }}
        run: cat logs/wdio-geckodriver.log

      - name: Save dev server output
        if: ${{ (always()) && (env.WDIO_DEMO == 'false') && (env.BUILD_LOCAL == 'local') }}
        uses: actions/upload-artifact@master
        with:
          name: webpack-dev-server-firefox
          path: webpack-dev-server.log

      - name: Show dev server output
        if: ${{ (always()) && (env.WDIO_DEMO == 'false') && (env.BUILD_LOCAL == 'local') }}
        run: cat webpack-dev-server.log

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: fail-screenshots-videos
          path: e2e/output
          if-no-files-found: ignore
