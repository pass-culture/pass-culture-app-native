name: '2 [on_workflow/PR] Deploy PR version for validation'

on:
  workflow_call:
    inputs:
      ENV:
        type: string
        required: true
      PUSH_RELEASE_TO_SENTRY:
        description: 'If true, creates a release in Sentry and uploads sourcemaps'
        type: boolean
        default: false
      CHANNEL:
        type: string
        required: true
      EXPIRES:
        type: string
        default: '3d'
      REF:
        type: string
        required: true
      CACHE_BUCKET_NAME:
        type: string
        required: true
    secrets:
      GCP_EHP_SERVICE_ACCOUNT:
        required: true
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true

defaults:
  run:
    working-directory: '.'

jobs:
  deploy_on_firebase:
    runs-on: ubuntu-24.04
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/checkout@v4.2.1
        with:
          ref: ${{ inputs.REF }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: 'OpenID Connect Authentication'
        id: 'openid-auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: 'Get Secret'
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            FIREBASE_TOKEN:passculture-metier-ehp/pc_native_${{ inputs.ENV }}_firebase_json
            SENTRY_TOKEN:passculture-metier-ehp/pcapi-native-sentry-saas-token
      - name: 'Cache the node_modules'
        id: 'yarn-modules-cache'
        uses: pass-culture-github-actions/cache@v1.0.0
        with:
          compression-method: 'gzip'
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: |
            **/node_modules
          key: v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn build:${{ inputs.ENV }}
        env:
          # By default NodeJS processes are limited to 512MB of memory
          # This is not enough for the build process when compiling sourcemaps
          # Increases the limit so that the build doesnt fail
          NODE_OPTIONS: --max_old_space_size=4096
      - if: inputs.ENV != 'testing'
        run: |
          cat package.json | grep -E '"version": "[0-9]+.[0-9]+.[0-9]+"' | grep -Eo '[0-9]+.[0-9]+.[0-9]+' > build/version.txt
      - name: 'Create Sentry release'
        if: ${{ inputs.PUSH_RELEASE_TO_SENTRY }}
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ steps.secrets.outputs.SENTRY_TOKEN }}
          SENTRY_ORG: pass-culture
          SENTRY_PROJECT: jeunes
        with:
          sourcemaps: ./build
          working_directory: .
          version: ${{ inputs.CHANNEL }}
          url_prefix: '~'
      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: firebase-deploy
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: ${{ steps.secrets.outputs.FIREBASE_TOKEN }}
          expires: ${{ inputs.EXPIRES }}
          projectId: pc-native-${{ inputs.ENV }}
          entryPoint: .
          channelId: ${{ inputs.CHANNEL }}
      - name: 'Firebase Deployment URL'
        run: |
          echo "::notice:: Firebase deployment is available at : ${{ steps.firebase-deploy.outputs.details_url }}"
