name: '4 [on_workflow] Deploy web'

on:
  workflow_call:
    inputs:
      ENV:
        type: string
        required: true
      BUCKET_NAME:
        type: string
        required: true
      CACHE_BUCKET_NAME:
        type: string
        required: true
    secrets:
      GCP_EHP_SERVICE_ACCOUNT:
        required: true
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true

jobs:
  web_deploy:
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.ENV }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: 'OpenID Connect Authentication'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: pass-culture-github-actions/cache@v1.0.0
        with:
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Yarn install
        run: yarn install
      - name: Authentification to Google
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Get Secret
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            SENTRY_AUTH_TOKEN:passculture-metier-ehp/passculture-app-native-sentry-token
      - name: Set up Cloud SDK to get gsutils
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 416.0.0'
      - name: 'Push debug log for testing'
        if: ${{ inputs.ENV == 'testing' }}
        run: |
          export SENTRY_LOG_LEVEL="debug"
      - name: 'Build web for input env'
        run: |
          NODE_OPTIONS='--max-old-space-size=4096' UPLOAD_SOURCEMAPS_TO_SENTRY=true yarn build:${{ inputs.ENV }}
      - name: 'Push assets to bucket'
        run: |
          gsutil rsync -x "index\.html$" -r dist gs://${{ inputs.BUCKET_NAME }}
      - name: 'Push index.html to bucket'
        run: |
          gsutil cp dist/index.html gs://${{ inputs.BUCKET_NAME }}
  slack_notify:
    runs-on: ubuntu-22.04
    if: ${{ contains(needs.web_deploy.result, 'success') && contains(needs.web_deploy.result, 'failure')}}
    needs: web_deploy
    steps:
      - name: Connect to Secret Manager
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Get secrets for Slack
        id: 'slack_secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # channel #alertes-deploiement-native
          channel-id: 'C0309RP8K42'
          payload: |
            {
              "attachments": [
                  {
                      "mrkdwn_in": ["text"],
                      "color": "${{ fromJSON('["#36a64f", "#A30002"]')[needs.web_deploy.result == 'failure'] }}",
                      "author_name": "${{github.actor}}",
                      "author_link": "https://github.com/${{github.actor}}",
                      "author_icon": "https://github.com/${{github.actor}}.png",
                      "title": "PCAPPNATIVE Deployment",
                      "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                      "text": "Le déploiement Web sur `${{ inputs.ENV }}` a ${{ fromJSON('["réussi :rocket:", "échoué :boom:"]')[needs.web_deploy.result == 'failure'] }}"
                  }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.slack_secrets.outputs.SLACK_BOT_TOKEN }}
