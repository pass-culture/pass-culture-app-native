name: Tester yaml

on:
  workflow_call:
    inputs:
      CACHE_BUCKET_NAME:
        type: string
        required: true
    secrets:
      GCP_EHP_SERVICE_ACCOUNT:
        required: true
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
jobs:
  yarn_test_web:
    runs-on: [self-hosted, linux, x64, big]
    steps:
      - uses: actions/checkout@v4
      - name: 'OpenID Connect Authentication'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: kopax-polyconseil/gcs-cache-action@v1.0.1
        with:
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: kopax-polyconseil/gcs-cache-action@v1.0.1
        with:
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: .jest/cache
          key: v1-yarn-test-web-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-test-web-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn test:unit:web:ci

  yarn_test_native:
    runs-on: [self-hosted, linux, x64, big]
    steps:
      - uses: actions/checkout@v4
      - name: 'OpenID Connect Authentication'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: kopax-polyconseil/gcs-cache-action@v1.0.1
        with:
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: kopax-polyconseil/gcs-cache-action@v1.0.1
        with:
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: .jest/cache
          key: v1-yarn-test-native-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-test-native-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn test:unit:ci
      - name: Get Secret
        id: 'sonar_secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            SONAR_TOKEN:passculture-metier-ehp/passculture-app-native-sonar-token
      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ steps.sonar_secrets.outputs.SONAR_TOKEN }}
        with:
          projectBaseDir: .
  yarn_test_proxy:
    runs-on: [self-hosted, linux, x64, big]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: 'OpenID Connect Authentication'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Cache the proxy node_modules
        id: yarn-modules-cache-proxy
        uses: kopax-polyconseil/gcs-cache-action@v1.0.1
        with:
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-proxy-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-proxy-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --immutable --cwd server
      - run: yarn --cwd server test:unit:ci
      - name: Get secrets for SonarCloud
        id: 'sonar_secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            SONAR_TOKEN:passculture-metier-ehp/passculture-app-native-sonar-token
      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ steps.sonar_secrets.outputs.SONAR_TOKEN }}
        with:
          projectBaseDir: server
  slack_notify:
    runs-on: [self-hosted, linux, x64, regular]
    if: ${{ always() && github.ref == 'refs/heads/master' }}
    needs:
      - yarn_test_native
      - yarn_test_proxy
      - yarn_test_web
    steps:
      - name: 'OpenID Connect Authentication'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Get secrets for Slack
        id: 'slack_secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-app-native-slack-token
      - uses: technote-space/workflow-conclusion-action@v3
        if: ${{ always() }}
      - name: Post to a Slack channel
        id: slack
        if: ${{ env.WORKFLOW_CONCLUSION == 'failure' }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # channel #alertes-deploiement-native
          channel-id: 'C0309RP8K42'
          payload: |
            {
              "attachments": [
                  {
                      "mrkdwn_in": ["text"],
                      "color": "${{ fromJSON('["#36a64f", "#A30002"]')[ env.WORKFLOW_CONCLUSION == 'failure'] }}",
                      "author_name": "${{github.actor}}",
                      "author_link": "https://github.com/${{github.actor}}",
                      "author_icon": "https://github.com/${{github.actor}}.png",
                      "title": "PCAPPNATIVE Deployment",
                      "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                      "text": "Les tests sur master ont échoué :boom:"
                  }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.slack_secrets.outputs.SLACK_BOT_TOKEN }}
