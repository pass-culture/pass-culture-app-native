name: '4 [on_pr] Lighthouse Web Performance test'

on:
  schedule:
    - cron: '0 22 * * 0' # At 10PM every Sunday

env:
  CACHE_BUCKET_NAME: passculture-infra-prod-github-runner-cache

jobs:
  lighthouse:
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: pass-culture-github-actions/cache@v1.0.0
        with:
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-dependency-lighthouse-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-dependency-lighthouse-cache-${{ hashFiles('**/yarn.lock') }}
          bucket: ${{ env.CACHE_BUCKET_NAME }}
          workload-identity-provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service-account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Run Lighthouse CI ðŸš€
        run: |
          yarn dlx @lhci/cli@0.14.0 autorun --collect.psiApiKey=${{ secrets.PAGE_SPEED_API_KEY }}
      - name: List files to verify report path
        run: ls -laR ./.lighthouseci
        if: always()
      - name: Log app version
        run: |
          APP_VERSION=$(jq --raw-output '.version' ./package.json)
          echo "App version is: $APP_VERSION"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit SHA: ${{ github.sha }}"
      - name: Parse and Log Lighthouse Results ðŸ“Š
        id: lighthouse_results
        run: |
          # Find the path of the first Lighthouse report
          REPORT_PATH=$(ls -1 .lighthouseci/lhr-*.json | head -n 1)
          echo "Parsing Lighthouse report: $REPORT_PATH"

          # Extract the summary score, which is a value from 0 to 1
          PERF_SCORE_DECIMAL=$(jq '.categories.performance.score' $REPORT_PATH)
          # Convert to a 0-100 scale and round it
          PERF_SCORE=$(printf "%.0f" $(echo "$PERF_SCORE_DECIMAL * 100" | bc))

          # Extract key metric values (the 'displayValue' is human-readable)
          FCP=$(jq --raw-output '.audits["first-contentful-paint"].displayValue' $REPORT_PATH)
          LCP=$(jq --raw-output '.audits["largest-contentful-paint"].displayValue' $REPORT_PATH)
          TBT=$(jq --raw-output '.audits["total-blocking-time"].displayValue' $REPORT_PATH)
          CLS=$(jq --raw-output '.audits["cumulative-layout-shift"].displayValue' $REPORT_PATH)

          # Log the results in a nicely formatted way
          echo "--- Lighthouse Performance Summary ---"
          echo "ðŸŸ¢ Performance Score: $PERF_SCORE / 100"
          echo " FCP: $FCP"
          echo " LCP: $LCP"
          echo " TBT: $TBT"
          echo " CLS: $CLS"
          echo "------------------------------------"

      - name: Upload lighthouse report to artifacts ðŸ”Ž
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-report
          path: ./.lighthouseci
          include-hidden-files: true
