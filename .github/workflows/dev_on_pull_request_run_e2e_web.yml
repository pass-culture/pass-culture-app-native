name: 'E2E Web SmokeTest'

on:
  push:

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  run_e2e_web:
    name: 'Smoke test Staging Web'
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Enable Corepack
        run: corepack enable
      - uses: pass-culture-github-actions/cache@v1.0.0
        id: yarn-modules-cache
        with:
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          bucket: ${{ secrets.CACHE_BUCKET_NAME }}
          workload-identity-provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service-account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}

      - name: Yarn install
        run: yarn install

      - name: Authentification to Google
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}

      - name: Get secrets for Maestro
        id: maestro_secrets
        uses: google-github-actions/get-secretmanager-secrets@v2
        with:
          secrets: |-
            MAESTRO_PASSWORD:passculture-metier-ehp/passculture-app-native-e2e-maestro-password
            MAESTRO_CLOUD_API_KEY:passculture-metier-ehp/passculture-app-native-e2e-maestro-cloud-api-key

      - name: Get latest Maestro version
        run: |
          MAESTRO_VERSION=$(curl -s https://api.github.com/repos/mobile-dev-inc/maestro/releases/latest | grep tag_name | cut -d '"' -f4 | sed 's/^cli-//;s/^v//')
          echo "MAESTRO_VERSION=$MAESTRO_VERSION" >> $GITHUB_ENV

      - name: Restore cache Maestro CLI
        id: maestro-cache
        uses: actions/cache@v4
        with:
          path: ~/.maestro
          key: ${{ runner.os }}-maestro-${{ env.MAESTRO_VERSION }}
          restore-keys: |
            ${{ runner.os }}-maestro-

      - name: Install Maestro CLI
        if: steps.maestro-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing Maestro CLI version ${MAESTRO_VERSION}..."
          curl --location --silent "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH
        env:
          MAESTRO_VERSION: ${{ env.MAESTRO_VERSION }}

      - name: Save Maestro CLI to cache if updated
        if: steps.maestro-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.maestro
          key: ${{ runner.os }}-maestro-${{ env.MAESTRO_VERSION }}
          restore-keys: |
            ${{ runner.os }}-maestro-

      - name: Add Maestro to PATH (from cache)
        if: steps.maestro-cache.outputs.cache-hit == 'true'
        run: |
          echo "Using cached Maestro CLI."
          export PATH=$HOME/.maestro/bin:$PATH
          maestro --version

      - name: Start Vite server
        run: yarn start:web:staging --host > /dev/null 2>&1 &

      - name: Run Maestro E2E Tests
        env:
          MAESTRO_PASSWORD: ${{ steps.maestro_secrets.outputs.MAESTRO_PASSWORD }}
          MAESTRO_CLOUD_API_KEY: ${{ steps.maestro_secrets.outputs.MAESTRO_CLOUD_API_KEY }}
          MAESTRO_VALID_IOS_EMAIL: dev-tests-e2e-ios@passculture.team
          MAESTRO_VALID_ANDROID_EMAIL: dev-tests-e2e-android@passculture.team
          MAESTRO_INVALID_EMAIL: dev-tests-e2e-invalid@passculture.team
          MAESTRO_UNREGISTERED_EMAIL: dev-tests-unregistered+e2e@passculture.team
          MAESTRO_RUN_TRACKING_TESTS: false
          MAESTRO_RUN_CLOUD_COMMANDS: false
        run: |
          echo "Running Maestro tests against on web Staging"
          export PATH=$HOME/.maestro/bin:$PATH
          yarn test:e2e:web:staging --headless

      - name: Upload Maestro artifacts (logs & screenshots)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-artifacts
          path: /home/runner/.maestro/tests/

  slack_notify:
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    if: always()
    needs: run_e2e_web
    steps:
      - name: Connect to Secret Manager
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Get secrets for Slack
        id: 'slack_secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          # channel #equipe-e2e-jeunes
          channel-id: 'C05MH81G9LY'
          payload: |
            {
              "attachments": [
                  {
                      "mrkdwn_in": ["text"],
                      "color": "${{ fromJSON('["#36a64f", "#A30002"]')[needs.run_e2e_web.result == 'failure'] }}",
                      "author_name": "${{github.actor}}",
                      "author_link": "https://github.com/${{github.actor}}",
                      "author_icon": "https://github.com/${{github.actor}}.png",
                      "title": "SMOKETEST E2E-WEB",
                      "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                      "text": "Le smoke test Web sur la branche `${{ github.ref_name }}` a ${{ fromJSON('["réussi :rocket:", "échoué :boom:"]')[needs.run_e2e_web.result == 'failure'] }}"
                  }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.slack_secrets.outputs.SLACK_BOT_TOKEN }}
