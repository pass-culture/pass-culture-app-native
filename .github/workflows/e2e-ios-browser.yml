name: Tests e2e iOS Safari

on:
  workflow_dispatch:
    inputs:
      wdio-demo:
        type: boolean
        description: WebdriverIO demo - All other params will be ignored
        required: true
        default: false
      environment:
        type: environment
        description: Select the environment
        required: true
        default: staging
      build-local:
        type: boolean
        description: if true it will run the webapp locally
        default: false
      specs:
        type: string
        description: |
          Define specs for test execution. You can either specify a glob
          pattern to match multiple files at once or wrap a glob or set of
          paths into an array using "," delimiter to run them within a single worker process.
          [Default: run all tests]
        required: false

jobs:
  e2e-ios-browser:
    strategy:
      matrix:
        include:
          - osVersion: '15.2'
            os: 'iOS'
            model: 'iPhone 13'
    env:
      CI: true
      APPIUM_TEST_SERVER_PORT: 4723
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      APPIUM_STARTUP_TIMEOUT_SEC: 30
      DEV_TEST_SERVER_HOST: localhost
      DEV_TEST_SERVER_PORT: 3000
      DEV_TEST_SERVER_STARTUP_TIMEOUT_SEC: 60
      _FORCE_LOGS: 1
      WDIO_DEMO: ${{ inputs.wdio-demo }}
      BUILD_LOCAL: ${{ inputs.build-local }}
      ENVIRONMENT: ${{ inputs.environment }}
      SPECS: ${{ inputs.specs }}
    runs-on: macos-11
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - uses: futureware-tech/simulator-action@v2
        with:
          model: ${{ matrix.model }}
          os: ${{ matrix.os }}
          os_version: ${{ matrix.os_version }}

      - name: Install dependencies
        run: yarn install

      - name: Download WebdriverIO demo
        if: ${{ env.WDIO_DEMO == 'true' }}
        run: ./scripts/install-e2e-wdio-demo.sh e2e/tests/wdio-demo

      - name: Install extraneous dev dependencies
        run: |
          npm config set legacy-peer-deps true
          npm install -g appium@next
          appium driver install xcuitest
          appium driver install safari

      - name: Sets WDIO_BASE_URL for local or distributed Web app
        if: ${{ env.WDIO_DEMO == 'false' }}
        run: |
          if [[ "${{ env.BUILD_LOCAL }}" = "true" ]]; then
            echo "WDIO_BASE_URL=http://${{ env.DEV_TEST_SERVER_HOST }}:${{ env.DEV_TEST_SERVER_PORT }}" >> $GITHUB_ENV
          elif [[ "${{ env.ENVIRONMENT }}" = "testing" ]]; then
            echo "WDIO_BASE_URL=https://app.testing.passculture.team" >> $GITHUB_ENV
          elif [[ "${{ env.ENVIRONMENT }}" = "staging" ]]; then
            echo "WDIO_BASE_URL=https://app.staging.passculture.team" >> $GITHUB_ENV
          fi

      ## Local

      - name: Start Local dev server ${{ inputs.environment }}
        if: ${{ (env.WDIO_DEMO == 'false') && (env.BUILD_LOCAL == 'true') }}
        run: |
          cwd=$(pwd)
          pushd "$cwd"
          nohup yarn start:web:${{ env.ENVIRONMENT }} \
            2>&1 > "$cwd/webpack-dev-server.log" &
          popd

      - run: |
          cwd=$(pwd)
          pushd "$cwd"
          cd ~
          nohup appium server \
            --port=$APPIUM_TEST_SERVER_PORT \
            --address=$APPIUM_TEST_SERVER_HOST \
            --relaxed-security \
            2>&1 > "$cwd/appium.log" &
          popd
        name: Start Appium server

      - name: Wait for Appium server startup
        run: |
          seconds_started=$(date +%s)
          while ! nc -z $APPIUM_TEST_SERVER_HOST $APPIUM_TEST_SERVER_PORT; do
            sleep 0.1
            seconds_elapsed=$(( $(date +%s) - seconds_started ))
            if [[ $seconds_elapsed -gt $APPIUM_STARTUP_TIMEOUT_SEC ]]; then
              echo "Appium server was unable to start within $APPIUM_STARTUP_TIMEOUT_SEC seconds timeout"
              exit 1
            fi
          done

      - run: yarn e2e:ios.browser
        name: Run functional tests

      - name: Save server output
        if: ${{ always() }}
        uses: actions/upload-artifact@master
        with:
          name: appium-${{ matrix.osVersion }}
          path: appium.log

      - name: Show appium server output
        if: ${{ always() }}
        run: cat appium.log

      - name: Save dev server output
        if: ${{ (always()) && (env.WDIO_DEMO == 'false') && (env.BUILD_LOCAL == 'local') }}
        uses: actions/upload-artifact@master
        with:
          name: webpack-dev-server-${{ matrix.osVersion }}
          path: webpack-dev-server.log

      - name: Show dev server output
        if: ${{ (always()) && (env.WDIO_DEMO == 'false') && (env.BUILD_LOCAL == 'local') }}
        run: cat webpack-dev-server.log
