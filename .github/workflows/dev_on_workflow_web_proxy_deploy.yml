name: Deploy web proxy

on:
  workflow_call:
    inputs:
      ENV:
        type: string
        required: true
      CACHE_BUCKET_NAME:
        type: string
        required: true
    secrets:
      GCP_EHP_SERVICE_ACCOUNT:
        required: true
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      GCP_PROD_SERVICE_ACCOUNT:
      GCP_PROD_WORKLOAD_IDENTITY_PROVIDER:


jobs:
  web_proxy_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Cloud SDK to get gsutils
        uses: 'google-github-actions/setup-gcloud@v1.1.0'
        with:
          version: '>= 416.0.0'
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'server/.nvmrc'
      - id: gcloud-auth
        name: "OpenID Connect Authentication"
        uses: 'google-github-actions/auth@v1'
        with:
          cleanup_credentials: false
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: Cache the proxy node_modules
        id: yarn-modules-cache-proxy
        uses: pass-culture-github-actions/cache@v1.0.0
        with:
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-proxy-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-proxy-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - name: Install package for proxy
        run: yarn install --immutable --cwd server
      - name: Get Secret
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            SENTRY_AUTH_TOKEN:passculture-metier-ehp/passculture-app-native-sentry-token
      - name: Switch to google prod account for prod
        if: ${{ inputs.ENV == 'production' }}
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_PROD_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_PROD_SERVICE_ACCOUNT }}
      - name: 'Push proxy for input env'
        run: yarn --cwd server deploy:${{ inputs.ENV }}

      - name: 'Clear unused apps'
        run: |
          gcloud app versions list --service=web-proxy-${{ inputs.ENV }} --format="table[no-heading](id)" \
            | grep -v $(gcloud app versions list --service=web-proxy-${{ inputs.ENV }} --hide-no-traffic --format="table[no-heading](id)") \
            | xargs gcloud app versions delete --service=web-proxy-${{ inputs.ENV }}
  slack_notify:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: web_proxy_deploy
    steps:
      - name: Connect to Secret Manager
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Get secrets for Slack
        id: 'slack_secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token
      - name: Post to a Slack channel
        id: slack
        if: ${{ steps.web_proxy_deploy.outputs.status == 'failure' || inputs.ENV == 'staging' }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # channel #alertes-deploiement-native
          channel-id: 'C0309RP8K42'
          payload: |
            {
              "attachments": [
                  {
                      "mrkdwn_in": ["text"],
                      "color": "${{ fromJSON('["#36a64f", "#A30002"]')[steps.web_proxy_deploy.outputs.status == 'failure'] }}",
                      "author_name": "${{github.actor}}",
                      "author_link": "https://github.com/${{github.actor}}",
                      "author_icon": "https://github.com/${{github.actor}}.png",
                      "title": "PCAPPNATIVE Deployment",
                      "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                      "text": "Le déploiement Web proxy sur `${{ inputs.ENV }}` a ${{ fromJSON('["réussi :rocket:", "échoué :boom:"]')[steps.web_proxy_deploy.outputs.status == 'failure'] }}"
                  }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.slack_secrets.outputs.SLACK_BOT_TOKEN }}
