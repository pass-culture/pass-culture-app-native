name: '4 [on_workflow] Android deploy'

on:
  workflow_call:
    inputs:
      CACHE_BUCKET_NAME:
        type: string
        required: true
      ENV:
        type: string
        required: true
    secrets:
      GCP_EHP_SERVICE_ACCOUNT:
        required: true
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true

jobs:
  sentry_and_deploy:
    name: 'Install runtime environment and dependencies Android deploy'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - uses: pass-culture-github-actions/cache@v1.0.0
        id: yarn-modules-cache
        with:
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          workload-identity-provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service-account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Yarn install
        run: yarn install
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Authentification to Google
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Get Secret
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            ANDROID_APPCENTER_API_TOKEN:passculture-metier-ehp/passculture-app-native-android-${{ inputs.ENV }}-token
            ANDROID_GOOGLE_SERVICES_JSON:passculture-metier-ehp/passculture-app-native-android-google-service-json
            ANDROID_KEYSTORE_STORE_PASSWORD:passculture-metier-ehp/passculture-app-native-android-${{ inputs.ENV }}-keystore-store-password
            ANDROID_KEYSTORE_KEY_PASSWORD:passculture-metier-ehp/passculture-app-native-android-${{ inputs.ENV }}-keystore-key-password
            ANDROID_KEYSTORE:passculture-metier-ehp/passculture-app-native-${{ inputs.ENV }}-keystore
            ANDROID_PLAYSTORE_SERVICE_ACCOUNT:passculture-metier-ehp/passculture-app-native-android-production-service-account
            SENTRY_AUTH_TOKEN:passculture-metier-ehp/passculture-app-native-sentry-token
      - name: 'Render Sentry Template'
        id: render_template
        uses: chuhlomin/render-template@v1.9
        with:
          template: templates_github_ci/.sentryclirc
          vars: |
            token: ${{ steps.secrets.outputs.SENTRY_AUTH_TOKEN }}
          result_path: .sentryclirc
      - name: Create a directory for keystores
        run: |
          mkdir --parents android/keystores/
      - name: Setup android keystore for ${{ inputs.ENV }} environment
        run: |
          echo '${{ steps.secrets.outputs.ANDROID_KEYSTORE }}' |  base64 --decode > android/keystores/${{ inputs.ENV }}.keystore
      - name: Setup android keystore properties for ${{ inputs.ENV }} environment
        uses: chuhlomin/render-template@v1.9
        with:
          template: templates_github_ci/${{ inputs.ENV }}.keystore.properties
          vars: |
            ENVIRONMENT: ${{ inputs.ENV }}
            ANDROID_KEYSTORE_STORE_PASSWORD: ${{ steps.secrets.outputs.ANDROID_KEYSTORE_STORE_PASSWORD }}
            ANDROID_KEYSTORE_KEY_PASSWORD: ${{ steps.secrets.outputs.ANDROID_KEYSTORE_KEY_PASSWORD }}
          result_path: android/keystores/${{ inputs.ENV }}.keystore.properties
      - name: Setup android Google services config
        run: echo '${{ steps.secrets.outputs.ANDROID_GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
      - name: Setup android Google services config
        run: echo '${{ steps.secrets.outputs.ANDROID_PLAYSTORE_SERVICE_ACCOUNT }}' > fastlane/playStoreServiceAccount.json
      - name: Deploy hard android for ${{ inputs.ENV }}
        run: |
          bundle exec fastlane android deploy --env ${{ inputs.ENV }} --verbose
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          ANDROID_APPCENTER_API_TOKEN: ${{ steps.secrets.outputs.ANDROID_APPCENTER_API_TOKEN }}
      - name: Create Sentry sourcemaps
        run: bash -c 'source scripts/upload_sourcemaps_to_sentry.sh;upload_sourcemaps "android" ${{ inputs.ENV }}'

  slack_notify:
    needs: sentry_and_deploy
    uses: ./.github/workflows/dev_on_workflow_slack_notify.yml
    with:
      ENV: passculture-infra-prod-github-runner-cache
      status: steps.sentry_and_deploy.outputs.status
      message: 'Le d√©ploiement Android sur `${{ inputs.ENV }}`'
    secrets:
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
