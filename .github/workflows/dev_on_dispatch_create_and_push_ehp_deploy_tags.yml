name: '1 [on_dispatch][Jira] Create/Push ehp deploy tags'

on:
  workflow_dispatch:
    inputs:
      commitHash:
        description: 'Hash du commit Ã  dÃ©ployer (ex: cadd172232c80206107e2f0122542adf19fb42af)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write
  actions: write

jobs:
  create_and_push_staging_tag:
    name: 'Create and push staging tag'
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: 'Authentification to Google'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Authenticate through github app ghactionci
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: github-app-token
        with:
          app-id: ${{ secrets.PASSCULTURE_GITHUB_ACTION_APP_ID }}
          private-key: ${{ secrets.PASSCULTURE_GITHUB_ACTION_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            pass-culture-app-native
          permission-contents: write
          permission-actions: write
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.github-app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
      - run: |
          git config --global user.name '${{ steps.github-app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.github-app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/${{ github.repository_owner }}/pass-culture-app-native.git
      - name: 'Checkout commit hash'
        uses: actions/checkout@v4
        with:
          token: ${{ steps.github-app-token.outputs.token }}
          ref: ${{ inputs.commitHash }}
      - name: 'get package version'
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: 'Create and push tag from package version'
        id: create_tag
        run: |
          STAGING_VERSION=${{ steps.package-version.outputs.current-version }}
          TAG_NAME=v${STAGING_VERSION}
          git tag --annotate "$TAG_NAME" --message "ðŸš€ $TAG_NAME"
          git push origin "$TAG_NAME"
  create_and_push_testing_tag:
    name: 'Create and push testing tag'
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: 'Authentification to Google'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Authenticate through github app ghactionci
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: github-app-token
        with:
          app-id: ${{ secrets.PASSCULTURE_GITHUB_ACTION_APP_ID }}
          private-key: ${{ secrets.PASSCULTURE_GITHUB_ACTION_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            pass-culture-app-native
          permission-contents: write
          permission-actions: write
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.github-app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
      - run: |
          git config --global user.name '${{ steps.github-app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.github-app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/${{ github.repository_owner }}/pass-culture-app-native.git
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.github-app-token.outputs.token }}
          ref: master
      - name: 'Bump package version'
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target-branch: 'master'
          version-type: 'minor'
          skip-commit: 'true'
          skip-tag: 'true'
          skip-push: 'true'
      - name: 'Bump server package version'
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: 'server'
        with:
          target-branch: 'master'
          version-type: 'minor'
          skip-commit: 'true'
          skip-tag: 'true'
          skip-push: 'true'
      - name: 'Get package version'
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: 'Bump build number'
        id: build-number
        run: |
          # We have to increment the build number because it is used as the versionCode
          # in app/build.gradle: versionCode (packageJson.build as Integer) and the
          # Play Store requires this value to be strictly increasing. Otherwise, we get this error:

          # ERROR Google Api Error: forbidden: You cannot rollout this release because it does not allow
          # any existing users to upgrade to the newly added APKs.

          # As such, since the current version is 10136027 = 1 * 10_000_000 + 136 * 1_000 + 27, we build each new version
          # as the sum of:
          #  + 10_000_000 * MAJOR,
          #  + 1_000 * MINOR,
          #  + PATCH
          # where <VERSION> = <MAJOR>.<MINOR>.<PATCH> (ex: 1.137.3) as we use semantic versioning.

          # Examples:
          #   1.136.27 => 10 000 000 + 136 000 + 027 => 10136027
          #   1.137.1  => 10 000 000 + 137 000 + 001 => 10137001

          TESTING_VERSION=${{ steps.package-version.outputs.current-version }}
          SEMVER=(${TESTING_VERSION//./ })
          MAJOR=${SEMVER[0]}
          MINOR=${SEMVER[1]}
          PATCH=${SEMVER[2]}
          BUILD_NUMBER=$((10000000 * MAJOR + 1000 * MINOR + PATCH))
          echo build_number=$BUILD_NUMBER >> $GITHUB_OUTPUT
      - name: 'Update build number in package.json'
        uses: sergeysova/jq-action@v2
        with:
          cmd: jq '.build = ${{ steps.build-number.outputs.build_number }}' package.json > tmp && mv tmp package.json
      - name: 'Get routes used by app version'
        run: |
          TESTING_VERSION=${{ steps.package-version.outputs.current-version }}
          ./scripts/get_used_routes.sh "v${TESTING_VERSION}"
      - name: 'Commit changes'
        run: |
          TESTING_VERSION=${{ steps.package-version.outputs.current-version }}
          git add package.json server/package.json route_usage_changelog.md
          git commit --message "v${TESTING_VERSION}"
          git push origin master
      - name: 'Create and push testing tag'
        run: |
          TESTING_VERSION=${{ steps.package-version.outputs.current-version }}
          TAG_NAME=testing/v${TESTING_VERSION}
          git tag --annotate "$TAG_NAME" --message "ðŸš€ $TAG_NAME"
          git push origin "$TAG_NAME"
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
